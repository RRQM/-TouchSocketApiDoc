<!DOCTYPE html ><html lang="zh-CN"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><link rel="stylesheet" href="../css/zh-CN.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>DmtpAdapter 类</title><meta name="Title" content="DmtpAdapter" /><meta name="Help.Id" content="T:TouchSocket.Dmtp.DmtpAdapter" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="TouchSocket.Dmtp" /><meta name="guid" content="b011d425-4c90-bf03-bf14-bd8fb154dee2" /><meta name="Description" content="DmtpAdapter" /><meta name="tocFile" content="../toc/IDE.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">TouchSocket手册</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><div id="HeaderPrelimContainer" class="level my-1 px-2"><div id="HeaderTextContainer" class="level-left"><div class="level-item"><span class="has-text-grey-light">一款简单易用的基础网络通讯组件库。</span></div></div></div><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Dmtp<wbr />Adapter 类</h1><div class="summary">
            DmtpAdapter
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>命名空间：</strong> <a href="efc93c14-3d45-c826-b03a-3a54da781746.htm">TouchSocket.Dmtp</a><br /><strong>程序集：</strong> TouchSocket.Dmtp (在 TouchSocket.Dmtp.dll 中) 版本：2.0.0+066bf083954fb89f08496aac7db281817c0ab854<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="复制"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>复制</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">DmtpAdapter</span> : <span class="identifier">CustomFixedHeaderByteBlockDataHandlingAdapter</span>&lt;<span class="identifier">DmtpMessage</span>&gt;</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="复制"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>复制</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">DmtpAdapter</span>
	<span class="keyword">Inherits</span> <span class="identifier">CustomFixedHeaderByteBlockDataHandlingAdapter</span>(<span class="keyword">Of</span> <span class="identifier">DmtpMessage</span>)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="复制"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>复制</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs"><span class="keyword">type</span> <span class="identifier">DmtpAdapter</span> = 
    <span class="keyword">class</span>
        <span class="keyword">inherit</span> <span class="identifier">CustomFixedHeaderByteBlockDataHandlingAdapter</span>&lt;<span class="identifier">DmtpMessage</span>&gt;
    <span class="keyword">end</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><span class="noLink">Object</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="3f14012e-c265-8f7a-ec3b-ec8e47842ef2.htm">DataHandlingAdapter</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="dae1c470-a2a6-973e-d5e0-ed1112000e13.htm">CustomDataHandlingAdapter</a><span id="LST3B245399_0" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="8270db6b-d340-e859-84d5-82500e500214.htm">DmtpMessage</a><span id="LST3B245399_1" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="f5a755ee-f5f7-81b3-8ac5-b6202deb2402.htm">CustomFixedHeaderByteBlockDataHandlingAdapter</a><span id="LST3B245399_2" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="8270db6b-d340-e859-84d5-82500e500214.htm">DmtpMessage</a><span id="LST3B245399_3" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">DmtpAdapter</span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>构造函数</h2><div id="ID4EASection"><table id="ConstructorList" class="table is-hoverable"><tr><td><a href="e2a242be-8501-af86-7517-0384b280ab81.htm">DmtpAdapter</a></td><td>初始化 <span class="selflink">DmtpAdapter</span> 类的一个新实例</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>属性</h2><div id="ID0CB0EASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="86db6b58-435e-3548-8085-dc945dda4a90.htm">CacheTimeout</a></td><td>
            缓存超时时间。默认1秒。
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="9524c46b-229d-47a4-53ca-00c02e98762c.htm">CacheTimeoutEnable</a></td><td>
            是否启用缓存超时。默认false。
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="17b2cf22-a692-f71b-785e-7deade571f54.htm">CanSendRequestInfo</a></td><td>
    
            是否允许发送<a href="17dd39d9-0800-5550-b832-47208e5371b6.htm">IRequestInfo</a>对象。
            
  <br />(重写 <a href="f69d977b-c00f-c493-26cf-2ee010375425.htm">CustomDataHandlingAdapter<span id="LST3B245399_4" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TRequest<span id="LST3B245399_5" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span><span id="LST3B245399_6" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>CanSendRequestInfo</a>)</td></tr><tr><td><a href="2373201d-c598-af3f-3805-fbeb90dd9edf.htm">CanSplicingSend</a></td><td>
            默认不支持拼接发送
            <br />(重写 <a href="92fa2aba-f184-7f9c-3263-9b5bd64d5c3a.htm">CustomDataHandlingAdapter<span id="LST3B245399_7" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TRequest<span id="LST3B245399_8" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span><span id="LST3B245399_9" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>CanSplicingSend</a>)</td></tr><tr><td><a href="22e3748a-13bf-513c-292d-ae214df7cc93.htm">DisposedValue</a></td><td>
    
            标识该对象是否已被释放
            
  <br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><a href="91155e28-0e31-68ab-f4e0-1d62a7a3606e.htm">HeaderLength</a></td><td>
            固定包头的长度。
            <br />(重写 <a href="d4111db4-0ac6-eed9-a658-f9a67b61841e.htm">CustomFixedHeaderByteBlockDataHandlingAdapter<span id="LST3B245399_10" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TFixedHeaderRequestInfo<span id="LST3B245399_11" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span><span id="LST3B245399_12" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>HeaderLength</a>)</td></tr><tr><td><a href="6ea6ca7a-a672-3e85-6199-9d37e3af828a.htm">LastCacheTime</a></td><td>
            最后缓存的时间
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="e986cf1b-4cca-11c9-f3b5-e4803468bf99.htm">Logger</a></td><td>
            日志记录器。
            <br />(继承自 <a href="3f14012e-c265-8f7a-ec3b-ec8e47842ef2.htm">DataHandlingAdapter</a>。)</td></tr><tr><td><a href="14c712c2-a7a6-f20c-82a8-962cf82513d8.htm">MaxPackageSize</a></td><td>
            获取或设置适配器能接收的最大数据包长度。默认1024*1024 Byte。
            <br />(继承自 <a href="3f14012e-c265-8f7a-ec3b-ec8e47842ef2.htm">DataHandlingAdapter</a>。)</td></tr><tr><td><a href="98a56170-a1ba-9f89-f358-4912e57fbab4.htm">Owner</a></td><td>
            适配器所有者
            <br />(继承自 <a href="3f14012e-c265-8f7a-ec3b-ec8e47842ef2.htm">DataHandlingAdapter</a>。)</td></tr><tr><td><a href="827817a1-7649-9994-c209-577a1327768b.htm">ReceivedCallBack</a></td><td>
            当接收数据处理完成后，回调该函数执行接收
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="41369c33-1cc5-465f-396b-2a90c6130a96.htm">SendAsyncCallBack</a></td><td>
            当发送数据处理完成后，回调该函数执行异步发送
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="5af8d716-d689-5692-e638-ed13480102af.htm">SendCallBack</a></td><td>
            当发送数据处理完成后，回调该函数执行发送
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="59bc292d-2c55-feb4-af43-38d901303afb.htm">UpdateCacheTimeWhenRev</a></td><td>
            是否在收到数据时，即刷新缓存时间。默认true。
            <ol><li>当设为true时，将弱化<a href="86db6b58-435e-3548-8085-dc945dda4a90.htm">CacheTimeout</a>的作用，只要一直有数据，则缓存不会过期。</li><li>当设为false时，则在<a href="86db6b58-435e-3548-8085-dc945dda4a90.htm">CacheTimeout</a>的时效内。必须完成单个缓存的数据。</li></ol><br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>方法</h2><div id="IDJEASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="e55366a7-567d-9b9d-7eda-80fb4d5d4b0e.htm">Dispose<span id="LST3B245399_13" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            释放资源。内部已经处理了<span class="noLink">SuppressFinalize(Object)</span><br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><a href="a2d7fd90-4cf5-018a-ceeb-3b7c8b49bf9a.htm">Dispose(Boolean)</a></td><td>
    
            调用释放，切换释放状态。
            
  <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><span class="noLink">Equals</span></td><td>Determines whether the specified object is equal to the current object.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><a href="15ccc22e-305a-8d3d-bf4c-d08e6a1fd819.htm">Filter</a></td><td>
            筛选解析数据。实例化的TRequest会一直保存，直至解析成功，或手动清除。
            <p>当不满足解析条件时，请返回<a href="75f9b9ff-f016-b25e-aa23-8955964f8119.htm">Cache</a>，此时会保存<a href="027c7259-39e0-9587-ecf9-87f98f1c3c2a.htm">CanReadLen</a>的数据</p><p>当数据部分异常时，请移动<a href="b5151504-0bb0-12c3-0a79-651f9407834d.htm">Pos</a>到指定位置，然后返回<a href="75f9b9ff-f016-b25e-aa23-8955964f8119.htm">GoOn</a></p><p>当完全满足解析条件时，请返回<a href="75f9b9ff-f016-b25e-aa23-8955964f8119.htm">Success</a>最后将<a href="b5151504-0bb0-12c3-0a79-651f9407834d.htm">Pos</a>移至指定位置。</p><br />(继承自 <a href="f5a755ee-f5f7-81b3-8ac5-b6202deb2402.htm">CustomFixedHeaderByteBlockDataHandlingAdapter<span id="LST3B245399_14" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TFixedHeaderRequestInfo<span id="LST3B245399_15" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>。)</td></tr><tr><td><span class="noLink">Finalize</span></td><td>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><span class="noLink">GetHashCode</span></td><td>Serves as the default hash function.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><a href="ae26a88c-e8dd-8b4e-2ee1-dd26dea88bd7.htm">GetInstance</a></td><td>
            获取泛型实例。
            <br />(重写 <a href="0cab8b87-39a5-ca08-096a-8c43ed9800f1.htm">CustomFixedHeaderByteBlockDataHandlingAdapter<span id="LST3B245399_16" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TFixedHeaderRequestInfo<span id="LST3B245399_17" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span><span id="LST3B245399_18" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>GetInstance<span id="LST3B245399_19" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>)</td></tr><tr><td><span class="noLink">GetType</span></td><td>Gets the <span class="noLink">Type</span> of the current instance.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><a href="eabfe2ba-4606-4b16-ca8a-b8a200616bb4.htm">GoReceived</a></td><td>
            处理已经经过预先处理后的数据
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="0f182129-990a-d288-6a55-eb81ba29a263.htm">GoSend</a></td><td>
            发送已经经过预先处理后的数据
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="ab00f350-99f6-ad3d-1df6-f4e727b2bcd0.htm">GoSendAsync</a></td><td>
            异步发送已经经过预先处理后的数据
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><span class="noLink">MemberwiseClone</span></td><td>Creates a shallow copy of the current <span class="noLink">Object</span>.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><a href="b0862330-2219-0344-84c5-92863fdc12e2.htm">OnError</a></td><td>
            在解析时发生错误。
            <br />(继承自 <a href="3f14012e-c265-8f7a-ec3b-ec8e47842ef2.htm">DataHandlingAdapter</a>。)</td></tr><tr><td><a href="2197dcff-981d-168c-912e-e928b952fa54.htm">OnLoaded</a></td><td>
            当适配器在被第一次加载时调用。
            <br />(继承自 <a href="3f14012e-c265-8f7a-ec3b-ec8e47842ef2.htm">DataHandlingAdapter</a>。)</td></tr><tr><td><a href="d4a1f213-8d3a-7982-b049-2d8d98400a32.htm">OnReceivedSuccess</a></td><td>
            成功执行接收以后。
            <br />(重写 <a href="ad030f70-e3f3-98b8-066b-b75d22d26e30.htm">CustomDataHandlingAdapter<span id="LST3B245399_20" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TRequest<span id="LST3B245399_21" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span><span id="LST3B245399_22" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>OnReceivedSuccess(TRequest)</a>)</td></tr><tr><td><a href="1f2cd3ea-008d-4b0f-642c-315a524417cb.htm">OnReceivingSuccess</a></td><td>
            即将执行<a href="eabfe2ba-4606-4b16-ca8a-b8a200616bb4.htm">GoReceived(ByteBlock, IRequestInfo)</a>。
            <br />(继承自 <a href="dae1c470-a2a6-973e-d5e0-ed1112000e13.htm">CustomDataHandlingAdapter<span id="LST3B245399_23" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TRequest<span id="LST3B245399_24" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>。)</td></tr><tr><td><a href="e3b98ce6-3d13-f868-a204-88353dcc71ec.htm">PreviewReceived</a></td><td>
    
            当接收到数据后预先处理数据,然后调用<a href="eabfe2ba-4606-4b16-ca8a-b8a200616bb4.htm">GoReceived(ByteBlock, IRequestInfo)</a>处理数据
            
  <br />(继承自 <a href="dae1c470-a2a6-973e-d5e0-ed1112000e13.htm">CustomDataHandlingAdapter<span id="LST3B245399_25" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TRequest<span id="LST3B245399_26" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>。)</td></tr><tr><td><a href="778cd210-2e52-aa71-1d18-ed94b78e0e07.htm">PreviewSend(IList<span id="LST3B245399_27" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ArraySegment<span id="LST3B245399_28" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST3B245399_29" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST3B245399_30" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            组合发送预处理数据，
            当属性SplicingSend实现为True时，系统才会调用该方法。
            <br />(重写 <a href="bdd91572-414b-863d-ca43-a7d314a3c52d.htm">SingleStreamDataHandlingAdapter<span id="LST3B245399_31" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>PreviewSend(IList<span id="LST3B245399_32" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ArraySegment<span id="LST3B245399_33" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST3B245399_34" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST3B245399_35" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>)</td></tr><tr><td><a href="89102383-e2df-b419-cd1f-d107c860c29e.htm">PreviewSend(IRequestInfo)</a></td><td>
            当发送数据前预先处理数据
            <br />(重写 <a href="669fce58-bf12-7103-f1ab-18f8b2790621.htm">SingleStreamDataHandlingAdapter<span id="LST3B245399_36" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>PreviewSend(IRequestInfo)</a>)</td></tr><tr><td><a href="e4d6c2ad-b077-efd1-a166-2bd2babff092.htm">PreviewSend(<span id="LST3B245399_37" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST3B245399_38" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
    
            当发送数据前预先处理数据
            
  <br />(继承自 <a href="dae1c470-a2a6-973e-d5e0-ed1112000e13.htm">CustomDataHandlingAdapter<span id="LST3B245399_39" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TRequest<span id="LST3B245399_40" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>。)</td></tr><tr><td><a href="52a9a2ba-af49-d6b2-f7a2-b17c3505b443.htm">PreviewSendAsync(IList<span id="LST3B245399_41" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ArraySegment<span id="LST3B245399_42" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST3B245399_43" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST3B245399_44" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            组合发送预处理数据，
            当属性SplicingSend实现为True时，系统才会调用该方法。
            <br />(重写 <a href="bc0c06be-48a9-87e1-3d4d-0bd219e7662f.htm">SingleStreamDataHandlingAdapter<span id="LST3B245399_45" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>PreviewSendAsync(IList<span id="LST3B245399_46" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ArraySegment<span id="LST3B245399_47" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST3B245399_48" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST3B245399_49" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>)</td></tr><tr><td><a href="0c3ed6c2-81db-d894-66b0-a40fdce13c61.htm">PreviewSendAsync(IRequestInfo)</a></td><td>
            当发送数据前预先处理数据
            <br />(重写 <a href="5eb3ac12-02ca-01e9-cb64-a959287ab9a3.htm">SingleStreamDataHandlingAdapter<span id="LST3B245399_50" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>PreviewSendAsync(IRequestInfo)</a>)</td></tr><tr><td><a href="0c9b8036-823b-eaa0-44b3-080d361482ed.htm">PreviewSendAsync(<span id="LST3B245399_51" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST3B245399_52" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            当发送数据前预先处理数据
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="010c6b06-979e-c81c-9c97-2fe043bfdaac.htm">ReceivedInput</a></td><td>
            收到数据的切入点，该方法由框架自动调用。
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="bc87b51d-21f5-4ba8-d67d-fbb25c7d9f0b.htm">Reset</a></td><td>
    
            重置解析器到初始状态，一般在<a href="b0862330-2219-0344-84c5-92863fdc12e2.htm">OnError(Exception, String, Boolean, Boolean)</a>被触发时，由返回值指示是否调用。
            
  <br />(继承自 <a href="dae1c470-a2a6-973e-d5e0-ed1112000e13.htm">CustomDataHandlingAdapter<span id="LST3B245399_53" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TRequest<span id="LST3B245399_54" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>。)</td></tr><tr><td><a href="816f55c4-3a06-ee7e-b5f1-e228b6b1ac1d.htm">SendInput(IList<span id="LST3B245399_55" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ArraySegment<span id="LST3B245399_56" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST3B245399_57" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST3B245399_58" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            发送数据的切入点，该方法由框架自动调用。
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="66a61cae-9b05-c4ff-51af-dd455d505af0.htm">SendInput(IRequestInfo)</a></td><td>
            发送数据的切入点，该方法由框架自动调用。
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="5fc8243d-22fa-b456-f259-df3921526868.htm">SendInput(<span id="LST3B245399_59" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST3B245399_60" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            发送数据的切入点，该方法由框架自动调用。
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="116a89fe-989a-0ce2-7afe-0ade5da9f084.htm">SendInputAsync(IList<span id="LST3B245399_61" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ArraySegment<span id="LST3B245399_62" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST3B245399_63" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST3B245399_64" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            发送数据的切入点，该方法由框架自动调用。
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="538bab4b-2de8-b3cf-47fd-bee5502222d0.htm">SendInputAsync(IRequestInfo)</a></td><td>
            发送数据的切入点，该方法由框架自动调用。
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="a06cbca4-a9b2-9e92-cb7d-63d2b6d9519f.htm">SendInputAsync(<span id="LST3B245399_65" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST3B245399_66" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            发送数据的切入点，该方法由框架自动调用。
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="b822d86e-7ba1-f472-e7bf-b0e3c060d1b9.htm">ThrowIfDisposed</a></td><td>
            判断是否已经被释放，如果是，则抛出异常。
            <br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><span class="noLink">ToString</span></td><td>Returns a string that represents the current object.<br />(继承自 <span class="noLink">Object</span>。)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>字段</h2><div id="IDGEASection"><table id="FieldList" class="table is-hoverable"><tr><td><a href="17dc2f1f-4a9b-8cd7-f5b0-c02d4950cefa.htm">MaxSplicing</a></td><td>
            最大拼接
            </td></tr><tr><td><a href="7c00a933-9b34-ff64-dfef-a135e709a535.htm">TempByteBlock</a></td><td>
            缓存数据，如果需要手动释放，请先判断，然后到调用<span class="noLink">Dispose<span id="LST3B245399_67" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>后，再置空；
            <br />(继承自 <a href="dae1c470-a2a6-973e-d5e0-ed1112000e13.htm">CustomDataHandlingAdapter<span id="LST3B245399_68" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TRequest<span id="LST3B245399_69" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>。)</td></tr><tr><td><a href="81b01f16-7b9c-52b3-97ba-f3498713fe53.htm">TempRequest</a></td><td>
            缓存对象。
            <br />(继承自 <a href="dae1c470-a2a6-973e-d5e0-ed1112000e13.htm">CustomDataHandlingAdapter<span id="LST3B245399_70" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TRequest<span id="LST3B245399_71" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>。)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>扩展方法</h2><div id="IDAEASection"><table id="ExtensionList" class="table is-hoverable"><tr><td><a href="be113a0d-6f9b-cd4d-7492-f9e899d24292.htm">Config</a></td><td>
            将<a href="29d74253-acee-8ac7-c0b0-b71ff3e3a71e.htm">TouchSocketConfig</a>中的配置，装载在<a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>上。
            <br />(由 <a href="bbb6fb07-9e65-636e-723d-7c18cc7337d3.htm">DataHandlingAdapterExtension</a> 定义。)</td></tr><tr><td><a href="151f05ea-579d-e61c-a1ac-7fa12ca6ddb0.htm">Config</a></td><td>
            将<a href="29d74253-acee-8ac7-c0b0-b71ff3e3a71e.htm">TouchSocketConfig</a>中的配置，装载在<a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>上。
            <br />(由 <a href="bbb6fb07-9e65-636e-723d-7c18cc7337d3.htm">DataHandlingAdapterExtension</a> 定义。)</td></tr><tr><td><a href="878403cd-f12c-edde-588e-08269fc9e04c.htm">Map</a></td><td>
            简单对象映射
            <br />(由 <a href="02bbd272-534f-46ef-2987-02490a9e41e9.htm">Mapper</a> 定义。)</td></tr><tr><td><a href="fb7e6dd3-8e3a-2831-644a-c77d3c5d6d6e.htm">Map</a></td><td>
            简单对象映射
            <br />(由 <a href="02bbd272-534f-46ef-2987-02490a9e41e9.htm">Mapper</a> 定义。)</td></tr><tr><td><a href="9a18a592-c63b-7ce8-f2d6-6d9ac6e2d62e.htm">Map<span id="LST3B245399_72" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TTarget<span id="LST3B245399_73" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            简单映射
            <br />(由 <a href="02bbd272-534f-46ef-2987-02490a9e41e9.htm">Mapper</a> 定义。)</td></tr><tr><td><a href="0c8d4cc8-38de-cbf6-43ac-d65d145fe130.htm">ToJsonString</a></td><td>
            转换为Json
            <br />(由 <a href="8552a33c-c4bb-54b7-1888-08ff2740edab.htm">SerializeConvert</a> 定义。)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>参见</h2><div id="seeAlsoSection"><h4>引用</h4><div><a href="efc93c14-3d45-c826-b03a-3a54da781746.htm">TouchSocket.Dmtp 命名空间</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">构造函数</a></li><li><a class="quickLink">属性</a></li><li><a class="quickLink">方法</a></li><li><a class="quickLink">字段</a></li><li><a class="quickLink">扩展方法</a></li><li><a class="quickLink">参见</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p>Copyright © 2020-2024 若汝棋茗.</p><div class="feedbackLink">有关这个主题的评论请发邮件到
        <a id="HT_MailLink" href="mailto:505554090%40qq.com?Subject=TouchSocket手册">邮箱</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>