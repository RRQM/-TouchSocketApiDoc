<!DOCTYPE html ><html lang="zh-CN"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><link rel="stylesheet" href="../css/zh-CN.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>DmtpRpcActor 方法</title><meta name="Title" content="方法" /><meta name="Help.Id" content="Methods.T:TouchSocket.Dmtp.Rpc.DmtpRpcActor" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="TouchSocket.Dmtp.Rpc" /><meta name="guid" content="fc5ac91f-b36d-2b96-cc67-d314f550ad48" /><meta name="tocFile" content="../toc/IDFL.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">TouchSocket手册</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Dmtp<wbr />Rpc<wbr />Actor 方法</h1><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>方法</h2><div id="IDLDASection"><table id="MethodList" class="table is-hoverable"><tr><td><span class="noLink">AddOrUpdate(TKey, TValue, Func<span id="LSTF74968E3_0" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TValue, TValue<span id="LSTF74968E3_1" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</span></td><td>Adds a key/value pair to the <span class="noLink">ConcurrentDictionary<span id="LSTF74968E3_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LSTF74968E3_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> if the key does not already exist, or updates a key/value pair in the <span class="noLink">ConcurrentDictionary<span id="LSTF74968E3_4" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LSTF74968E3_5" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> by using the specified function if the key already exists.<br />(继承自 <span class="noLink">ConcurrentDictionary</span><span id="LSTF74968E3_6" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">Int64</span>, <a href="1456d676-dfce-afd1-c8eb-2f85b9bdfcf5.htm">DmtpRpcCallContext</a><span id="LSTF74968E3_7" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>。)</td></tr><tr><td><span class="noLink">AddOrUpdate(TKey, Func<span id="LSTF74968E3_8" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TValue<span id="LSTF74968E3_9" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTF74968E3_10" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TValue, TValue<span id="LSTF74968E3_11" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</span></td><td>Uses the specified functions to add a key/value pair to the <span class="noLink">ConcurrentDictionary<span id="LSTF74968E3_12" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LSTF74968E3_13" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> if the key does not already exist, or to update a key/value pair in the <span class="noLink">ConcurrentDictionary<span id="LSTF74968E3_14" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LSTF74968E3_15" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> if the key already exists.<br />(继承自 <span class="noLink">ConcurrentDictionary</span><span id="LSTF74968E3_16" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">Int64</span>, <a href="1456d676-dfce-afd1-c8eb-2f85b9bdfcf5.htm">DmtpRpcCallContext</a><span id="LSTF74968E3_17" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>。)</td></tr><tr><td><span class="noLink">AddOrUpdate<span id="LSTF74968E3_18" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TArg<span id="LSTF74968E3_19" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(TKey, Func<span id="LSTF74968E3_20" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TArg, TValue<span id="LSTF74968E3_21" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTF74968E3_22" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TValue, TArg, TValue<span id="LSTF74968E3_23" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TArg)</span></td><td>Uses the specified functions and argument to add a key/value pair to the <span class="noLink">ConcurrentDictionary<span id="LSTF74968E3_24" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LSTF74968E3_25" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> if the key does not already exist, or to update a key/value pair in the <span class="noLink">ConcurrentDictionary<span id="LSTF74968E3_26" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LSTF74968E3_27" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> if the key already exists.<br />(继承自 <span class="noLink">ConcurrentDictionary</span><span id="LSTF74968E3_28" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">Int64</span>, <a href="1456d676-dfce-afd1-c8eb-2f85b9bdfcf5.htm">DmtpRpcCallContext</a><span id="LSTF74968E3_29" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>。)</td></tr><tr><td><span class="noLink">Clear</span></td><td>Removes all keys and values from the <span class="noLink">ConcurrentDictionary<span id="LSTF74968E3_30" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LSTF74968E3_31" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.<br />(继承自 <span class="noLink">ConcurrentDictionary</span><span id="LSTF74968E3_32" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">Int64</span>, <a href="1456d676-dfce-afd1-c8eb-2f85b9bdfcf5.htm">DmtpRpcCallContext</a><span id="LSTF74968E3_33" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>。)</td></tr><tr><td><span class="noLink">ContainsKey</span></td><td>Determines whether the <span class="noLink">ConcurrentDictionary<span id="LSTF74968E3_34" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LSTF74968E3_35" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> contains the specified key.<br />(继承自 <span class="noLink">ConcurrentDictionary</span><span id="LSTF74968E3_36" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">Int64</span>, <a href="1456d676-dfce-afd1-c8eb-2f85b9bdfcf5.htm">DmtpRpcCallContext</a><span id="LSTF74968E3_37" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>。)</td></tr><tr><td><span class="noLink">Equals</span></td><td>Determines whether the specified object is equal to the current object.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><span class="noLink">Finalize</span></td><td>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><span class="noLink">GetEnumerator</span></td><td>Returns an enumerator that iterates through the <span class="noLink">ConcurrentDictionary<span id="LSTF74968E3_38" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LSTF74968E3_39" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.<br />(继承自 <span class="noLink">ConcurrentDictionary</span><span id="LSTF74968E3_40" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">Int64</span>, <a href="1456d676-dfce-afd1-c8eb-2f85b9bdfcf5.htm">DmtpRpcCallContext</a><span id="LSTF74968E3_41" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>。)</td></tr><tr><td><span class="noLink">GetHashCode</span></td><td>Serves as the default hash function.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><span class="noLink">GetOrAdd(TKey, TValue)</span></td><td>Adds a key/value pair to the <span class="noLink">ConcurrentDictionary<span id="LSTF74968E3_42" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LSTF74968E3_43" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> if the key does not already exist. Returns the new value, or the existing value if the key exists.<br />(继承自 <span class="noLink">ConcurrentDictionary</span><span id="LSTF74968E3_44" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">Int64</span>, <a href="1456d676-dfce-afd1-c8eb-2f85b9bdfcf5.htm">DmtpRpcCallContext</a><span id="LSTF74968E3_45" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>。)</td></tr><tr><td><span class="noLink">GetOrAdd(TKey, Func<span id="LSTF74968E3_46" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TValue<span id="LSTF74968E3_47" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</span></td><td>Adds a key/value pair to the <span class="noLink">ConcurrentDictionary<span id="LSTF74968E3_48" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LSTF74968E3_49" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> by using the specified function if the key does not already exist. Returns the new value, or the existing value if the key exists.<br />(继承自 <span class="noLink">ConcurrentDictionary</span><span id="LSTF74968E3_50" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">Int64</span>, <a href="1456d676-dfce-afd1-c8eb-2f85b9bdfcf5.htm">DmtpRpcCallContext</a><span id="LSTF74968E3_51" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>。)</td></tr><tr><td><span class="noLink">GetOrAdd<span id="LSTF74968E3_52" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TArg<span id="LSTF74968E3_53" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(TKey, Func<span id="LSTF74968E3_54" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TArg, TValue<span id="LSTF74968E3_55" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TArg)</span></td><td>Adds a key/value pair to the <span class="noLink">ConcurrentDictionary<span id="LSTF74968E3_56" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LSTF74968E3_57" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> by using the specified function and an argument if the key does not already exist, or returns the existing value if the key exists.<br />(继承自 <span class="noLink">ConcurrentDictionary</span><span id="LSTF74968E3_58" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">Int64</span>, <a href="1456d676-dfce-afd1-c8eb-2f85b9bdfcf5.htm">DmtpRpcCallContext</a><span id="LSTF74968E3_59" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>。)</td></tr><tr><td><span class="noLink">GetType</span></td><td>Gets the <span class="noLink">Type</span> of the current instance.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><a href="f90abea0-65b1-b886-284c-314d6d017f69.htm">InputReceivedData</a></td><td>
            处理收到的消息
            </td></tr><tr><td><a href="cf321f16-1a2c-4da7-8e97-90206422c5d5.htm">Invoke(String, IInvokeOption, <span id="LSTF74968E3_60" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTF74968E3_61" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Rpc调用
            <p>如果调用端为客户端，则会调用服务器Rpc服务。</p><p>如果调用端为服务器，则会反向调用客户端Rpc服务。</p></td></tr><tr><td><a href="450983ab-2abd-afcc-2153-64199169f4c6.htm">Invoke(String, String, IInvokeOption, <span id="LSTF74968E3_62" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTF74968E3_63" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            调用对应Id的客户端Rpc
            </td></tr><tr><td><a href="8bff6610-18c0-0ce4-7e41-89aeaefeca2b.htm">Invoke(String, IInvokeOption, <span id="LSTF74968E3_64" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTF74968E3_65" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span><span id="LSTF74968E3_66" data-languageSpecificText="cpp=%"></span>, <span id="LSTF74968E3_67" data-languageSpecificText="cpp=array&lt;"></span>Type<span id="LSTF74968E3_68" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Rpc调用
            </td></tr><tr><td><a href="12dd9509-a6ba-c540-468f-a7d14f3341ea.htm">Invoke(Type, String, IInvokeOption, <span id="LSTF74968E3_69" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTF74968E3_70" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Rpc调用
            <p>如果调用端为客户端，则会调用服务器Rpc服务。</p><p>如果调用端为服务器，则会反向调用客户端Rpc服务。</p></td></tr><tr><td><a href="fcff2d51-2509-61b4-4280-3f94d12ff619.htm">Invoke(String, String, IInvokeOption, <span id="LSTF74968E3_71" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTF74968E3_72" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span><span id="LSTF74968E3_73" data-languageSpecificText="cpp=%"></span>, <span id="LSTF74968E3_74" data-languageSpecificText="cpp=array&lt;"></span>Type<span id="LSTF74968E3_75" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            调用对应Id的客户端Rpc
            </td></tr><tr><td><a href="5111579e-985a-a2ed-4574-cee7ee541256.htm">Invoke(Type, String, String, IInvokeOption, <span id="LSTF74968E3_76" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTF74968E3_77" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            调用对应Id的客户端Rpc
            </td></tr><tr><td><a href="e5765dc5-31c1-1813-7ebc-d182e6558b38.htm">Invoke(Type, String, IInvokeOption, <span id="LSTF74968E3_78" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTF74968E3_79" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span><span id="LSTF74968E3_80" data-languageSpecificText="cpp=%"></span>, <span id="LSTF74968E3_81" data-languageSpecificText="cpp=array&lt;"></span>Type<span id="LSTF74968E3_82" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Rpc调用
            <p>如果调用端为客户端，则会调用服务器Rpc服务。</p><p>如果调用端为服务器，则会反向调用客户端Rpc服务。</p></td></tr><tr><td><a href="0d612f09-21bd-0589-ba75-476ae7331de7.htm">Invoke(Type, String, String, IInvokeOption, <span id="LSTF74968E3_83" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTF74968E3_84" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span><span id="LSTF74968E3_85" data-languageSpecificText="cpp=%"></span>, <span id="LSTF74968E3_86" data-languageSpecificText="cpp=array&lt;"></span>Type<span id="LSTF74968E3_87" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            调用对应Id的客户端Rpc
            </td></tr><tr><td><a href="7add67ee-19e4-8a7f-6717-8872da468672.htm">InvokeAsync(String, IInvokeOption, <span id="LSTF74968E3_88" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTF74968E3_89" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Rpc调用
            <p>如果调用端为客户端，则会调用服务器Rpc服务。</p><p>如果调用端为服务器，则会反向调用客户端Rpc服务。</p></td></tr><tr><td><a href="8a408597-504e-9d49-0373-14c1fde174eb.htm">InvokeAsync(String, String, IInvokeOption, <span id="LSTF74968E3_90" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTF74968E3_91" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            调用对应Id的客户端Rpc
            </td></tr><tr><td><a href="12471214-56bc-6f2e-d309-c57566617f13.htm">InvokeAsync(Type, String, IInvokeOption, <span id="LSTF74968E3_92" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTF74968E3_93" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Rpc调用
            <p>如果调用端为客户端，则会调用服务器Rpc服务。</p><p>如果调用端为服务器，则会反向调用客户端Rpc服务。</p></td></tr><tr><td><a href="ebd1452c-7e2a-5a1e-5681-94493e993889.htm">InvokeAsync(Type, String, String, IInvokeOption, <span id="LSTF74968E3_94" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTF74968E3_95" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            调用对应Id的客户端Rpc
            </td></tr><tr><td><span class="noLink">MemberwiseClone</span></td><td>Creates a shallow copy of the current <span class="noLink">Object</span>.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><a href="43959e4a-0322-a8d8-c8db-9706d41b1e57.htm">SetProtocolFlags</a></td><td>
            设置处理协议标识的起始标识。
            </td></tr><tr><td><span class="noLink">ToArray</span></td><td>Copies the key and value pairs stored in the <span class="noLink">ConcurrentDictionary<span id="LSTF74968E3_96" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LSTF74968E3_97" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> to a new array.<br />(继承自 <span class="noLink">ConcurrentDictionary</span><span id="LSTF74968E3_98" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">Int64</span>, <a href="1456d676-dfce-afd1-c8eb-2f85b9bdfcf5.htm">DmtpRpcCallContext</a><span id="LSTF74968E3_99" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>。)</td></tr><tr><td><span class="noLink">ToString</span></td><td>Returns a string that represents the current object.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><span class="noLink">TryAdd</span></td><td>Attempts to add the specified key and value to the <span class="noLink">ConcurrentDictionary<span id="LSTF74968E3_100" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LSTF74968E3_101" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.<br />(继承自 <span class="noLink">ConcurrentDictionary</span><span id="LSTF74968E3_102" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">Int64</span>, <a href="1456d676-dfce-afd1-c8eb-2f85b9bdfcf5.htm">DmtpRpcCallContext</a><span id="LSTF74968E3_103" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>。)</td></tr><tr><td><span class="noLink">TryGetValue</span></td><td>Attempts to get the value associated with the specified key from the <span class="noLink">ConcurrentDictionary<span id="LSTF74968E3_104" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LSTF74968E3_105" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.<br />(继承自 <span class="noLink">ConcurrentDictionary</span><span id="LSTF74968E3_106" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">Int64</span>, <a href="1456d676-dfce-afd1-c8eb-2f85b9bdfcf5.htm">DmtpRpcCallContext</a><span id="LSTF74968E3_107" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>。)</td></tr><tr><td><span class="noLink">TryRemove(KeyValuePair<span id="LSTF74968E3_108" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TValue<span id="LSTF74968E3_109" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</span></td><td>Removes a key and value from the dictionary.<br />(继承自 <span class="noLink">ConcurrentDictionary</span><span id="LSTF74968E3_110" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">Int64</span>, <a href="1456d676-dfce-afd1-c8eb-2f85b9bdfcf5.htm">DmtpRpcCallContext</a><span id="LSTF74968E3_111" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>。)</td></tr><tr><td><span class="noLink">TryRemove(TKey, TValue<span id="LSTF74968E3_112" data-languageSpecificText="cpp=%"></span>)</span></td><td>Attempts to remove and return the value that has the specified key from the <span class="noLink">ConcurrentDictionary<span id="LSTF74968E3_113" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LSTF74968E3_114" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>.<br />(继承自 <span class="noLink">ConcurrentDictionary</span><span id="LSTF74968E3_115" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">Int64</span>, <a href="1456d676-dfce-afd1-c8eb-2f85b9bdfcf5.htm">DmtpRpcCallContext</a><span id="LSTF74968E3_116" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>。)</td></tr><tr><td><span class="noLink">TryUpdate</span></td><td>Updates the value associated with <span class="parameter">key</span> to <span class="parameter">newValue</span> if the existing value with <span class="parameter">key</span> is equal to <span class="parameter">comparisonValue</span>.<br />(继承自 <span class="noLink">ConcurrentDictionary</span><span id="LSTF74968E3_117" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="noLink">Int64</span>, <a href="1456d676-dfce-afd1-c8eb-2f85b9bdfcf5.htm">DmtpRpcCallContext</a><span id="LSTF74968E3_118" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>。)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>扩展方法</h2><div id="IDADASection"><table id="ExtensionList" class="table is-hoverable"><tr><td><a href="aad995e8-3638-b129-7e44-120e025ac43a.htm">InvokeT<span id="LSTF74968E3_119" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTF74968E3_120" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Rpc调用
            <p>如果调用端为客户端，则会调用服务器Rpc服务。</p><p>如果调用端为服务器，则会反向调用客户端Rpc服务。</p><br />(由 <a href="82c4a18d-2aad-272e-b307-4c7a6ade3c81.htm">RpcClientExtension</a> 定义。)</td></tr><tr><td><a href="ec85f668-ec03-e721-a192-141e15cc9259.htm">InvokeT<span id="LSTF74968E3_121" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTF74968E3_122" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Rpc调用
            <p>如果调用端为客户端，则会调用服务器Rpc服务。</p><p>如果调用端为服务器，则会反向调用客户端Rpc服务。</p><br />(由 <a href="82c4a18d-2aad-272e-b307-4c7a6ade3c81.htm">RpcClientExtension</a> 定义。)</td></tr><tr><td><a href="fc406af9-fa88-a763-8940-2482d40769ac.htm">InvokeT<span id="LSTF74968E3_123" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTF74968E3_124" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            调用对应Id的客户端Rpc
            <br />(由 <a href="82c4a18d-2aad-272e-b307-4c7a6ade3c81.htm">RpcClientExtension</a> 定义。)</td></tr><tr><td><a href="2649a159-0f73-f7ef-9756-33939428a6d9.htm">InvokeT<span id="LSTF74968E3_125" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTF74968E3_126" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            调用对应Id的客户端Rpc
            <br />(由 <a href="82c4a18d-2aad-272e-b307-4c7a6ade3c81.htm">RpcClientExtension</a> 定义。)</td></tr><tr><td><a href="545ddb94-aeff-0bf4-beda-112f35afe40b.htm">InvokeTAsync<span id="LSTF74968E3_127" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTF74968E3_128" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Rpc调用
            <p>如果调用端为客户端，则会调用服务器Rpc服务。</p><p>如果调用端为服务器，则会反向调用客户端Rpc服务。</p><br />(由 <a href="82c4a18d-2aad-272e-b307-4c7a6ade3c81.htm">RpcClientExtension</a> 定义。)</td></tr><tr><td><a href="813c085e-91e3-7e2a-ee2a-a29cf73a4bdb.htm">InvokeTAsync<span id="LSTF74968E3_129" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTF74968E3_130" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            调用对应Id的客户端Rpc
            <br />(由 <a href="82c4a18d-2aad-272e-b307-4c7a6ade3c81.htm">RpcClientExtension</a> 定义。)</td></tr><tr><td><a href="878403cd-f12c-edde-588e-08269fc9e04c.htm">Map</a></td><td>
            简单对象映射
            <br />(由 <a href="02bbd272-534f-46ef-2987-02490a9e41e9.htm">Mapper</a> 定义。)</td></tr><tr><td><a href="fb7e6dd3-8e3a-2831-644a-c77d3c5d6d6e.htm">Map</a></td><td>
            简单对象映射
            <br />(由 <a href="02bbd272-534f-46ef-2987-02490a9e41e9.htm">Mapper</a> 定义。)</td></tr><tr><td><a href="9a18a592-c63b-7ce8-f2d6-6d9ac6e2d62e.htm">Map<span id="LSTF74968E3_131" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TTarget<span id="LSTF74968E3_132" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            简单映射
            <br />(由 <a href="02bbd272-534f-46ef-2987-02490a9e41e9.htm">Mapper</a> 定义。)</td></tr><tr><td><a href="0c8d4cc8-38de-cbf6-43ac-d65d145fe130.htm">ToJsonString</a></td><td>
            转换为Json
            <br />(由 <a href="8552a33c-c4bb-54b7-1888-08ff2740edab.htm">SerializeConvert</a> 定义。)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>参见</h2><div id="seeAlsoSection"><h4>引用</h4><div><a href="e692fad9-f1d5-5cce-437a-0e39f1ba5e32.htm">DmtpRpcActor 类</a></div><div><a href="d65fd5f0-511a-efd3-5886-ed194912728d.htm">TouchSocket.Dmtp.Rpc 命名空间</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">方法</a></li><li><a class="quickLink">扩展方法</a></li><li><a class="quickLink">参见</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p>Copyright © 2020-2024 若汝棋茗.</p><div class="feedbackLink">有关这个主题的评论请发邮件到
        <a id="HT_MailLink" href="mailto:505554090%40qq.com?Subject=TouchSocket手册">若汝棋茗邮箱</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>