<!DOCTYPE html ><html lang="zh-CN"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><link rel="stylesheet" href="../css/zh-CN.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>HttpResponse 类</title><meta name="Title" content="HttpResponse" /><meta name="Help.Id" content="T:TouchSocket.Http.HttpResponse" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="TouchSocket.Http" /><meta name="guid" content="4cd25377-c460-2cad-4664-538875b152fb" /><meta name="Description" content="Http响应" /><meta name="tocFile" content="../toc/IDN.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">TouchSocket手册</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Http<wbr />Response 类</h1><div class="summary">
            Http响应
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>命名空间：</strong> <a href="27f4faff-0bc9-f52a-7360-9fd578fe97a9.htm">TouchSocket.Http</a><br /><strong>程序集：</strong> TouchSocket.Http (在 TouchSocket.Http.dll 中) 版本：2.0.0-beta.270+78c6852f7ef501b7f66c7ecafde4229aee156a87<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="复制"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>复制</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">HttpResponse</span> : <span class="identifier">HttpBase</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="复制"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>复制</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">HttpResponse</span>
	<span class="keyword">Inherits</span> <span class="identifier">HttpBase</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="复制"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>复制</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs"><span class="keyword">type</span> <span class="identifier">HttpResponse</span> = 
    <span class="keyword">class</span>
        <span class="keyword">inherit</span> <span class="identifier">HttpBase</span>
    <span class="keyword">end</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><span class="noLink">Object</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="02738163-5da5-d33b-a62a-d6f09bebe4d5.htm">BlockReader</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="83d42074-c584-fc02-6eae-f83617c7f400.htm">HttpBase</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">HttpResponse</span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>构造函数</h2><div id="IDAXEASection"><table id="ConstructorList" class="table is-hoverable"><tr><td><a href="6f5e6506-1a23-a6f3-c278-b259fb9cda08.htm">HttpResponse<span id="LST42FD29B_0" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            构造函数
            </td></tr><tr><td><a href="7621d5e6-11f9-e34b-0e4a-ffcb0409ce01.htm">HttpResponse(HttpRequest)</a></td><td>
            从<a href="a14e00e6-74de-bcc0-076f-e247d6484c5d.htm">HttpRequest</a>创建一个Http响应
            </td></tr><tr><td><a href="da45fe76-c692-77d6-8ed2-e01e204cd165.htm">HttpResponse(ITcpClientBase)</a></td><td>
            Http响应
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>属性</h2><div id="ID0DB0EASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="c03f613c-66d1-d488-ae55-a663acb3e602.htm">AcceptEncoding</a></td><td>
            允许编码
            <br />(继承自 <a href="83d42074-c584-fc02-6eae-f83617c7f400.htm">HttpBase</a>。)</td></tr><tr><td><a href="469f6342-0034-61d5-aa31-16a537dc4c52.htm">CanRead</a></td><td>
    
            可读
            
  <br />(重写 <a href="2c94e57e-b0bd-4e5c-60ba-e825808a24b0.htm">BlockReader<span id="LST42FD29B_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>CanRead</a>)</td></tr><tr><td><a href="61a4982a-7f90-3fba-8ded-dd04892e0127.htm">CanWrite</a></td><td>
    
            能否写入。
            
  <br />(重写 <a href="fa7be936-47a8-9722-c5c4-781f5083aac5.htm">HttpBase<span id="LST42FD29B_2" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>CanWrite</a>)</td></tr><tr><td><a href="07aaf6bd-b85f-845f-d3c3-52bf36f99e2a.htm">Client</a></td><td>
    
            客户端
            
  <br />(重写 <a href="7ae6276c-8ea2-00d9-5261-70718aceee15.htm">HttpBase<span id="LST42FD29B_3" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Client</a>)</td></tr><tr><td><a href="5273784f-a791-5b94-aaa5-001e0edf8dc6.htm">ContentComplated</a></td><td>
            内容填充完成
            <br />(继承自 <a href="83d42074-c584-fc02-6eae-f83617c7f400.htm">HttpBase</a>。)</td></tr><tr><td><a href="4f363ee7-95dc-2ba2-97c8-6d049592bd9c.htm">ContentLength</a></td><td>
            内容长度
            <br />(继承自 <a href="83d42074-c584-fc02-6eae-f83617c7f400.htm">HttpBase</a>。)</td></tr><tr><td><a href="ecb59fbc-dadc-1bed-0856-17f21e2e10ed.htm">ContentType</a></td><td>
            内容类型
            <br />(继承自 <a href="83d42074-c584-fc02-6eae-f83617c7f400.htm">HttpBase</a>。)</td></tr><tr><td><a href="22e3748a-13bf-513c-292d-ae214df7cc93.htm">DisposedValue</a></td><td>
    
            标识该对象是否已被释放
            
  <br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><a href="30a7e7a4-ba77-9f62-11eb-35ccf02d3ee5.htm">Flag</a></td><td>
            传递标识
            <br />(继承自 <a href="83d42074-c584-fc02-6eae-f83617c7f400.htm">HttpBase</a>。)</td></tr><tr><td><a href="bb3a476b-2a2a-a035-99f2-5e7a6952e2ba.htm">Headers</a></td><td>
            请求头集合
            <br />(继承自 <a href="83d42074-c584-fc02-6eae-f83617c7f400.htm">HttpBase</a>。)</td></tr><tr><td><a href="dc0fc24d-c162-1dac-4a3f-a3452e6c945d.htm">IsChunk</a></td><td>
            是否分块
            </td></tr><tr><td><a href="b4941023-5a1f-1073-3293-20d7bf93c2d3.htm">IsProxyAuthenticationRequired</a></td><td>
            是否代理权限验证。
            </td></tr><tr><td><a href="4143642f-1bcc-2137-3fb7-f6b694184735.htm">IsRedirect</a></td><td>
            是否重定向
            </td></tr><tr><td><a href="09cb2801-2fba-3059-738b-21a53e912e82.htm">KeepAlive</a></td><td>
            保持连接。
            <p>
            一般的，当是http1.1时，如果没有显式的Connection: close，即返回true。当是http1.0时，如果没有显式的Connection: Keep-Alive，即返回false。
            </p><br />(继承自 <a href="83d42074-c584-fc02-6eae-f83617c7f400.htm">HttpBase</a>。)</td></tr><tr><td><a href="5aca0183-1ae4-6f87-a31b-ed3a1045f4a4.htm">Protocols</a></td><td>
            协议名称，默认HTTP
            <br />(继承自 <a href="83d42074-c584-fc02-6eae-f83617c7f400.htm">HttpBase</a>。)</td></tr><tr><td><a href="2e3cf010-d78c-d7cb-8aab-5fbbadfae712.htm">ProtocolVersion</a></td><td>
            HTTP协议版本，默认1.1
            <br />(继承自 <a href="83d42074-c584-fc02-6eae-f83617c7f400.htm">HttpBase</a>。)</td></tr><tr><td><a href="e0fca965-9287-787e-2b1d-b8c0fbe289f9.htm">ReadTimeout</a></td><td><br />(继承自 <a href="02738163-5da5-d33b-a62a-d6f09bebe4d5.htm">BlockReader</a>。)</td></tr><tr><td><a href="4f3c2db1-f4ed-5b09-3ab7-5af29e7d660a.htm">RequestLine</a></td><td>
            请求行
            <br />(继承自 <a href="83d42074-c584-fc02-6eae-f83617c7f400.htm">HttpBase</a>。)</td></tr><tr><td><a href="e7e018e6-e1b3-b514-d36c-09ae53b6ee43.htm">Responsed</a></td><td>
            是否已经响应数据。
            </td></tr><tr><td><a href="9e5d3ab5-fab4-7d90-27f0-1b7dbe703bc3.htm">StatusCode</a></td><td>
            状态码，默认200
            </td></tr><tr><td><a href="14b94c2c-ca65-ac8a-3f04-d00d5ec395f9.htm">StatusMessage</a></td><td>
            状态消息，默认Success
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>方法</h2><div id="IDIEASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="8bc47f5e-3a1f-5581-618e-83b8d8340822.htm">Answer</a></td><td>
            构建数据并回应。
            <p>该方法仅在具有Client实例时有效。</p></td></tr><tr><td><a href="ae53ef00-f301-550d-1d5c-5e767afb94b8.htm">AnswerAsync</a></td><td>
            构建数据并回应。
            <p>该方法仅在具有Client实例时有效。</p></td></tr><tr><td><a href="fcb0ce6e-9efb-0b32-3389-b72338173171.htm">Build</a></td><td>
             构建响应数据。
            <p>当数据较大时，不建议这样操作，可直接<a href="6bb2388a-6bdf-5570-fda0-c45a1e384a0b.htm">WriteContent(<span id="LST42FD29B_4" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST42FD29B_5" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></p></td></tr><tr><td><a href="b5a72b27-b1e2-3883-8a67-fc02960dad2f.htm">BuildAsBytes</a></td><td>
            构建数据为字节数组。
            </td></tr><tr><td><a href="8466d609-4008-2c94-a678-242f3cd2ae2a.htm">Complete</a></td><td>
            当传输模式是Chunk时，用于结束传输。
            </td></tr><tr><td><a href="e55366a7-567d-9b9d-7eda-80fb4d5d4b0e.htm">Dispose<span id="LST42FD29B_6" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            释放资源。内部已经处理了<span class="noLink">SuppressFinalize(Object)</span><br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><a href="12cf25cc-ce9c-abd0-4502-cbf657f4a24c.htm">Dispose(Boolean)</a></td><td>
    
    
    
            调用释放，切换释放状态。
            
  
  
  <br />(重写 <a href="69fb22bc-146c-4f11-9baf-69d961c59f10.htm">HttpBase<span id="LST42FD29B_7" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Dispose(Boolean)</a>)</td></tr><tr><td><a href="61a01c7e-031f-099a-2236-85af6bf0f7c8.htm">DisposeAsync</a></td><td>
            异步释放资源。内部已经处理了<span class="noLink">SuppressFinalize(Object)</span><br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><a href="4757f0b4-6370-cf9c-8466-c0182d831342.htm">DisposeAsyncCore</a></td><td>
            异步释放资源。注意：此方法仅在调用<span class="noLink">DisposeAsync<span id="LST42FD29B_8" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>时有效。
            <br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><span class="noLink">Equals</span></td><td>Determines whether the specified object is equal to the current object.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><a href="65fe72f1-98f4-2af1-e146-979ce2d895c9.htm">Finalize</a></td><td>
            析构函数
            <br />(继承自 <a href="02738163-5da5-d33b-a62a-d6f09bebe4d5.htm">BlockReader</a>。)</td></tr><tr><td><span class="noLink">GetHashCode</span></td><td>Serves as the default hash function.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><span class="noLink">GetType</span></td><td>Gets the <span class="noLink">Type</span> of the current instance.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><a href="8337e707-7ac2-60ef-d88f-5170bf193b2d.htm">Input</a></td><td>
            传输输入.
            当以length为0结束。
            否则读取端会超时。
            <br />(继承自 <a href="02738163-5da5-d33b-a62a-d6f09bebe4d5.htm">BlockReader</a>。)</td></tr><tr><td><a href="dab2ae10-88a5-595d-076c-ce9ecafaa5f0.htm">InputComplate</a></td><td>
            输入完成
            <br />(继承自 <a href="02738163-5da5-d33b-a62a-d6f09bebe4d5.htm">BlockReader</a>。)</td></tr><tr><td><a href="700e3a0a-dbef-4da0-f0f6-4ddc84edb1a4.htm">LoadHeaderProterties</a></td><td>
            读取数据
            <br />(重写 <a href="dbc7928a-5ea5-4465-7d6d-463e0ef94e7c.htm">HttpBase<span id="LST42FD29B_9" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>LoadHeaderProterties<span id="LST42FD29B_10" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>)</td></tr><tr><td><span class="noLink">MemberwiseClone</span></td><td>Creates a shallow copy of the current <span class="noLink">Object</span>.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><a href="81557515-a03e-cc88-d90c-b73c7be984cf.htm">ParsingHeader</a></td><td><br />(继承自 <a href="83d42074-c584-fc02-6eae-f83617c7f400.htm">HttpBase</a>。)</td></tr><tr><td><a href="c53e38ad-2b12-8894-7f3a-dd5c0882ebd8.htm">PeekRead</a></td><td>
            阻塞读取，但不会移动游标。
            <br />(继承自 <a href="02738163-5da5-d33b-a62a-d6f09bebe4d5.htm">BlockReader</a>。)</td></tr><tr><td><a href="d11c2174-5530-3f66-9355-af98aec9c9c8.htm">Read</a></td><td>
            从Request中持续读取数据。
            <br />(继承自 <a href="83d42074-c584-fc02-6eae-f83617c7f400.htm">HttpBase</a>。)</td></tr><tr><td><a href="db490e9a-fad3-f64f-c06e-f03595809cf4.htm">ReadHeaders</a></td><td>
            从内存中读取
            <br />(继承自 <a href="83d42074-c584-fc02-6eae-f83617c7f400.htm">HttpBase</a>。)</td></tr><tr><td><a href="a30694c6-2a48-003d-df8b-4e7627c9ab2f.htm">ResetBlock</a></td><td>
            重置阻塞
            <br />(继承自 <a href="02738163-5da5-d33b-a62a-d6f09bebe4d5.htm">BlockReader</a>。)</td></tr><tr><td><a href="3ae1209c-2c58-fd38-3bb2-1ebb7496a90f.htm">SetContent</a></td><td>
    
            设置一次性内容
            
  <br />(重写 <a href="1d0735e9-107e-e476-c8b9-0971a95ad7ef.htm">HttpBase<span id="LST42FD29B_11" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>SetContent(<span id="LST42FD29B_12" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST42FD29B_13" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a>)</td></tr><tr><td><a href="b822d86e-7ba1-f472-e7bf-b0e3c060d1b9.htm">ThrowIfDisposed</a></td><td>
            判断是否已经被释放，如果是，则抛出异常。
            <br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><a href="4f0daa83-11ae-687b-716c-25a8ab4d96a3.htm">ToString</a></td><td>
            输出
            <br />(重写 <span class="noLink">Object<span id="LST42FD29B_14" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>ToString<span id="LST42FD29B_15" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>)</td></tr><tr><td><a href="7f8cc6bd-2d38-18b4-8ad1-7c1bd7280b1c.htm">TryGetContent</a></td><td>
    
            获取一次性内容。
            
  <br />(重写 <a href="b87fe26d-62ac-ee4f-0b53-11098147c938.htm">HttpBase<span id="LST42FD29B_16" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>TryGetContent(<span id="LST42FD29B_17" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST42FD29B_18" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span><span id="LST42FD29B_19" data-languageSpecificText="cpp=%"></span>)</a>)</td></tr><tr><td><a href="6bb2388a-6bdf-5570-fda0-c45a1e384a0b.htm">WriteContent</a></td><td>
    
            持续写入内容。
            
  <br />(重写 <a href="99926456-64c6-0f2e-0837-0fd118260c02.htm">HttpBase<span id="LST42FD29B_20" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>WriteContent(<span id="LST42FD29B_21" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST42FD29B_22" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>扩展方法</h2><div id="IDAEASection"><table id="ExtensionList" class="table is-hoverable"><tr><td><a href="859a5735-6849-0d20-2471-1000400ad029.htm">FromFile</a></td><td>
            从文件响应。
            <p>当response支持持续写入时，会直接回复响应。并阻塞执行，直到完成。所以在执行该方法之前，请确保已设置完成所有状态字</p><p>当response不支持持续写入时，会填充Content，且不会响应，需要自己执行Build，并发送。</p><br />(由 <a href="f8743525-0439-fd0e-178e-95f562aab505.htm">HttpExtensions</a> 定义。)</td></tr><tr><td><a href="332be384-f61b-66da-6d7c-24dcd494627d.htm">FromFileAsync</a></td><td>
            从文件响应。
            <p>当response支持持续写入时，会直接回复响应。并阻塞执行，直到完成。所以在执行该方法之前，请确保已设置完成所有状态字</p><p>当response不支持持续写入时，会填充Content，且不会响应，需要自己执行Build，并发送。</p><br />(由 <a href="f8743525-0439-fd0e-178e-95f562aab505.htm">HttpExtensions</a> 定义。)</td></tr><tr><td><a href="88ed1307-89a8-cea2-f4d7-39d4fa537d36.htm">GetBody</a></td><td>
            获取Body的字符串
            <br />(由 <a href="f8743525-0439-fd0e-178e-95f562aab505.htm">HttpExtensions</a> 定义。)</td></tr><tr><td><a href="bbea0638-5743-4b74-61e5-a3eec0fed5a5.htm">GetBoundary</a></td><td>
            当数据类型为multipart/form-data时，获取boundary
            <br />(由 <a href="f8743525-0439-fd0e-178e-95f562aab505.htm">HttpExtensions</a> 定义。)</td></tr><tr><td><a href="878403cd-f12c-edde-588e-08269fc9e04c.htm">Map</a></td><td>
            简单对象映射
            <br />(由 <a href="02bbd272-534f-46ef-2987-02490a9e41e9.htm">Mapper</a> 定义。)</td></tr><tr><td><a href="fb7e6dd3-8e3a-2831-644a-c77d3c5d6d6e.htm">Map</a></td><td>
            简单对象映射
            <br />(由 <a href="02bbd272-534f-46ef-2987-02490a9e41e9.htm">Mapper</a> 定义。)</td></tr><tr><td><a href="9a18a592-c63b-7ce8-f2d6-6d9ac6e2d62e.htm">Map<span id="LST42FD29B_23" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TTarget<span id="LST42FD29B_24" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            简单映射
            <br />(由 <a href="02bbd272-534f-46ef-2987-02490a9e41e9.htm">Mapper</a> 定义。)</td></tr><tr><td><a href="0c8d4cc8-38de-cbf6-43ac-d65d145fe130.htm">ToJsonString</a></td><td>
            转换为Json
            <br />(由 <a href="8552a33c-c4bb-54b7-1888-08ff2740edab.htm">SerializeConvert</a> 定义。)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>参见</h2><div id="seeAlsoSection"><h4>引用</h4><div><a href="27f4faff-0bc9-f52a-7360-9fd578fe97a9.htm">TouchSocket.Http 命名空间</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">构造函数</a></li><li><a class="quickLink">属性</a></li><li><a class="quickLink">方法</a></li><li><a class="quickLink">扩展方法</a></li><li><a class="quickLink">参见</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p>Copyright © 2020-2024 若汝棋茗.</p><div class="feedbackLink">有关这个主题的评论请发邮件到
        <a id="HT_MailLink" href="mailto:505554090%40qq.com?Subject=TouchSocket手册">若汝棋茗邮箱</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>