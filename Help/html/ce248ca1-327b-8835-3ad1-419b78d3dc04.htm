<!DOCTYPE html ><html lang="zh-CN"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><link rel="stylesheet" href="../css/zh-CN.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>UdpPackageAdapter 类</title><meta name="Title" content="UdpPackageAdapter" /><meta name="Help.Id" content="T:TouchSocket.Sockets.UdpPackageAdapter" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="TouchSocket.Sockets" /><meta name="guid" content="ce248ca1-327b-8835-3ad1-419b78d3dc04" /><meta name="Description" content="UDP数据包的适配器" /><meta name="tocFile" content="../toc/IDN.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">A Sandcastle Documented Class Library</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Udp<wbr />Package<wbr />Adapter 类</h1><div class="summary">
            UDP数据包的适配器
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>命名空间：</strong> <a href="5bf6331c-a218-658a-a3bd-7bcd489609e1.htm">TouchSocket.Sockets</a><br /><strong>程序集：</strong> TouchSocket (在 TouchSocket.dll 中) 版本：2.0.0-beta.270+78c6852f7ef501b7f66c7ecafde4229aee156a87<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="复制"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>复制</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">UdpPackageAdapter</span> : <span class="identifier">UdpDataHandlingAdapter</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="复制"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>复制</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">UdpPackageAdapter</span>
	<span class="keyword">Inherits</span> <span class="identifier">UdpDataHandlingAdapter</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="复制"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>复制</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs"><span class="keyword">type</span> <span class="identifier">UdpPackageAdapter</span> = 
    <span class="keyword">class</span>
        <span class="keyword">inherit</span> <span class="identifier">UdpDataHandlingAdapter</span>
    <span class="keyword">end</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><span class="noLink">Object</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="3f14012e-c265-8f7a-ec3b-ec8e47842ef2.htm">DataHandlingAdapter</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="f2ea4662-1335-6fa9-23d9-430b7b927561.htm">UdpDataHandlingAdapter</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">UdpPackageAdapter</span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>构造函数</h2><div id="IDYEASection"><table id="ConstructorList" class="table is-hoverable"><tr><td><a href="0d67c873-ff9a-f5fc-245d-b427a0fbda7f.htm">UdpPackageAdapter</a></td><td>
            构造函数
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>属性</h2><div id="ID3EASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="b90a2b1e-bfad-8eb8-9f79-ef1f7d47969a.htm">CanSendRequestInfo</a></td><td>
    
            是否允许发送<a href="17dd39d9-0800-5550-b832-47208e5371b6.htm">IRequestInfo</a>对象。
            
  <br />(重写 <a href="6fdc25fd-0c66-3370-f7e3-cf87c19c5fe2.htm">UdpDataHandlingAdapter<span id="LST4B2E1DFC_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>CanSendRequestInfo</a>)</td></tr><tr><td><a href="fd53fe0e-f092-fba4-ab56-483dc569cf19.htm">CanSplicingSend</a></td><td>
    
            拼接发送
            
  <br />(重写 <a href="d1306da5-d8de-6f13-42fd-7062ba933abf.htm">UdpDataHandlingAdapter<span id="LST4B2E1DFC_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>CanSplicingSend</a>)</td></tr><tr><td><a href="22e3748a-13bf-513c-292d-ae214df7cc93.htm">DisposedValue</a></td><td>
    
            标识该对象是否已被释放
            
  <br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><a href="e986cf1b-4cca-11c9-f3b5-e4803468bf99.htm">Logger</a></td><td>
            日志记录器。
            <br />(继承自 <a href="3f14012e-c265-8f7a-ec3b-ec8e47842ef2.htm">DataHandlingAdapter</a>。)</td></tr><tr><td><a href="14c712c2-a7a6-f20c-82a8-962cf82513d8.htm">MaxPackageSize</a></td><td>
            获取或设置适配器能接收的最大数据包长度。默认1024*1024 Byte。
            <br />(继承自 <a href="3f14012e-c265-8f7a-ec3b-ec8e47842ef2.htm">DataHandlingAdapter</a>。)</td></tr><tr><td><a href="461dee1a-4bc1-557a-d748-d770bb8cb124.htm">MTU</a></td><td>
            最大传输单元
            </td></tr><tr><td><a href="98a56170-a1ba-9f89-f358-4912e57fbab4.htm">Owner</a></td><td>
            适配器所有者
            <br />(继承自 <a href="3f14012e-c265-8f7a-ec3b-ec8e47842ef2.htm">DataHandlingAdapter</a>。)</td></tr><tr><td><a href="ccfc9fc2-0992-6e70-5cfc-1af68aace68d.htm">ReceivedCallBack</a></td><td>
            当接收数据处理完成后，回调该函数执行接收
            <br />(继承自 <a href="f2ea4662-1335-6fa9-23d9-430b7b927561.htm">UdpDataHandlingAdapter</a>。)</td></tr><tr><td><a href="ac333cbc-1963-1c8d-2e70-70613b327a8d.htm">SendCallBack</a></td><td>
            当接收数据处理完成后，回调该函数执行发送
            <br />(继承自 <a href="f2ea4662-1335-6fa9-23d9-430b7b927561.htm">UdpDataHandlingAdapter</a>。)</td></tr><tr><td><a href="49e0fdf5-6821-51a2-d192-03c9f7d07ff1.htm">SendCallBackAsync</a></td><td>
            当接收数据处理完成后，异步回调该函数执行发送
            <br />(继承自 <a href="f2ea4662-1335-6fa9-23d9-430b7b927561.htm">UdpDataHandlingAdapter</a>。)</td></tr><tr><td><a href="4b5a7f52-3925-a0db-0275-93dacc8b9b0d.htm">Timeout</a></td><td>
            接收超时时间，默认5000ms
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>方法</h2><div id="IDFEASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="e55366a7-567d-9b9d-7eda-80fb4d5d4b0e.htm">Dispose<span id="LST4B2E1DFC_2" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            释放资源。内部已经处理了<span class="noLink">SuppressFinalize(Object)</span><br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><a href="4dbdcd62-c094-bab1-5233-e595c9fa94d7.htm">Dispose(Boolean)</a></td><td>
            调用释放，切换释放状态。
            <br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><a href="61a01c7e-031f-099a-2236-85af6bf0f7c8.htm">DisposeAsync</a></td><td>
            异步释放资源。内部已经处理了<span class="noLink">SuppressFinalize(Object)</span><br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><a href="4757f0b4-6370-cf9c-8466-c0182d831342.htm">DisposeAsyncCore</a></td><td>
            异步释放资源。注意：此方法仅在调用<span class="noLink">DisposeAsync<span id="LST4B2E1DFC_3" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>时有效。
            <br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><span class="noLink">Equals</span></td><td>Determines whether the specified object is equal to the current object.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><span class="noLink">Finalize</span></td><td>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><span class="noLink">GetHashCode</span></td><td>Serves as the default hash function.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><span class="noLink">GetType</span></td><td>Gets the <span class="noLink">Type</span> of the current instance.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><a href="e529687d-9c26-0b56-a067-873e9e359731.htm">GoReceived</a></td><td>
            处理已经经过预先处理后的数据
            <br />(继承自 <a href="f2ea4662-1335-6fa9-23d9-430b7b927561.htm">UdpDataHandlingAdapter</a>。)</td></tr><tr><td><a href="341df809-ea3b-bb54-c430-4269c6341dbc.htm">GoSend</a></td><td>
            发送已经经过预先处理后的数据
            <br />(继承自 <a href="f2ea4662-1335-6fa9-23d9-430b7b927561.htm">UdpDataHandlingAdapter</a>。)</td></tr><tr><td><a href="39659bbb-6f79-7239-fde7-e48877f9f962.htm">GoSendAsync</a></td><td>
            发送已经经过预先处理后的数据
            <br />(继承自 <a href="f2ea4662-1335-6fa9-23d9-430b7b927561.htm">UdpDataHandlingAdapter</a>。)</td></tr><tr><td><span class="noLink">MemberwiseClone</span></td><td>Creates a shallow copy of the current <span class="noLink">Object</span>.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><a href="b0862330-2219-0344-84c5-92863fdc12e2.htm">OnError</a></td><td>
            在解析时发生错误。
            <br />(继承自 <a href="3f14012e-c265-8f7a-ec3b-ec8e47842ef2.htm">DataHandlingAdapter</a>。)</td></tr><tr><td><a href="2197dcff-981d-168c-912e-e928b952fa54.htm">OnLoaded</a></td><td>
            当适配器在被第一次加载时调用。
            <br />(继承自 <a href="3f14012e-c265-8f7a-ec3b-ec8e47842ef2.htm">DataHandlingAdapter</a>。)</td></tr><tr><td><a href="ad03e84a-2f41-008b-5266-70bc9b131c54.htm">PreviewReceived</a></td><td>
    
            当接收到数据后预先处理数据,然后调用<a href="e529687d-9c26-0b56-a067-873e9e359731.htm">GoReceived(EndPoint, ByteBlock, IRequestInfo)</a>处理数据
            
  <br />(重写 <a href="207d658f-c41c-d7eb-b3b2-932af0d9b138.htm">UdpDataHandlingAdapter<span id="LST4B2E1DFC_4" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>PreviewReceived(EndPoint, ByteBlock)</a>)</td></tr><tr><td><a href="09eda3ab-5e7c-1a95-763a-bd90929c6c4d.htm">PreviewSend(EndPoint, IRequestInfo)</a></td><td>
            当发送数据前预先处理数据
            <br />(继承自 <a href="f2ea4662-1335-6fa9-23d9-430b7b927561.htm">UdpDataHandlingAdapter</a>。)</td></tr><tr><td><a href="6a97cfe3-e2db-a8ad-1903-041410e286e9.htm">PreviewSend(EndPoint, IList<span id="LST4B2E1DFC_5" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ArraySegment<span id="LST4B2E1DFC_6" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST4B2E1DFC_7" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST4B2E1DFC_8" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
    
            组合发送预处理数据，
            当属性SplicingSend实现为True时，系统才会调用该方法。
            
  <br />(重写 <a href="02ecf8cc-5e17-46f8-8816-9098a502cb79.htm">UdpDataHandlingAdapter<span id="LST4B2E1DFC_9" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>PreviewSend(EndPoint, IList<span id="LST4B2E1DFC_10" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ArraySegment<span id="LST4B2E1DFC_11" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST4B2E1DFC_12" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST4B2E1DFC_13" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>)</td></tr><tr><td><a href="7064ed3e-4e35-6706-1ce3-2b9559215bc2.htm">PreviewSend(EndPoint, <span id="LST4B2E1DFC_14" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST4B2E1DFC_15" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
    
            当发送数据前预先处理数据
            
  <br />(重写 <a href="26c4fe2f-b790-4959-5ccb-1582e3e15b49.htm">UdpDataHandlingAdapter<span id="LST4B2E1DFC_16" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>PreviewSend(EndPoint, <span id="LST4B2E1DFC_17" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST4B2E1DFC_18" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a>)</td></tr><tr><td><a href="d60d0f68-3dfa-7628-b4ef-32ca4d081ad0.htm">PreviewSendAsync(EndPoint, IList<span id="LST4B2E1DFC_19" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ArraySegment<span id="LST4B2E1DFC_20" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST4B2E1DFC_21" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST4B2E1DFC_22" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            组合发送预处理数据，
            当属性SplicingSend实现为True时，系统才会调用该方法。
            <br />(继承自 <a href="f2ea4662-1335-6fa9-23d9-430b7b927561.htm">UdpDataHandlingAdapter</a>。)</td></tr><tr><td><a href="c7e2f1bb-f4f3-a35e-3f50-ffeac9450f3d.htm">PreviewSendAsync(EndPoint, IRequestInfo)</a></td><td>
            当发送数据前预先处理数据
            <br />(继承自 <a href="f2ea4662-1335-6fa9-23d9-430b7b927561.htm">UdpDataHandlingAdapter</a>。)</td></tr><tr><td><a href="da04bfd6-87fd-8920-5c78-eaf40a6fab40.htm">PreviewSendAsync(EndPoint, <span id="LST4B2E1DFC_23" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST4B2E1DFC_24" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            当发送数据前预先处理数据
            <br />(继承自 <a href="f2ea4662-1335-6fa9-23d9-430b7b927561.htm">UdpDataHandlingAdapter</a>。)</td></tr><tr><td><a href="d3684aad-8bab-237e-1dd2-482c3c029b2d.htm">ReceivedInput</a></td><td>
            收到数据的切入点，该方法由框架自动调用。
            <br />(继承自 <a href="f2ea4662-1335-6fa9-23d9-430b7b927561.htm">UdpDataHandlingAdapter</a>。)</td></tr><tr><td><a href="068e3d6b-8051-1d86-a7f4-3cb9b346fa22.htm">Reset</a></td><td>
    
            重置解析器到初始状态，一般在<a href="b0862330-2219-0344-84c5-92863fdc12e2.htm">OnError(Exception, String, Boolean, Boolean)</a>被触发时，由返回值指示是否调用。
            
  <br />(重写 <a href="c983d36d-47a9-88ac-bde9-048d8d7ae8ee.htm">UdpDataHandlingAdapter<span id="LST4B2E1DFC_25" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Reset<span id="LST4B2E1DFC_26" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>)</td></tr><tr><td><a href="f215c387-b55a-f219-0d57-210ff01cfd32.htm">SendInput(EndPoint, IList<span id="LST4B2E1DFC_27" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ArraySegment<span id="LST4B2E1DFC_28" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST4B2E1DFC_29" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST4B2E1DFC_30" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            发送数据的切入点，该方法由框架自动调用。
            <br />(继承自 <a href="f2ea4662-1335-6fa9-23d9-430b7b927561.htm">UdpDataHandlingAdapter</a>。)</td></tr><tr><td><a href="edb56a8d-1036-0ef7-2449-476519ae9f6b.htm">SendInput(EndPoint, IRequestInfo)</a></td><td>
            发送数据的切入点，该方法由框架自动调用。
            <br />(继承自 <a href="f2ea4662-1335-6fa9-23d9-430b7b927561.htm">UdpDataHandlingAdapter</a>。)</td></tr><tr><td><a href="7bcb3517-260c-d27f-e668-4ed93674adaa.htm">SendInput(EndPoint, <span id="LST4B2E1DFC_31" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST4B2E1DFC_32" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            发送数据的切入点，该方法由框架自动调用。
            <br />(继承自 <a href="f2ea4662-1335-6fa9-23d9-430b7b927561.htm">UdpDataHandlingAdapter</a>。)</td></tr><tr><td><a href="a0f01011-8aba-1862-1b3e-4c65044e05c9.htm">SendInputAsync(EndPoint, IList<span id="LST4B2E1DFC_33" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ArraySegment<span id="LST4B2E1DFC_34" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST4B2E1DFC_35" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST4B2E1DFC_36" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            发送数据的切入点，该方法由框架自动调用。
            <br />(继承自 <a href="f2ea4662-1335-6fa9-23d9-430b7b927561.htm">UdpDataHandlingAdapter</a>。)</td></tr><tr><td><a href="d52074e5-07b8-c62f-a9f9-44c383995d5f.htm">SendInputAsync(EndPoint, IRequestInfo)</a></td><td>
            发送数据的切入点，该方法由框架自动调用。
            <br />(继承自 <a href="f2ea4662-1335-6fa9-23d9-430b7b927561.htm">UdpDataHandlingAdapter</a>。)</td></tr><tr><td><a href="008a6be9-62f4-b28d-a85d-fd2c79a4c380.htm">SendInputAsync(EndPoint, <span id="LST4B2E1DFC_37" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST4B2E1DFC_38" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            发送数据的切入点，该方法由框架自动调用。
            <br />(继承自 <a href="f2ea4662-1335-6fa9-23d9-430b7b927561.htm">UdpDataHandlingAdapter</a>。)</td></tr><tr><td><a href="b822d86e-7ba1-f472-e7bf-b0e3c060d1b9.htm">ThrowIfDisposed</a></td><td>
            判断是否已经被释放，如果是，则抛出异常。
            <br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><span class="noLink">ToString</span></td><td>Returns a string that represents the current object.<br />(继承自 <span class="noLink">Object</span>。)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>扩展方法</h2><div id="IDAEASection"><table id="ExtensionList" class="table is-hoverable"><tr><td><a href="151f05ea-579d-e61c-a1ac-7fa12ca6ddb0.htm">Config</a></td><td>
            将<a href="29d74253-acee-8ac7-c0b0-b71ff3e3a71e.htm">TouchSocketConfig</a>中的配置，装载在<a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>上。
            <br />(由 <a href="bbb6fb07-9e65-636e-723d-7c18cc7337d3.htm">DataHandlingAdapterExtension</a> 定义。)</td></tr><tr><td><a href="878403cd-f12c-edde-588e-08269fc9e04c.htm">Map</a></td><td>
            简单对象映射
            <br />(由 <a href="02bbd272-534f-46ef-2987-02490a9e41e9.htm">Mapper</a> 定义。)</td></tr><tr><td><a href="fb7e6dd3-8e3a-2831-644a-c77d3c5d6d6e.htm">Map</a></td><td>
            简单对象映射
            <br />(由 <a href="02bbd272-534f-46ef-2987-02490a9e41e9.htm">Mapper</a> 定义。)</td></tr><tr><td><a href="9a18a592-c63b-7ce8-f2d6-6d9ac6e2d62e.htm">Map<span id="LST4B2E1DFC_39" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TTarget<span id="LST4B2E1DFC_40" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            简单映射
            <br />(由 <a href="02bbd272-534f-46ef-2987-02490a9e41e9.htm">Mapper</a> 定义。)</td></tr><tr><td><a href="0c8d4cc8-38de-cbf6-43ac-d65d145fe130.htm">ToJsonString</a></td><td>
            转换为Json
            <br />(由 <a href="8552a33c-c4bb-54b7-1888-08ff2740edab.htm">SerializeConvert</a> 定义。)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>参见</h2><div id="seeAlsoSection"><h4>引用</h4><div><a href="5bf6331c-a218-658a-a3bd-7bcd489609e1.htm">TouchSocket.Sockets 命名空间</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">构造函数</a></li><li><a class="quickLink">属性</a></li><li><a class="quickLink">方法</a></li><li><a class="quickLink">扩展方法</a></li><li><a class="quickLink">参见</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>