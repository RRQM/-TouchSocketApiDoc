<!DOCTYPE html ><html lang="zh-CN"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><link rel="stylesheet" href="../css/zh-CN.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>FixedHeaderPackageAdapter 类</title><meta name="Title" content="FixedHeaderPackageAdapter" /><meta name="Help.Id" content="T:TouchSocket.Core.FixedHeaderPackageAdapter" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="TouchSocket.Core" /><meta name="guid" content="a33b76c8-e091-4eeb-490b-8a6045084824" /><meta name="Description" content="固定包头数据包处理适配器，支持Byte、UShort、Int三种类型作为包头。使用大小端设置。" /><meta name="tocFile" content="../toc/IDC.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">A Sandcastle Documented Class Library</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Fixed<wbr />Header<wbr />Package<wbr />Adapter 类</h1><div class="summary">
            固定包头数据包处理适配器，支持Byte、UShort、Int三种类型作为包头。使用<a href="ca5cf2e5-9576-da0c-d2f2-7bbc92aec59e.htm">DefaultEndianType</a>大小端设置。
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>命名空间：</strong> <a href="6bd098f4-7c88-a31a-e48b-613ce7814aac.htm">TouchSocket.Core</a><br /><strong>程序集：</strong> TouchSocket.Core (在 TouchSocket.Core.dll 中) 版本：2.0.0-beta.270+78c6852f7ef501b7f66c7ecafde4229aee156a87<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="复制"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>复制</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">FixedHeaderPackageAdapter</span> : <span class="identifier">SingleStreamDataHandlingAdapter</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="复制"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>复制</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">FixedHeaderPackageAdapter</span>
	<span class="keyword">Inherits</span> <span class="identifier">SingleStreamDataHandlingAdapter</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="复制"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>复制</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs"><span class="keyword">type</span> <span class="identifier">FixedHeaderPackageAdapter</span> = 
    <span class="keyword">class</span>
        <span class="keyword">inherit</span> <span class="identifier">SingleStreamDataHandlingAdapter</span>
    <span class="keyword">end</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><span class="noLink">Object</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="3f14012e-c265-8f7a-ec3b-ec8e47842ef2.htm">DataHandlingAdapter</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">FixedHeaderPackageAdapter</span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>构造函数</h2><div id="IDREASection"><table id="ConstructorList" class="table is-hoverable"><tr><td><a href="9b027648-a29f-dfc8-15a6-d83b03d45811.htm">FixedHeaderPackageAdapter</a></td><td>初始化 <span class="selflink">FixedHeaderPackageAdapter</span> 类的一个新实例</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>属性</h2><div id="ID4EASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="86db6b58-435e-3548-8085-dc945dda4a90.htm">CacheTimeout</a></td><td>
            缓存超时时间。默认1秒。
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="9524c46b-229d-47a4-53ca-00c02e98762c.htm">CacheTimeoutEnable</a></td><td>
            是否启用缓存超时。默认false。
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="29b39020-672c-d902-eff0-727b9f8842f9.htm">CanSendRequestInfo</a></td><td>
    
            是否允许发送<a href="17dd39d9-0800-5550-b832-47208e5371b6.htm">IRequestInfo</a>对象。
            
  <br />(重写 <a href="2dc78428-1266-4ff6-9d86-c9989b5030a5.htm">SingleStreamDataHandlingAdapter<span id="LST83926536_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>CanSendRequestInfo</a>)</td></tr><tr><td><a href="5822f87a-7b4b-7c23-dbdb-20882edf0050.htm">CanSplicingSend</a></td><td>
    
            拼接发送
            
  <br />(重写 <a href="9d53f4ea-39af-2341-cc81-404534d223d4.htm">SingleStreamDataHandlingAdapter<span id="LST83926536_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>CanSplicingSend</a>)</td></tr><tr><td><a href="22e3748a-13bf-513c-292d-ae214df7cc93.htm">DisposedValue</a></td><td>
    
            标识该对象是否已被释放
            
  <br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><a href="b081d861-8c65-4a1b-ba57-3efe6d5ac35b.htm">FixedHeaderType</a></td><td>
            设置包头类型，默认为int
            </td></tr><tr><td><a href="6ea6ca7a-a672-3e85-6199-9d37e3af828a.htm">LastCacheTime</a></td><td>
            最后缓存的时间
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="e986cf1b-4cca-11c9-f3b5-e4803468bf99.htm">Logger</a></td><td>
            日志记录器。
            <br />(继承自 <a href="3f14012e-c265-8f7a-ec3b-ec8e47842ef2.htm">DataHandlingAdapter</a>。)</td></tr><tr><td><a href="14c712c2-a7a6-f20c-82a8-962cf82513d8.htm">MaxPackageSize</a></td><td>
            获取或设置适配器能接收的最大数据包长度。默认1024*1024 Byte。
            <br />(继承自 <a href="3f14012e-c265-8f7a-ec3b-ec8e47842ef2.htm">DataHandlingAdapter</a>。)</td></tr><tr><td><a href="f8f76edd-b2f1-fb1b-e184-c811f76cd700.htm">MinPackageSize</a></td><td>
            获取或设置包数据的最小值（默认为0）
            </td></tr><tr><td><a href="98a56170-a1ba-9f89-f358-4912e57fbab4.htm">Owner</a></td><td>
            适配器所有者
            <br />(继承自 <a href="3f14012e-c265-8f7a-ec3b-ec8e47842ef2.htm">DataHandlingAdapter</a>。)</td></tr><tr><td><a href="827817a1-7649-9994-c209-577a1327768b.htm">ReceivedCallBack</a></td><td>
            当接收数据处理完成后，回调该函数执行接收
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="41369c33-1cc5-465f-396b-2a90c6130a96.htm">SendAsyncCallBack</a></td><td>
            当发送数据处理完成后，回调该函数执行异步发送
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="5af8d716-d689-5692-e638-ed13480102af.htm">SendCallBack</a></td><td>
            当发送数据处理完成后，回调该函数执行发送
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="59bc292d-2c55-feb4-af43-38d901303afb.htm">UpdateCacheTimeWhenRev</a></td><td>
            是否在收到数据时，即刷新缓存时间。默认true。
            <ol><li>当设为true时，将弱化<a href="86db6b58-435e-3548-8085-dc945dda4a90.htm">CacheTimeout</a>的作用，只要一直有数据，则缓存不会过期。</li><li>当设为false时，则在<a href="86db6b58-435e-3548-8085-dc945dda4a90.htm">CacheTimeout</a>的时效内。必须完成单个缓存的数据。</li></ol><br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>方法</h2><div id="IDGEASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="e55366a7-567d-9b9d-7eda-80fb4d5d4b0e.htm">Dispose<span id="LST83926536_2" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            释放资源。内部已经处理了<span class="noLink">SuppressFinalize(Object)</span><br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><a href="a2d7fd90-4cf5-018a-ceeb-3b7c8b49bf9a.htm">Dispose(Boolean)</a></td><td>
    
            调用释放，切换释放状态。
            
  <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="61a01c7e-031f-099a-2236-85af6bf0f7c8.htm">DisposeAsync</a></td><td>
            异步释放资源。内部已经处理了<span class="noLink">SuppressFinalize(Object)</span><br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><a href="4757f0b4-6370-cf9c-8466-c0182d831342.htm">DisposeAsyncCore</a></td><td>
            异步释放资源。注意：此方法仅在调用<span class="noLink">DisposeAsync<span id="LST83926536_3" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>时有效。
            <br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><span class="noLink">Equals</span></td><td>Determines whether the specified object is equal to the current object.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><span class="noLink">Finalize</span></td><td>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><span class="noLink">GetHashCode</span></td><td>Serves as the default hash function.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><span class="noLink">GetType</span></td><td>Gets the <span class="noLink">Type</span> of the current instance.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><a href="eabfe2ba-4606-4b16-ca8a-b8a200616bb4.htm">GoReceived</a></td><td>
            处理已经经过预先处理后的数据
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="0f182129-990a-d288-6a55-eb81ba29a263.htm">GoSend</a></td><td>
            发送已经经过预先处理后的数据
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="ab00f350-99f6-ad3d-1df6-f4e727b2bcd0.htm">GoSendAsync</a></td><td>
            异步发送已经经过预先处理后的数据
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><span class="noLink">MemberwiseClone</span></td><td>Creates a shallow copy of the current <span class="noLink">Object</span>.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><a href="b0862330-2219-0344-84c5-92863fdc12e2.htm">OnError</a></td><td>
            在解析时发生错误。
            <br />(继承自 <a href="3f14012e-c265-8f7a-ec3b-ec8e47842ef2.htm">DataHandlingAdapter</a>。)</td></tr><tr><td><a href="2197dcff-981d-168c-912e-e928b952fa54.htm">OnLoaded</a></td><td>
            当适配器在被第一次加载时调用。
            <br />(继承自 <a href="3f14012e-c265-8f7a-ec3b-ec8e47842ef2.htm">DataHandlingAdapter</a>。)</td></tr><tr><td><a href="6bfc183f-dd07-f179-11a7-d0b6df860bb7.htm">PreviewReceived</a></td><td>
            当接收到数据时处理数据
            <br />(重写 <a href="a0abfa92-a0a6-1a29-e39f-51289a742327.htm">SingleStreamDataHandlingAdapter<span id="LST83926536_4" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>PreviewReceived(ByteBlock)</a>)</td></tr><tr><td><a href="13072284-af3e-da83-e38a-eb34c7745297.htm">PreviewSend(IList<span id="LST83926536_5" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ArraySegment<span id="LST83926536_6" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST83926536_7" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST83926536_8" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
    
            组合发送预处理数据，
            当属性SplicingSend实现为True时，系统才会调用该方法。
            
  <br />(重写 <a href="bdd91572-414b-863d-ca43-a7d314a3c52d.htm">SingleStreamDataHandlingAdapter<span id="LST83926536_9" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>PreviewSend(IList<span id="LST83926536_10" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ArraySegment<span id="LST83926536_11" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST83926536_12" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST83926536_13" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>)</td></tr><tr><td><a href="3ecaa26f-b61f-0cd4-227c-80476fc7228d.htm">PreviewSend(IRequestInfo)</a></td><td>
    
            当发送数据前预先处理数据
            
  <br />(重写 <a href="669fce58-bf12-7103-f1ab-18f8b2790621.htm">SingleStreamDataHandlingAdapter<span id="LST83926536_14" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>PreviewSend(IRequestInfo)</a>)</td></tr><tr><td><a href="df911290-d854-b322-7ee3-f13156771b9d.htm">PreviewSend(<span id="LST83926536_15" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST83926536_16" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            当发送数据前处理数据
            <br />(重写 <a href="db4046a6-2d96-b901-fa0b-8186c4ab10af.htm">SingleStreamDataHandlingAdapter<span id="LST83926536_17" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>PreviewSend(<span id="LST83926536_18" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST83926536_19" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a>)</td></tr><tr><td><a href="3727d1e0-6df5-437f-3efb-17c6206ce00f.htm">PreviewSendAsync(IList<span id="LST83926536_20" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ArraySegment<span id="LST83926536_21" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST83926536_22" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST83926536_23" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            组合发送预处理数据，
            当属性SplicingSend实现为True时，系统才会调用该方法。
            <br />(重写 <a href="bc0c06be-48a9-87e1-3d4d-0bd219e7662f.htm">SingleStreamDataHandlingAdapter<span id="LST83926536_24" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>PreviewSendAsync(IList<span id="LST83926536_25" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ArraySegment<span id="LST83926536_26" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST83926536_27" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST83926536_28" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>)</td></tr><tr><td><a href="5148eb99-374a-adae-8fe9-96b1429412c1.htm">PreviewSendAsync(IRequestInfo)</a></td><td>
            当发送数据前预先处理数据
            <br />(重写 <a href="5eb3ac12-02ca-01e9-cb64-a959287ab9a3.htm">SingleStreamDataHandlingAdapter<span id="LST83926536_29" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>PreviewSendAsync(IRequestInfo)</a>)</td></tr><tr><td><a href="13c95f40-6d89-5463-234c-0a16ecbc7e6e.htm">PreviewSendAsync(<span id="LST83926536_30" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST83926536_31" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            当发送数据前预先处理数据
            <br />(重写 <a href="0c9b8036-823b-eaa0-44b3-080d361482ed.htm">SingleStreamDataHandlingAdapter<span id="LST83926536_32" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>PreviewSendAsync(<span id="LST83926536_33" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST83926536_34" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a>)</td></tr><tr><td><a href="010c6b06-979e-c81c-9c97-2fe043bfdaac.htm">ReceivedInput</a></td><td>
            收到数据的切入点，该方法由框架自动调用。
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="a93754f0-871f-eddb-c7f3-cdc605f25211.htm">Reset</a></td><td>
    
            重置解析器到初始状态，一般在<a href="b0862330-2219-0344-84c5-92863fdc12e2.htm">OnError(Exception, String, Boolean, Boolean)</a>被触发时，由返回值指示是否调用。
            
  <br />(重写 <a href="9a139a7a-6dbc-3093-671f-6bb4677b1498.htm">SingleStreamDataHandlingAdapter<span id="LST83926536_35" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Reset<span id="LST83926536_36" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>)</td></tr><tr><td><a href="816f55c4-3a06-ee7e-b5f1-e228b6b1ac1d.htm">SendInput(IList<span id="LST83926536_37" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ArraySegment<span id="LST83926536_38" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST83926536_39" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST83926536_40" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            发送数据的切入点，该方法由框架自动调用。
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="66a61cae-9b05-c4ff-51af-dd455d505af0.htm">SendInput(IRequestInfo)</a></td><td>
            发送数据的切入点，该方法由框架自动调用。
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="5fc8243d-22fa-b456-f259-df3921526868.htm">SendInput(<span id="LST83926536_41" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST83926536_42" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            发送数据的切入点，该方法由框架自动调用。
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="116a89fe-989a-0ce2-7afe-0ade5da9f084.htm">SendInputAsync(IList<span id="LST83926536_43" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ArraySegment<span id="LST83926536_44" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST83926536_45" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST83926536_46" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            发送数据的切入点，该方法由框架自动调用。
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="538bab4b-2de8-b3cf-47fd-bee5502222d0.htm">SendInputAsync(IRequestInfo)</a></td><td>
            发送数据的切入点，该方法由框架自动调用。
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="a06cbca4-a9b2-9e92-cb7d-63d2b6d9519f.htm">SendInputAsync(<span id="LST83926536_47" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST83926536_48" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            发送数据的切入点，该方法由框架自动调用。
            <br />(继承自 <a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>。)</td></tr><tr><td><a href="b822d86e-7ba1-f472-e7bf-b0e3c060d1b9.htm">ThrowIfDisposed</a></td><td>
            判断是否已经被释放，如果是，则抛出异常。
            <br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><span class="noLink">ToString</span></td><td>Returns a string that represents the current object.<br />(继承自 <span class="noLink">Object</span>。)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>扩展方法</h2><div id="IDAEASection"><table id="ExtensionList" class="table is-hoverable"><tr><td><a href="be113a0d-6f9b-cd4d-7492-f9e899d24292.htm">Config</a></td><td>
            将<a href="29d74253-acee-8ac7-c0b0-b71ff3e3a71e.htm">TouchSocketConfig</a>中的配置，装载在<a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>上。
            <br />(由 <a href="bbb6fb07-9e65-636e-723d-7c18cc7337d3.htm">DataHandlingAdapterExtension</a> 定义。)</td></tr><tr><td><a href="151f05ea-579d-e61c-a1ac-7fa12ca6ddb0.htm">Config</a></td><td>
            将<a href="29d74253-acee-8ac7-c0b0-b71ff3e3a71e.htm">TouchSocketConfig</a>中的配置，装载在<a href="c413cc7f-020e-d6c9-fb58-2efc51c070ea.htm">SingleStreamDataHandlingAdapter</a>上。
            <br />(由 <a href="bbb6fb07-9e65-636e-723d-7c18cc7337d3.htm">DataHandlingAdapterExtension</a> 定义。)</td></tr><tr><td><a href="878403cd-f12c-edde-588e-08269fc9e04c.htm">Map</a></td><td>
            简单对象映射
            <br />(由 <a href="02bbd272-534f-46ef-2987-02490a9e41e9.htm">Mapper</a> 定义。)</td></tr><tr><td><a href="fb7e6dd3-8e3a-2831-644a-c77d3c5d6d6e.htm">Map</a></td><td>
            简单对象映射
            <br />(由 <a href="02bbd272-534f-46ef-2987-02490a9e41e9.htm">Mapper</a> 定义。)</td></tr><tr><td><a href="9a18a592-c63b-7ce8-f2d6-6d9ac6e2d62e.htm">Map<span id="LST83926536_49" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TTarget<span id="LST83926536_50" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            简单映射
            <br />(由 <a href="02bbd272-534f-46ef-2987-02490a9e41e9.htm">Mapper</a> 定义。)</td></tr><tr><td><a href="0c8d4cc8-38de-cbf6-43ac-d65d145fe130.htm">ToJsonString</a></td><td>
            转换为Json
            <br />(由 <a href="8552a33c-c4bb-54b7-1888-08ff2740edab.htm">SerializeConvert</a> 定义。)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>参见</h2><div id="seeAlsoSection"><h4>引用</h4><div><a href="6bd098f4-7c88-a31a-e48b-613ce7814aac.htm">TouchSocket.Core 命名空间</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">构造函数</a></li><li><a class="quickLink">属性</a></li><li><a class="quickLink">方法</a></li><li><a class="quickLink">扩展方法</a></li><li><a class="quickLink">参见</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>