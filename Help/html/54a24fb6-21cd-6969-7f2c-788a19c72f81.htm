<!DOCTYPE html ><html lang="zh-CN"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><link rel="stylesheet" href="../css/zh-CN.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>DmtpActor 方法</title><meta name="Title" content="方法" /><meta name="Help.Id" content="Methods.T:TouchSocket.Dmtp.DmtpActor" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="TouchSocket.Dmtp" /><meta name="guid" content="54a24fb6-21cd-6969-7f2c-788a19c72f81" /><meta name="tocFile" content="../toc/IDCE.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">TouchSocket手册</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><div id="HeaderPrelimContainer" class="level my-1 px-2"><div id="HeaderTextContainer" class="level-left"><div class="level-item"><span class="has-text-grey-light">一款简单易用的基础网络通讯组件库。</span></div></div></div><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Dmtp<wbr />Actor 方法</h1><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>方法</h2><div id="IDODASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="70d8817e-152f-4724-cbd7-0828dfaac3d2.htm">ChannelExisted</a></td><td>
            判断指定Id的通道是否已经存在
            </td></tr><tr><td><a href="80d9de63-3630-c4c6-bd0d-13c875f82bca.htm">Close</a></td><td>
            关闭客户端。
            </td></tr><tr><td><a href="6f2daf30-528f-8e5b-0c4e-28dcc3c7055d.htm">CreateChannel(Metadata)</a></td><td>
            在当前对点创建一个随机Id的通道
            </td></tr><tr><td><a href="4415b7de-ee15-e45a-b2b1-f048fdb921d9.htm">CreateChannel(Int32, Metadata)</a></td><td>
            在当前对点创建一个指定Id的通道
            </td></tr><tr><td><a href="e022f0f5-70bf-c4ba-4f2e-e9a906d36dbe.htm">CreateChannel(String, Metadata)</a></td><td>
            在指定路由点创建一个随机Id的通道
            </td></tr><tr><td><a href="15e2f29a-1036-f378-3176-8da5a413ca46.htm">CreateChannel(String, Int32, Metadata)</a></td><td>
            在指定路由点创建一个指定Id的通道
            </td></tr><tr><td><a href="09fd0fd1-161b-662b-e825-eb45c2e38e20.htm">CreateChannelAsync(Metadata)</a></td><td>
            在当前对点创建一个随机Id的通道
            </td></tr><tr><td><a href="9803bc44-fad3-a7d6-db44-8cab1d03511a.htm">CreateChannelAsync(Int32, Metadata)</a></td><td>
            在当前对点创建一个指定Id的通道
            </td></tr><tr><td><a href="cb3db1e2-3cf5-a07f-cc37-2626478ade57.htm">CreateChannelAsync(String, Metadata)</a></td><td>
            在指定路由点创建一个随机Id的通道
            </td></tr><tr><td><a href="9fd2d979-9cd6-fec1-3baa-fcd97ecca329.htm">CreateChannelAsync(String, Int32, Metadata)</a></td><td>
            在指定路由点创建一个指定Id的通道
            </td></tr><tr><td><a href="e55366a7-567d-9b9d-7eda-80fb4d5d4b0e.htm">Dispose</a></td><td>
            释放资源。内部已经处理了<span class="noLink">SuppressFinalize(Object)</span><br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><a href="61a01c7e-031f-099a-2236-85af6bf0f7c8.htm">DisposeAsync</a></td><td>
            异步释放资源。内部已经处理了<span class="noLink">SuppressFinalize(Object)</span><br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><span class="noLink">Equals</span></td><td>Determines whether the specified object is equal to the current object.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><span class="noLink">GetHashCode</span></td><td>Serves as the default hash function.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><span class="noLink">GetType</span></td><td>Gets the <span class="noLink">Type</span> of the current instance.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><a href="ea521899-5cfc-ffb4-b0ce-54ccab0c8dfe.htm">GetValue<span id="LST1F0CA42D_0" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TValue<span id="LST1F0CA42D_1" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            获取依赖注入的值，当没有注入时，会返回默认值。
            <br />(继承自 <a href="c7528c46-b166-c6d5-9637-c1433bb94961.htm">DependencyObject</a>。)</td></tr><tr><td><a href="2ac9beb8-26eb-d23c-baa7-089d325c63fd.htm">Handshake</a></td><td>
            建立对点
            </td></tr><tr><td><a href="d0e1d4e9-1c72-cde8-5663-c6f223b365ed.htm">HandshakeAsync</a></td><td>
            建立对点
            </td></tr><tr><td><a href="087be592-2e9e-aa78-e80c-efab210a09bb.htm">HasValue<span id="LST1F0CA42D_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TValue<span id="LST1F0CA42D_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            是否有值。
            <br />(继承自 <a href="c7528c46-b166-c6d5-9637-c1433bb94961.htm">DependencyObject</a>。)</td></tr><tr><td><a href="e69c4f02-8acc-0717-d1ea-77d8f3f45d3e.htm">InputReceivedData</a></td><td>
            处理接收数据.
            <p><table class="table is-hoverable"><tr /><tr /><tr /><tr /><tr /><tr /><tr /><tr /><tr /><tr /></table></p></td></tr><tr><td><a href="bdef5829-8445-cfd5-e6ba-0fea77487632.htm">Ping(Int32)</a></td><td>
            向当前对点发送一个Ping报文，并且等待回应。
            </td></tr><tr><td><a href="5a29688e-338a-7fd4-3f1e-b3027a9b1f7d.htm">Ping(String, Int32)</a></td><td>
            向指定路由点发送一个Ping报文，并且等待回应。
            </td></tr><tr><td><a href="09ffcba1-950b-0130-5543-4d04768b46f7.htm">PingAsync(Int32)</a></td><td>
            向当前对点发送一个Ping报文，并且等待回应。
            </td></tr><tr><td><a href="7050d96b-a698-a911-de2e-e7abaed8bb77.htm">PingAsync(String, Int32)</a></td><td>
            向指定路由点发送一个Ping报文，并且等待回应。
            </td></tr><tr><td><a href="b7833a91-06f3-b415-d30b-17d5c779accb.htm">RemoveValue<span id="LST1F0CA42D_4" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TValue<span id="LST1F0CA42D_5" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            重置属性值。
            <br />(继承自 <a href="c7528c46-b166-c6d5-9637-c1433bb94961.htm">DependencyObject</a>。)</td></tr><tr><td><a href="59589a28-e9b0-6c8a-aeb3-68cb7ae31e7e.htm">ResetId</a></td><td>
            重新设置Id,并且同步到对端
            </td></tr><tr><td><a href="bf9869dd-0a9c-f473-fb8a-a4f22333057a.htm">ResetIdAsync</a></td><td>
            重新设置Id,并且同步到对端
            </td></tr><tr><td><a href="316fe52e-62b6-ebb6-f0cd-f45e4f787a63.htm">Send(UInt16, ByteBlock)</a></td><td>
            发送字节块
            </td></tr><tr><td><a href="63b3320c-0204-45f8-83f6-2f8d8ed70a33.htm">Send(UInt16, <span id="LST1F0CA42D_6" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST1F0CA42D_7" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            发送字节
            </td></tr><tr><td><a href="8f15d9e2-c1f9-1b14-cbee-09b30bff8480.htm">SendAsync(UInt16, ByteBlock)</a></td><td>
            异步发送字节块
            </td></tr><tr><td><a href="6fd54db3-c109-5900-ba78-50cfbb82bae1.htm">SendAsync(UInt16, <span id="LST1F0CA42D_8" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST1F0CA42D_9" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            异步发送字节
            </td></tr><tr><td><a href="812a69fc-0460-ff6a-05bc-dc3fdfe33970.htm">SendClose</a></td><td>
            发送Close请求
            </td></tr><tr><td><a href="2313dcf1-de13-3080-6972-0b4c10a67fac.htm">SendFastObject<span id="LST1F0CA42D_10" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1F0CA42D_11" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            以Fast序列化，发送小（64K）对象。接收方需要使用ReadObject读取对象。
            </td></tr><tr><td><a href="0de17ff4-91a0-2592-94b8-ca9901d68584.htm">SendPackage</a></td><td>
            以包发送小（64K）对象。接收方ReadPackage即可。
            </td></tr><tr><td><a href="26719fbe-20f2-c5d5-b284-bf3ff2f2ac16.htm">SendString</a></td><td>
            发送以utf-8编码的字符串。
            </td></tr><tr><td><a href="75861cc1-28d4-9111-56b1-fc2d69925f47.htm">SendStringAsync</a></td><td>
            发送以utf-8编码的字符串。
            </td></tr><tr><td><a href="2dcd25bd-0898-6fa8-1315-a2c545c9c288.htm">SetValue<span id="LST1F0CA42D_12" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TValue<span id="LST1F0CA42D_13" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            设置依赖注入的值
            <br />(继承自 <a href="c7528c46-b166-c6d5-9637-c1433bb94961.htm">DependencyObject</a>。)</td></tr><tr><td><span class="noLink">ToString</span></td><td>Returns a string that represents the current object.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><a href="bfb6dd19-3e6c-8173-1c4d-c83c145f6883.htm">TryFindDmtpActor</a></td><td>
            尝试获取指定Id的DmtpActor。一般此方法仅在Service下有效。
            </td></tr><tr><td><a href="19363dd0-de68-196d-9905-2969cf26f79c.htm">TryGetValue<span id="LST1F0CA42D_14" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TValue<span id="LST1F0CA42D_15" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            尝试获取依赖注入的值，当没有注入时，会返回<span class="keyword"><span id="LST1F0CA42D_16" data-languageSpecificText="vb=False|nu=false"></span></span>。
            <br />(继承自 <a href="c7528c46-b166-c6d5-9637-c1433bb94961.htm">DependencyObject</a>。)</td></tr><tr><td><a href="cd5af0b4-281f-7b7c-0e64-d44c5940e467.htm">TryRemoveValue<span id="LST1F0CA42D_17" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TValue<span id="LST1F0CA42D_18" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            重置属性值。
            <br />(继承自 <a href="c7528c46-b166-c6d5-9637-c1433bb94961.htm">DependencyObject</a>。)</td></tr><tr><td><a href="02cdff67-aeaa-0292-44a5-611e23235d74.htm">TryRoute</a></td><td>
            尝试请求路由，触发路由相关插件。并在路由失败时向<a href="0002113f-ca52-7266-c748-67bc6e91f5aa.htm">Message</a>中传递消息。
            </td></tr><tr><td><a href="5a5adf32-7e1b-e1dc-5b4c-c9ee9d42ff39.htm">TrySubscribeChannel</a></td><td>
            尝试订阅已存在的通道。
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>扩展方法</h2><div id="IDADASection"><table id="ExtensionList" class="table is-hoverable"><tr><td><a href="914e31ca-7cc2-6873-db95-e570b0f384ff.htm">GetDmtpFileTransferActor</a></td><td>
            从<a href="27977c0b-f346-4997-6acb-268134ad39a8.htm">DmtpActor</a>中获取<a href="6174c6c5-2b36-f87a-c2af-f682e50fbe84.htm">IDmtpFileTransferActor</a><br />(由 <a href="977795fc-cbe4-ef71-8510-888125c3e81f.htm">DmtpFileTransferActorExtension</a> 定义。)</td></tr><tr><td><a href="adfec8a8-7db4-4284-322b-2196f538ddbf.htm">GetDmtpRedisActor</a></td><td>
            从<a href="27977c0b-f346-4997-6acb-268134ad39a8.htm">DmtpActor</a>中获得<a href="8626c08b-a526-7c58-b320-2ceae2f1bf79.htm">IDmtpRedisActor</a><br />(由 <a href="f6766c8a-c2ee-d83d-a03c-5a8f641134a2.htm">DmtpRedisActorExtensions</a> 定义。)</td></tr><tr><td><a href="f7e9c7cc-25ef-5855-dd3a-e98a1c690ca3.htm">GetDmtpRouterPackageActor</a></td><td>
            从<a href="b9a6b1f1-86e4-6683-d5e3-32ac01f0bd13.htm">IDmtpActor</a>中获取<a href="b740ea2c-13e7-6cce-93db-9f4ba5cbe12c.htm">IDmtpRouterPackageActor</a><br />(由 <a href="3e3b8287-711c-0509-70a8-5c04e2ce7154.htm">DmtpRouterPackageExtension</a> 定义。)</td></tr><tr><td><a href="692a2e51-88ab-081a-83d6-71dc7f126d73.htm">GetDmtpRpcActor</a></td><td>
            从<a href="27977c0b-f346-4997-6acb-268134ad39a8.htm">DmtpActor</a>中获取<a href="f01fcd1a-0943-3bb9-b327-2d9935612fc6.htm">IDmtpRpcActor</a><br />(由 <a href="8e1c5535-7e98-6936-6d93-c5b97e5c0860.htm">DmtpRpcActorExtension</a> 定义。)</td></tr><tr><td><a href="c70825b7-b966-05e8-9aeb-c48f1578e791.htm">GetRemoteAccessActor</a></td><td>
            从DmtpActor中获取DmtpRpcActor
            <br />(由 <a href="096cea0c-ea3a-d7ac-5589-9a06cabd9df3.htm">DmtpRemoteAccessExtension</a> 定义。)</td></tr><tr><td><a href="803b6790-cb60-1745-b404-dceb00331874.htm">GetRemoteStreamActor</a></td><td>
            从<a href="b9a6b1f1-86e4-6683-d5e3-32ac01f0bd13.htm">IDmtpActor</a>中获取<a href="eb0c54f1-ae86-9315-8351-7efcde5a3a2f.htm">IDmtpRemoteStreamActor</a><br />(由 <a href="7801c437-60bb-266a-ba8b-058ce90896b8.htm">DmtpRemoteStreamExtension</a> 定义。)</td></tr><tr><td><a href="878403cd-f12c-edde-588e-08269fc9e04c.htm">Map</a></td><td>
            简单对象映射
            <br />(由 <a href="02bbd272-534f-46ef-2987-02490a9e41e9.htm">Mapper</a> 定义。)</td></tr><tr><td><a href="fb7e6dd3-8e3a-2831-644a-c77d3c5d6d6e.htm">Map</a></td><td>
            简单对象映射
            <br />(由 <a href="02bbd272-534f-46ef-2987-02490a9e41e9.htm">Mapper</a> 定义。)</td></tr><tr><td><a href="9a18a592-c63b-7ce8-f2d6-6d9ac6e2d62e.htm">Map<span id="LST1F0CA42D_19" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TTarget<span id="LST1F0CA42D_20" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            简单映射
            <br />(由 <a href="02bbd272-534f-46ef-2987-02490a9e41e9.htm">Mapper</a> 定义。)</td></tr><tr><td><a href="42561b0b-8ddf-b261-08a5-1b07b9de94b4.htm">SafeDispose</a></td><td>
            安全性释放（不用判断对象是否为空）。不会抛出任何异常。
            <br />(由 <a href="08dccf0a-072b-52b7-b602-1958417b7198.htm">SystemExtensions</a> 定义。)</td></tr><tr><td><a href="bb3064e9-f5d3-e96a-2cfb-44e7aa6e9e6b.htm">SetRemoteAccessActor</a></td><td>
            向DmtpActor中设置RemoteAccessActor
            <br />(由 <a href="096cea0c-ea3a-d7ac-5589-9a06cabd9df3.htm">DmtpRemoteAccessExtension</a> 定义。)</td></tr><tr><td><a href="802d8e56-34aa-9696-0bd2-dd3c3127a523.htm">SetRemoteStreamActor</a></td><td>
            向<a href="b9a6b1f1-86e4-6683-d5e3-32ac01f0bd13.htm">IDmtpActor</a>中设置<a href="eb0c54f1-ae86-9315-8351-7efcde5a3a2f.htm">IDmtpRemoteStreamActor</a><br />(由 <a href="7801c437-60bb-266a-ba8b-058ce90896b8.htm">DmtpRemoteStreamExtension</a> 定义。)</td></tr><tr><td><a href="3e8661a3-b684-77b7-18e3-29de49e81ca3.htm">SetRemoteStreamActor</a></td><td>
            向<a href="b9a6b1f1-86e4-6683-d5e3-32ac01f0bd13.htm">IDmtpActor</a>中设置<a href="b740ea2c-13e7-6cce-93db-9f4ba5cbe12c.htm">IDmtpRouterPackageActor</a><br />(由 <a href="3e3b8287-711c-0509-70a8-5c04e2ce7154.htm">DmtpRouterPackageExtension</a> 定义。)</td></tr><tr><td><a href="0c8d4cc8-38de-cbf6-43ac-d65d145fe130.htm">ToJsonString</a></td><td>
            转换为Json
            <br />(由 <a href="8552a33c-c4bb-54b7-1888-08ff2740edab.htm">SerializeConvert</a> 定义。)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>参见</h2><div id="seeAlsoSection"><h4>引用</h4><div><a href="27977c0b-f346-4997-6acb-268134ad39a8.htm">DmtpActor 类</a></div><div><a href="efc93c14-3d45-c826-b03a-3a54da781746.htm">TouchSocket.Dmtp 命名空间</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">方法</a></li><li><a class="quickLink">扩展方法</a></li><li><a class="quickLink">参见</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p>Copyright © 2020-2024 若汝棋茗.</p><div class="feedbackLink">有关这个主题的评论请发邮件到
        <a id="HT_MailLink" href="mailto:505554090%40qq.com?Subject=TouchSocket手册">邮箱</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>