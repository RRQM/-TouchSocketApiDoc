<!DOCTYPE html ><html lang="zh-CN"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><link rel="stylesheet" href="../css/zh-CN.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>SerializeConvert 类</title><meta name="Title" content="SerializeConvert" /><meta name="Help.Id" content="T:TouchSocket.Core.SerializeConvert" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="TouchSocket.Core" /><meta name="guid" content="8552a33c-c4bb-54b7-1888-08ff2740edab" /><meta name="Description" content="高性能序列化器" /><meta name="tocFile" content="../toc/IDC.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">A Sandcastle Documented Class Library</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Serialize<wbr />Convert 类</h1><div class="summary">
            高性能序列化器
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>命名空间：</strong> <a href="6bd098f4-7c88-a31a-e48b-613ce7814aac.htm">TouchSocket.Core</a><br /><strong>程序集：</strong> TouchSocket.Core (在 TouchSocket.Core.dll 中) 版本：2.0.0-beta.270+78c6852f7ef501b7f66c7ecafde4229aee156a87<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="复制"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>复制</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="identifier">SerializeConvert</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="复制"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>复制</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb">&lt;<span class="identifier">ExtensionAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">NotInheritable</span> <span class="keyword">Class</span> <span class="identifier">SerializeConvert</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="复制"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>复制</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs">[&lt;<span class="identifier">AbstractClassAttribute</span>&gt;]
[&lt;<span class="identifier">SealedAttribute</span>&gt;]
[&lt;<span class="identifier">ExtensionAttribute</span>&gt;]
<span class="keyword">type</span> <span class="identifier">SerializeConvert</span> = <span class="keyword">class</span> <span class="keyword">end</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><span class="noLink">Object</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">SerializeConvert</span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>属性</h2><div id="IDTEASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="3c1e3086-b892-2af3-e5f8-569dbb63e891.htm">NewtonsoftJsonFirst</a></td><td>
            首先使用NewtonsoftJson.默认True。
            <p>
            当设置True时，json序列化会优先使用NewtonsoftJson。
            当设置为FALSE，netstandard2.0和net45平台将继续使用。
            其他平台将使用System.Text.Json。
            </p><br /><span class="tag is-danger">已过时。</span></td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>方法</h2><div id="IDBEASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="f8089c5f-ce94-0baa-aea0-8dfc31a29286.htm">BinaryDeserialize(<span id="LST5A07104B_0" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST5A07104B_1" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32, SerializationBinder)</a></td><td>
            反序列化
            </td></tr><tr><td><a href="d5e89fa2-2144-2a9e-1949-bc14f4556785.htm">BinaryDeserialize<span id="LST5A07104B_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST5A07104B_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(<span id="LST5A07104B_4" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST5A07104B_5" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            将二进制数据反序列化为指定类型对象
            </td></tr><tr><td><a href="4d380ff7-0c6b-f9c2-eb8a-2849ffd0161a.htm">BinaryDeserialize<span id="LST5A07104B_6" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST5A07104B_7" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(<span id="LST5A07104B_8" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST5A07104B_9" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, SerializationBinder)</a></td><td>
            从Byte[]中反序列化
            </td></tr><tr><td><a href="ebd4e807-d3e5-5faf-a14d-7b7eda6a324e.htm">BinaryDeserialize<span id="LST5A07104B_10" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST5A07104B_11" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Stream, SerializationBinder)</a></td><td>
            从Stream中反序列化
            </td></tr><tr><td><a href="8b2731b3-8ba8-843c-0b31-afb1080f2ebd.htm">BinaryDeserialize<span id="LST5A07104B_12" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST5A07104B_13" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(<span id="LST5A07104B_14" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST5A07104B_15" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32, SerializationBinder)</a></td><td>
            从Byte[]中反序列化
            </td></tr><tr><td><a href="db3a1edd-28d3-6b4f-5b98-122e851ecf1b.htm">BinaryDeserializeFromFile<span id="LST5A07104B_16" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST5A07104B_17" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            将二进制文件数据反序列化为指定类型对象
            </td></tr><tr><td><a href="7d449282-13f0-8a48-8d5e-4e01730a35c3.htm">BinarySerialize(Object<span id="LST5A07104B_18" data-languageSpecificText="cpp=%"></span>)</a></td><td>
            普通二进制序列化对象
            </td></tr><tr><td><a href="8d3c71b5-aa32-33d5-2109-7966e64bb1bb.htm">BinarySerialize(Stream, Object<span id="LST5A07104B_19" data-languageSpecificText="cpp=%"></span>)</a></td><td>
            二进制序列化对象
            </td></tr><tr><td><a href="de1ed472-e4cc-df06-28f3-c55d6ffb35e9.htm">BinarySerializeToFile</a></td><td>
            二进制序列化对象至文件
            </td></tr><tr><td><a href="d3b829c5-679a-bdab-1b29-65aaa61f04b1.htm">FastBinaryDeserialize(<span id="LST5A07104B_20" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST5A07104B_21" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Type)</a></td><td>
            Fast反序列化
            </td></tr><tr><td><a href="a0903208-8669-b51d-6508-e3172624a98b.htm">FastBinaryDeserialize<span id="LST5A07104B_22" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST5A07104B_23" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(<span id="LST5A07104B_24" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST5A07104B_25" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            从Byte[]中反序列化
            </td></tr><tr><td><a href="adcf371d-b27a-a573-0f97-b32bba1ac369.htm">FastBinaryDeserialize<span id="LST5A07104B_26" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST5A07104B_27" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(<span id="LST5A07104B_28" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST5A07104B_29" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td>
            Fast反序列化
            </td></tr><tr><td><a href="6da68d0e-bf11-760d-b979-0d58c40f94ff.htm">FastBinarySerialize<span id="LST5A07104B_30" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST5A07104B_31" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(T<span id="LST5A07104B_32" data-languageSpecificText="cpp=%"></span>)</a></td><td>
            Fast二进制序列化对象
            </td></tr><tr><td><a href="d92c9c8a-adfb-d7ea-0e72-e0b7988a29ef.htm">FastBinarySerialize<span id="LST5A07104B_33" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST5A07104B_34" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(ByteBlock, T<span id="LST5A07104B_35" data-languageSpecificText="cpp=%"></span>)</a></td><td>
            Fast二进制序列化对象
            </td></tr><tr><td><a href="c69c935c-f357-f9e9-0aaa-020bb6eb6a74.htm">FromJsonString(String, Type)</a></td><td>
            从字符串到json
            </td></tr><tr><td><a href="43b36125-333a-1fe7-9629-ecb1625e3851.htm">FromJsonString<span id="LST5A07104B_36" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST5A07104B_37" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(String)</a></td><td>
            从字符串到json
            </td></tr><tr><td><a href="78bdded5-edfc-47f9-7471-7acbd3c06e63.htm">JsonDeserializeFromBytes(<span id="LST5A07104B_38" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST5A07104B_39" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Type)</a></td><td>
            Xml反序列化
            </td></tr><tr><td><a href="97103a90-007f-b808-4ba3-c89d836c9b1a.htm">JsonDeserializeFromBytes<span id="LST5A07104B_40" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST5A07104B_41" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(<span id="LST5A07104B_42" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST5A07104B_43" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Json反序列化
            </td></tr><tr><td><a href="17777f68-4e74-8b90-7731-ef16b25b0fd6.htm">JsonDeserializeFromFile<span id="LST5A07104B_44" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST5A07104B_45" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Json反序列化
            </td></tr><tr><td><a href="7a8b631e-8cb9-e98f-30d2-803d3fe6024c.htm">JsonDeserializeFromString<span id="LST5A07104B_46" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST5A07104B_47" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Json反序列化
            </td></tr><tr><td><a href="c839ee5c-6c6d-6c45-a96e-ee988ee74759.htm">JsonSerializeToBytes</a></td><td>
            Json序列化数据对象
            </td></tr><tr><td><a href="08e6255d-c5ad-7de4-a551-32f38c7f6522.htm">JsonSerializeToFile</a></td><td>
            Json序列化至文件
            </td></tr><tr><td><a href="0c8d4cc8-38de-cbf6-43ac-d65d145fe130.htm">ToJsonString</a></td><td>
            转换为Json
            </td></tr><tr><td><a href="fc3a490c-9b92-8d43-6991-7a75c3238f85.htm">XmlDeserializeFromBytes(<span id="LST5A07104B_48" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST5A07104B_49" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Type)</a></td><td>
            Xml反序列化
            </td></tr><tr><td><a href="95e27262-94b3-77cb-4f21-dc07940567a0.htm">XmlDeserializeFromBytes<span id="LST5A07104B_50" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST5A07104B_51" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(<span id="LST5A07104B_52" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST5A07104B_53" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Xml反序列化
            </td></tr><tr><td><a href="750fc942-7e86-ea78-84dd-9b5372531633.htm">XmlDeserializeFromFile<span id="LST5A07104B_54" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST5A07104B_55" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Xml反序列化
            </td></tr><tr><td><a href="a1f198a2-a990-21db-5234-4c22975da7d3.htm">XmlDeserializeFromString<span id="LST5A07104B_56" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST5A07104B_57" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(String)</a></td><td>
            Xml反序列化
            </td></tr><tr><td><a href="5b3e8a4b-fd62-e540-59d0-d093764894dd.htm">XmlDeserializeFromString<span id="LST5A07104B_58" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST5A07104B_59" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(String, Encoding)</a></td><td>
            Xml反序列化
            </td></tr><tr><td><a href="97abb84d-5935-e184-d6c0-e4fee9808376.htm">XmlSerializeToBytes</a></td><td>
            Xml序列化数据对象
            </td></tr><tr><td><a href="c08fb7b7-91cd-f09b-66f3-fcd3428593f9.htm">XmlSerializeToFile</a></td><td>
            Xml序列化至文件
            </td></tr><tr><td><a href="cf150e6a-a14b-9162-c738-9be658804d16.htm">XmlSerializeToString(Object)</a></td><td>
            Xml序列化数据对象
            </td></tr><tr><td><a href="daf226ef-a71b-a1d5-9a8f-6ec81665ec4b.htm">XmlSerializeToString(Object, Encoding)</a></td><td>
            Xml序列化数据对象
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>参见</h2><div id="seeAlsoSection"><h4>引用</h4><div><a href="6bd098f4-7c88-a31a-e48b-613ce7814aac.htm">TouchSocket.Core 命名空间</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">属性</a></li><li><a class="quickLink">方法</a></li><li><a class="quickLink">参见</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>