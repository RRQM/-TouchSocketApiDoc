<!DOCTYPE html ><html lang="zh-CN"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><link rel="stylesheet" href="../css/zh-CN.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>SocketClient 方法</title><meta name="Title" content="方法" /><meta name="Help.Id" content="Methods.T:TouchSocket.Sockets.SocketClient" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="TouchSocket.Sockets" /><meta name="guid" content="d0679e2a-9032-f7b0-707c-5b4cee4a6395" /><meta name="tocFile" content="../toc/ID0CD0N.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">A Sandcastle Documented Class Library</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Socket<wbr />Client 方法</h1><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>方法</h2><div id="IDFDASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="78126cde-4397-6c7b-444c-c6776eeba3d7.htm">BreakOut</a></td><td>
            中断连接
            </td></tr><tr><td><a href="391b909f-807a-30d2-9c07-fabcc235e775.htm">ClearReceiver</a></td><td>
            移除同步数据接收器
            </td></tr><tr><td><a href="4265f4f9-7adb-8415-940b-7b22beab7e4b.htm">CloneTo</a></td><td>
            将当前对象的依赖项克隆到目标对象中
            <br />(继承自 <a href="c7528c46-b166-c6d5-9637-c1433bb94961.htm">DependencyObject</a>。)</td></tr><tr><td><a href="f49add93-d458-4b5e-2784-8d04940d8c3e.htm">Close</a></td><td>
            关闭客户端。
            </td></tr><tr><td><a href="0f0eabc1-cd5a-40d6-543a-12d1260b7190.htm">CreateReceiver</a></td><td>
            获取一个同步数据接收器
            </td></tr><tr><td><a href="e045c847-09c8-334e-bd7a-403e618fd26b.htm">DefaultSend</a></td><td>
            绕过适配器，直接发送字节流
            </td></tr><tr><td><a href="10e1f2e7-8c56-a24b-4576-43d48dc27832.htm">DefaultSendAsync</a></td><td>
            绕过适配器，直接发送字节流
            </td></tr><tr><td><a href="8866b630-56d5-360e-4cdb-4d141c77487e.htm">DirectResetId</a></td><td>
            直接重置内部Id。
            </td></tr><tr><td><a href="e55366a7-567d-9b9d-7eda-80fb4d5d4b0e.htm">Dispose<span id="LST342A9E58_0" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            释放资源。内部已经处理了<span class="noLink">SuppressFinalize(Object)</span><br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><a href="ae6316b3-26a6-637f-07ce-b95b4ed73a2f.htm">Dispose(Boolean)</a></td><td>
    
            调用释放，切换释放状态。
            
  <br />(重写 <a href="fd515ccd-50f1-d1ba-5b12-96b91d042c6e.htm">DependencyObject<span id="LST342A9E58_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Dispose(Boolean)</a>)</td></tr><tr><td><a href="61a01c7e-031f-099a-2236-85af6bf0f7c8.htm">DisposeAsync</a></td><td>
            异步释放资源。内部已经处理了<span class="noLink">SuppressFinalize(Object)</span><br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><a href="4757f0b4-6370-cf9c-8466-c0182d831342.htm">DisposeAsyncCore</a></td><td>
            异步释放资源。注意：此方法仅在调用<span class="noLink">DisposeAsync<span id="LST342A9E58_2" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>时有效。
            <br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><span class="noLink">Equals</span></td><td>Determines whether the specified object is equal to the current object.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><span class="noLink">Finalize</span></td><td>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><span class="noLink">GetHashCode</span></td><td>Serves as the default hash function.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><a href="68788689-0fd4-55ea-e3fc-683e5491325a.htm">GetStream</a></td><td>
    
            获取流，在正常模式下为<span class="noLink">NetworkStream</span>，在Ssl模式下为<span class="noLink">SslStream</span>。
            
  <br /><span class="tag is-danger">已过时。</span></td></tr><tr><td><span class="noLink">GetType</span></td><td>Gets the <span class="noLink">Type</span> of the current instance.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><a href="ea521899-5cfc-ffb4-b0ce-54ccab0c8dfe.htm">GetValue<span id="LST342A9E58_3" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TValue<span id="LST342A9E58_4" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            获取依赖注入的值，当没有注入时，会返回默认值。
            <br />(继承自 <a href="c7528c46-b166-c6d5-9637-c1433bb94961.htm">DependencyObject</a>。)</td></tr><tr><td><a href="ab21b1ee-6cf0-c0d5-fc4c-cb8c16e20831.htm">HandleReceivedData</a></td><td>
            处理已接收到的数据。
            <p>根据不同的数据处理适配器，会传递不同的数据</p><br /><span class="tag is-danger">已过时。</span></td></tr><tr><td><a href="087be592-2e9e-aa78-e80c-efab210a09bb.htm">HasValue<span id="LST342A9E58_5" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TValue<span id="LST342A9E58_6" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            是否有值。
            <br />(继承自 <a href="c7528c46-b166-c6d5-9637-c1433bb94961.htm">DependencyObject</a>。)</td></tr><tr><td><a href="4decdc05-6d9e-fd30-1d1a-8f9d2b021dbc.htm">IdChanged</a></td><td>
            当Id更新的时候触发
            </td></tr><tr><td><span class="noLink">MemberwiseClone</span></td><td>Creates a shallow copy of the current <span class="noLink">Object</span>.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><a href="c2b1a3e9-d6d5-6d5c-43f5-da4d4f7e453c.htm">OnConnected</a></td><td>
            当客户端完整建立Tcp连接。
            </td></tr><tr><td><a href="66a1560b-1ce7-0148-e575-7b3f9d3b4d1a.htm">OnConnecting</a></td><td>
            客户端正在连接。
            </td></tr><tr><td><a href="857ca8ce-925e-305a-80f8-037c1c818eca.htm">OnDisconnected</a></td><td>
            客户端已断开连接。
            </td></tr><tr><td><a href="5e6e6189-230b-c5c3-0e08-d258701aebbc.htm">OnDisconnecting</a></td><td>
            即将断开连接(仅主动断开时有效)。
            </td></tr><tr><td><a href="2b074ada-b1eb-3b11-0839-8bfbf4b74866.htm">OnInitialized</a></td><td>
            当初始化完成时，执行在<a href="66a1560b-1ce7-0148-e575-7b3f9d3b4d1a.htm">OnConnecting(ConnectingEventArgs)</a>之前。
            </td></tr><tr><td><a href="6f8c1960-7490-1b2e-adf6-1af7b245dbcd.htm">ReceivedData</a></td><td>
            当收到适配器处理的数据时。
            </td></tr><tr><td><a href="4d445553-8c3f-07af-2119-abaed5462515.htm">ReceivingData</a></td><td>
            当收到原始数据
            </td></tr><tr><td><a href="b7833a91-06f3-b415-d30b-17d5c779accb.htm">RemoveValue<span id="LST342A9E58_7" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TValue<span id="LST342A9E58_8" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            重置属性值。
            <br />(继承自 <a href="c7528c46-b166-c6d5-9637-c1433bb94961.htm">DependencyObject</a>。)</td></tr><tr><td><a href="d1ff86b3-06c0-2a12-ac64-d53496dfdb70.htm">ResetId</a></td><td>
    
            重新设置Id
            
  </td></tr><tr><td><a href="152da2a1-5fde-d11f-14f4-ba2ff36233c2.htm">Send(IList<span id="LST342A9E58_9" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ArraySegment<span id="LST342A9E58_10" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST342A9E58_11" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST342A9E58_12" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
    
            同步组合发送数据。
            <p>内部已经封装Ssl和发送长度检测，即：调用完成即表示数据全部发送完毕。</p><p>该发送会经过适配器封装，具体封装内容由适配器决定。</p></td></tr><tr><td><a href="f634fa05-d33c-c8b2-3833-6de6cfefdf51.htm">Send(IRequestInfo)</a></td><td>
    
            同步发送数据。
            <p>该发送会经过适配器封装，具体封装内容由适配器决定。</p></td></tr><tr><td><a href="7367c8f9-8eea-1623-c092-47cb462db705.htm">Send(String, IRequestInfo)</a></td><td>
    
            向对应Id的客户端发送
            
  </td></tr><tr><td><a href="4d14f327-0291-0c5a-4fe0-f371a03146b3.htm">Send(<span id="LST342A9E58_13" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST342A9E58_14" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            发送字节流
            </td></tr><tr><td><a href="8d0a96ac-cde6-f9a1-7cf9-71e638988490.htm">Send(String, <span id="LST342A9E58_15" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST342A9E58_16" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            发送字节流
            </td></tr><tr><td><a href="acb02daf-c3e7-c0dc-5c85-39d0cb216548.htm">SendAsync(IList<span id="LST342A9E58_17" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ArraySegment<span id="LST342A9E58_18" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST342A9E58_19" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST342A9E58_20" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
    
            异步组合发送数据。
            <p>该发送会经过适配器封装，具体封装内容由适配器决定。</p></td></tr><tr><td><a href="2dc9da0f-1ddb-01a2-c4ad-e62b8ac8886e.htm">SendAsync(IRequestInfo)</a></td><td>
    
            异步发送数据。
            <p>该发送会经过适配器封装，具体封装内容由适配器决定。</p></td></tr><tr><td><a href="de6cb99f-d4aa-72be-7ed0-5003cb640550.htm">SendAsync(String, IRequestInfo)</a></td><td>
    
            向对应Id的客户端发送
            
  </td></tr><tr><td><a href="aceb16eb-dc93-953c-e812-d676340a545f.htm">SendAsync(<span id="LST342A9E58_21" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST342A9E58_22" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
    
            异步发送数据。
            <p>该发送会经过适配器封装，具体封装内容由适配器决定。</p></td></tr><tr><td><a href="2c139ea4-7596-ccda-c258-58da8f3131d7.htm">SendAsync(String, <span id="LST342A9E58_23" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST342A9E58_24" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            发送字节流
            </td></tr><tr><td><a href="366d1b53-02b8-82f5-30d6-b1655e34da0f.htm">SendingData</a></td><td>
            当即将发送时，如果覆盖父类方法，则不会触发插件。
            </td></tr><tr><td><a href="94483d5c-5c7e-5b5d-0c87-c5756b05a0f8.htm">SetAdapter</a></td><td>
            设置适配器，该方法不会检验<a href="2468ecfe-dded-eca7-15d3-61169fbabd78.htm">CanSetDataHandlingAdapter</a>的值。
            </td></tr><tr><td><a href="c7bd81dd-4b2e-33ab-0899-38af0ea7e8c1.htm">SetDataHandlingAdapter</a></td><td>
            设置数据处理适配器
            </td></tr><tr><td><a href="2dcd25bd-0898-6fa8-1315-a2c545c9c288.htm">SetValue<span id="LST342A9E58_25" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TValue<span id="LST342A9E58_26" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            设置依赖注入的值
            <br />(继承自 <a href="c7528c46-b166-c6d5-9637-c1433bb94961.htm">DependencyObject</a>。)</td></tr><tr><td><a href="b822d86e-7ba1-f472-e7bf-b0e3c060d1b9.htm">ThrowIfDisposed</a></td><td>
            判断是否已经被释放，如果是，则抛出异常。
            <br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><span class="noLink">ToString</span></td><td>Returns a string that represents the current object.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><a href="19363dd0-de68-196d-9905-2969cf26f79c.htm">TryGetValue<span id="LST342A9E58_27" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TValue<span id="LST342A9E58_28" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            尝试获取依赖注入的值，当没有注入时，会返回<span class="keyword"><span id="LST342A9E58_29" data-languageSpecificText="vb=False|nu=false"></span></span>。
            <br />(继承自 <a href="c7528c46-b166-c6d5-9637-c1433bb94961.htm">DependencyObject</a>。)</td></tr><tr><td><a href="cd5af0b4-281f-7b7c-0e64-d44c5940e467.htm">TryRemoveValue<span id="LST342A9E58_30" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TValue<span id="LST342A9E58_31" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            重置属性值。
            <br />(继承自 <a href="c7528c46-b166-c6d5-9637-c1433bb94961.htm">DependencyObject</a>。)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>扩展方法</h2><div id="IDADASection"><table id="ExtensionList" class="table is-hoverable"><tr><td><a href="878403cd-f12c-edde-588e-08269fc9e04c.htm">Map</a></td><td>
            简单对象映射
            <br />(由 <a href="02bbd272-534f-46ef-2987-02490a9e41e9.htm">Mapper</a> 定义。)</td></tr><tr><td><a href="fb7e6dd3-8e3a-2831-644a-c77d3c5d6d6e.htm">Map</a></td><td>
            简单对象映射
            <br />(由 <a href="02bbd272-534f-46ef-2987-02490a9e41e9.htm">Mapper</a> 定义。)</td></tr><tr><td><a href="9a18a592-c63b-7ce8-f2d6-6d9ac6e2d62e.htm">Map<span id="LST342A9E58_32" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TTarget<span id="LST342A9E58_33" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            简单映射
            <br />(由 <a href="02bbd272-534f-46ef-2987-02490a9e41e9.htm">Mapper</a> 定义。)</td></tr><tr><td><a href="42561b0b-8ddf-b261-08a5-1b07b9de94b4.htm">SafeDispose</a></td><td>
            安全性释放（不用判断对象是否为空）。不会抛出任何异常。
            <br />(由 <a href="08dccf0a-072b-52b7-b602-1958417b7198.htm">SystemExtensions</a> 定义。)</td></tr><tr><td><a href="0c8d4cc8-38de-cbf6-43ac-d65d145fe130.htm">ToJsonString</a></td><td>
            转换为Json
            <br />(由 <a href="8552a33c-c4bb-54b7-1888-08ff2740edab.htm">SerializeConvert</a> 定义。)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>参见</h2><div id="seeAlsoSection"><h4>引用</h4><div><a href="276a9112-ef90-fcd5-d08d-6aa994e24001.htm">SocketClient 类</a></div><div><a href="5bf6331c-a218-658a-a3bd-7bcd489609e1.htm">TouchSocket.Sockets 命名空间</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">方法</a></li><li><a class="quickLink">扩展方法</a></li><li><a class="quickLink">参见</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>