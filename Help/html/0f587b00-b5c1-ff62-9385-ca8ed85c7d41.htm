<!DOCTYPE html ><html lang="zh-CN"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><link rel="stylesheet" href="../css/zh-CN.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>TcpDmtpSocketClient 方法</title><meta name="Title" content="方法" /><meta name="Help.Id" content="Methods.T:TouchSocket.Dmtp.TcpDmtpSocketClient" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="TouchSocket.Dmtp" /><meta name="guid" content="0f587b00-b5c1-ff62-9385-ca8ed85c7d41" /><meta name="tocFile" content="../toc/ID0MC0E.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">TouchSocket手册</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Tcp<wbr />Dmtp<wbr />Socket<wbr />Client 方法</h1><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>方法</h2><div id="ID0VB0DASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="78126cde-4397-6c7b-444c-c6776eeba3d7.htm">BreakOut</a></td><td>
            中断连接
            <br />(继承自 <a href="276a9112-ef90-fcd5-d08d-6aa994e24001.htm">SocketClient</a>。)</td></tr><tr><td><a href="391b909f-807a-30d2-9c07-fabcc235e775.htm">ClearReceiver</a></td><td>
            移除同步数据接收器
            <br />(继承自 <a href="276a9112-ef90-fcd5-d08d-6aa994e24001.htm">SocketClient</a>。)</td></tr><tr><td><a href="4265f4f9-7adb-8415-940b-7b22beab7e4b.htm">CloneTo</a></td><td>
            将当前对象的依赖项克隆到目标对象中
            <br />(继承自 <a href="c7528c46-b166-c6d5-9637-c1433bb94961.htm">DependencyObject</a>。)</td></tr><tr><td><a href="be2990ab-dcb0-31cc-6021-740cad6f24dc.htm">Close</a></td><td>
            发送<a href="b9a6b1f1-86e4-6683-d5e3-32ac01f0bd13.htm">IDmtpActor</a>关闭消息。
            <br />(重写 <a href="f49add93-d458-4b5e-2784-8d04940d8c3e.htm">SocketClient<span id="LST739ADBC2_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Close(String)</a>)</td></tr><tr><td><a href="0f0eabc1-cd5a-40d6-543a-12d1260b7190.htm">CreateReceiver</a></td><td>
            获取一个同步数据接收器
            <br />(继承自 <a href="276a9112-ef90-fcd5-d08d-6aa994e24001.htm">SocketClient</a>。)</td></tr><tr><td><a href="e045c847-09c8-334e-bd7a-403e618fd26b.htm">DefaultSend</a></td><td>
            绕过适配器，直接发送字节流
            <br />(继承自 <a href="276a9112-ef90-fcd5-d08d-6aa994e24001.htm">SocketClient</a>。)</td></tr><tr><td><a href="10e1f2e7-8c56-a24b-4576-43d48dc27832.htm">DefaultSendAsync</a></td><td>
            绕过适配器，直接发送字节流
            <br />(继承自 <a href="276a9112-ef90-fcd5-d08d-6aa994e24001.htm">SocketClient</a>。)</td></tr><tr><td><a href="8866b630-56d5-360e-4cdb-4d141c77487e.htm">DirectResetId</a></td><td>
            直接重置内部Id。
            <br />(继承自 <a href="276a9112-ef90-fcd5-d08d-6aa994e24001.htm">SocketClient</a>。)</td></tr><tr><td><a href="e55366a7-567d-9b9d-7eda-80fb4d5d4b0e.htm">Dispose<span id="LST739ADBC2_1" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            释放资源。内部已经处理了<span class="noLink">SuppressFinalize(Object)</span><br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><a href="f1a00f93-1068-dd72-5b1e-eee2977d9197.htm">Dispose(Boolean)</a></td><td>
    
            调用释放，切换释放状态。
            
  <br />(重写 <a href="ae6316b3-26a6-637f-07ce-b95b4ed73a2f.htm">SocketClient<span id="LST739ADBC2_2" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Dispose(Boolean)</a>)</td></tr><tr><td><a href="61a01c7e-031f-099a-2236-85af6bf0f7c8.htm">DisposeAsync</a></td><td>
            异步释放资源。内部已经处理了<span class="noLink">SuppressFinalize(Object)</span><br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><a href="4757f0b4-6370-cf9c-8466-c0182d831342.htm">DisposeAsyncCore</a></td><td>
            异步释放资源。注意：此方法仅在调用<span class="noLink">DisposeAsync<span id="LST739ADBC2_3" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>时有效。
            <br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><span class="noLink">Equals</span></td><td>Determines whether the specified object is equal to the current object.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><span class="noLink">Finalize</span></td><td>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><span class="noLink">GetHashCode</span></td><td>Serves as the default hash function.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><a href="68788689-0fd4-55ea-e3fc-683e5491325a.htm">GetStream</a></td><td>
    
            获取流，在正常模式下为<span class="noLink">NetworkStream</span>，在Ssl模式下为<span class="noLink">SslStream</span>。
            
  <br />(继承自 <a href="276a9112-ef90-fcd5-d08d-6aa994e24001.htm">SocketClient</a>。)<br /><span class="tag is-danger">已过时。</span></td></tr><tr><td><span class="noLink">GetType</span></td><td>Gets the <span class="noLink">Type</span> of the current instance.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><a href="ea521899-5cfc-ffb4-b0ce-54ccab0c8dfe.htm">GetValue<span id="LST739ADBC2_4" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TValue<span id="LST739ADBC2_5" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            获取依赖注入的值，当没有注入时，会返回默认值。
            <br />(继承自 <a href="c7528c46-b166-c6d5-9637-c1433bb94961.htm">DependencyObject</a>。)</td></tr><tr><td><a href="ab21b1ee-6cf0-c0d5-fc4c-cb8c16e20831.htm">HandleReceivedData</a></td><td>
            处理已接收到的数据。
            <p>根据不同的数据处理适配器，会传递不同的数据</p><br />(继承自 <a href="276a9112-ef90-fcd5-d08d-6aa994e24001.htm">SocketClient</a>。)<br /><span class="tag is-danger">已过时。</span></td></tr><tr><td><a href="087be592-2e9e-aa78-e80c-efab210a09bb.htm">HasValue<span id="LST739ADBC2_6" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TValue<span id="LST739ADBC2_7" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            是否有值。
            <br />(继承自 <a href="c7528c46-b166-c6d5-9637-c1433bb94961.htm">DependencyObject</a>。)</td></tr><tr><td><a href="4decdc05-6d9e-fd30-1d1a-8f9d2b021dbc.htm">IdChanged</a></td><td>
            当Id更新的时候触发
            <br />(继承自 <a href="276a9112-ef90-fcd5-d08d-6aa994e24001.htm">SocketClient</a>。)</td></tr><tr><td><span class="noLink">MemberwiseClone</span></td><td>Creates a shallow copy of the current <span class="noLink">Object</span>.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><a href="7d094069-0c96-f037-7f2b-2b9dc239a86a.htm">OnConnected</a></td><td>
            当客户端完整建立Tcp连接。
            <br />(重写 <a href="c2b1a3e9-d6d5-6d5c-43f5-da4d4f7e453c.htm">SocketClient<span id="LST739ADBC2_8" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>OnConnected(ConnectedEventArgs)</a>)</td></tr><tr><td><a href="66a1560b-1ce7-0148-e575-7b3f9d3b4d1a.htm">OnConnecting</a></td><td>
            客户端正在连接。
            <br />(继承自 <a href="276a9112-ef90-fcd5-d08d-6aa994e24001.htm">SocketClient</a>。)</td></tr><tr><td><a href="0060050c-9f23-9b65-282a-d70f6348a560.htm">OnCreateChannel</a></td><td>
            当创建通道
            </td></tr><tr><td><a href="08483804-c37c-c830-1021-68d882ee6f70.htm">OnDisconnected</a></td><td>
            客户端已断开连接。
            <br />(重写 <a href="857ca8ce-925e-305a-80f8-037c1c818eca.htm">SocketClient<span id="LST739ADBC2_9" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>OnDisconnected(DisconnectEventArgs)</a>)</td></tr><tr><td><a href="5e6e6189-230b-c5c3-0e08-d258701aebbc.htm">OnDisconnecting</a></td><td>
            即将断开连接(仅主动断开时有效)。
            <br />(继承自 <a href="276a9112-ef90-fcd5-d08d-6aa994e24001.htm">SocketClient</a>。)</td></tr><tr><td><a href="677f49e2-a885-8661-73b6-3b20939343d0.htm">OnHandshaked</a></td><td>
            在完成握手连接时
            </td></tr><tr><td><a href="cdf27763-c7ab-e89c-0fd6-ec326c563747.htm">OnHandshaking</a></td><td>
            在验证Token时
            </td></tr><tr><td><a href="2b074ada-b1eb-3b11-0839-8bfbf4b74866.htm">OnInitialized</a></td><td>
            当初始化完成时，执行在<a href="66a1560b-1ce7-0148-e575-7b3f9d3b4d1a.htm">OnConnecting(ConnectingEventArgs)</a>之前。
            <br />(继承自 <a href="276a9112-ef90-fcd5-d08d-6aa994e24001.htm">SocketClient</a>。)</td></tr><tr><td><a href="d0a0b0ce-ea27-93fb-5835-8f9dd8abf8e7.htm">OnRouting</a></td><td>
            在需要转发路由包时。
            </td></tr><tr><td><a href="b6182491-ed32-0d44-5bb2-d24b0b745c6d.htm">ReceivedData</a></td><td>
            当收到适配器处理的数据时。
            <br />(重写 <a href="6f8c1960-7490-1b2e-adf6-1af7b245dbcd.htm">SocketClient<span id="LST739ADBC2_10" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>ReceivedData(ReceivedDataEventArgs)</a>)</td></tr><tr><td><a href="4d445553-8c3f-07af-2119-abaed5462515.htm">ReceivingData</a></td><td>
            当收到原始数据
            <br />(继承自 <a href="276a9112-ef90-fcd5-d08d-6aa994e24001.htm">SocketClient</a>。)</td></tr><tr><td><a href="b7833a91-06f3-b415-d30b-17d5c779accb.htm">RemoveValue<span id="LST739ADBC2_11" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TValue<span id="LST739ADBC2_12" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            重置属性值。
            <br />(继承自 <a href="c7528c46-b166-c6d5-9637-c1433bb94961.htm">DependencyObject</a>。)</td></tr><tr><td><a href="b5da0ac5-62bf-d657-fbfb-eefc21eadfd8.htm">ResetId</a></td><td>
            重新设置Id,并且同步到对端
            <br />(重写 <a href="d1ff86b3-06c0-2a12-ac64-d53496dfdb70.htm">SocketClient<span id="LST739ADBC2_13" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>ResetId(String)</a>)</td></tr><tr><td><a href="47314301-18a2-c306-f23c-94d08f6c5d8a.htm">ResetIdAsync</a></td><td>
            重新设置Id,并且同步到对端
            </td></tr><tr><td><a href="a624e185-160a-157e-6420-c4874ad35b67.htm">Send(IList<span id="LST739ADBC2_14" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ArraySegment<span id="LST739ADBC2_15" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST739ADBC2_16" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST739ADBC2_17" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            不允许直接发送
            <br />(重写 <a href="152da2a1-5fde-d11f-14f4-ba2ff36233c2.htm">SocketClient<span id="LST739ADBC2_18" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Send(IList<span id="LST739ADBC2_19" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ArraySegment<span id="LST739ADBC2_20" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST739ADBC2_21" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST739ADBC2_22" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>)</td></tr><tr><td><a href="f634fa05-d33c-c8b2-3833-6de6cfefdf51.htm">Send(IRequestInfo)</a></td><td>
    
            同步发送数据。
            <p>该发送会经过适配器封装，具体封装内容由适配器决定。</p><br />(继承自 <a href="276a9112-ef90-fcd5-d08d-6aa994e24001.htm">SocketClient</a>。)</td></tr><tr><td><a href="7367c8f9-8eea-1623-c092-47cb462db705.htm">Send(String, IRequestInfo)</a></td><td>
    
            向对应Id的客户端发送
            
  <br />(继承自 <a href="276a9112-ef90-fcd5-d08d-6aa994e24001.htm">SocketClient</a>。)</td></tr><tr><td><a href="3703190d-f2e8-4f88-305e-27ab01135147.htm">Send(<span id="LST739ADBC2_23" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST739ADBC2_24" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            不允许直接发送
            <br />(重写 <a href="4d14f327-0291-0c5a-4fe0-f371a03146b3.htm">SocketClient<span id="LST739ADBC2_25" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Send(<span id="LST739ADBC2_26" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST739ADBC2_27" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a>)</td></tr><tr><td><a href="8d0a96ac-cde6-f9a1-7cf9-71e638988490.htm">Send(String, <span id="LST739ADBC2_28" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST739ADBC2_29" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            发送字节流
            <br />(继承自 <a href="276a9112-ef90-fcd5-d08d-6aa994e24001.htm">SocketClient</a>。)</td></tr><tr><td><a href="3dff419f-5db6-51bf-a110-26d975acfa7f.htm">SendAsync(IList<span id="LST739ADBC2_30" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ArraySegment<span id="LST739ADBC2_31" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST739ADBC2_32" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST739ADBC2_33" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            不允许直接发送
            <br />(重写 <a href="acb02daf-c3e7-c0dc-5c85-39d0cb216548.htm">SocketClient<span id="LST739ADBC2_34" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>SendAsync(IList<span id="LST739ADBC2_35" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ArraySegment<span id="LST739ADBC2_36" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST739ADBC2_37" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST739ADBC2_38" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>)</td></tr><tr><td><a href="2dc9da0f-1ddb-01a2-c4ad-e62b8ac8886e.htm">SendAsync(IRequestInfo)</a></td><td>
    
            异步发送数据。
            <p>该发送会经过适配器封装，具体封装内容由适配器决定。</p><br />(继承自 <a href="276a9112-ef90-fcd5-d08d-6aa994e24001.htm">SocketClient</a>。)</td></tr><tr><td><a href="de6cb99f-d4aa-72be-7ed0-5003cb640550.htm">SendAsync(String, IRequestInfo)</a></td><td>
    
            向对应Id的客户端发送
            
  <br />(继承自 <a href="276a9112-ef90-fcd5-d08d-6aa994e24001.htm">SocketClient</a>。)</td></tr><tr><td><a href="23b49646-b1eb-9131-7f87-0eedb48817b6.htm">SendAsync(<span id="LST739ADBC2_39" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST739ADBC2_40" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            不允许直接发送
            <br />(重写 <a href="aceb16eb-dc93-953c-e812-d676340a545f.htm">SocketClient<span id="LST739ADBC2_41" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>SendAsync(<span id="LST739ADBC2_42" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST739ADBC2_43" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a>)</td></tr><tr><td><a href="2c139ea4-7596-ccda-c258-58da8f3131d7.htm">SendAsync(String, <span id="LST739ADBC2_44" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST739ADBC2_45" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            发送字节流
            <br />(继承自 <a href="276a9112-ef90-fcd5-d08d-6aa994e24001.htm">SocketClient</a>。)</td></tr><tr><td><a href="366d1b53-02b8-82f5-30d6-b1655e34da0f.htm">SendingData</a></td><td>
            当即将发送时，如果覆盖父类方法，则不会触发插件。
            <br />(继承自 <a href="276a9112-ef90-fcd5-d08d-6aa994e24001.htm">SocketClient</a>。)</td></tr><tr><td><a href="94483d5c-5c7e-5b5d-0c87-c5756b05a0f8.htm">SetAdapter</a></td><td>
            设置适配器，该方法不会检验<a href="2468ecfe-dded-eca7-15d3-61169fbabd78.htm">CanSetDataHandlingAdapter</a>的值。
            <br />(继承自 <a href="276a9112-ef90-fcd5-d08d-6aa994e24001.htm">SocketClient</a>。)</td></tr><tr><td><a href="c7bd81dd-4b2e-33ab-0899-38af0ea7e8c1.htm">SetDataHandlingAdapter</a></td><td>
            设置数据处理适配器
            <br />(继承自 <a href="276a9112-ef90-fcd5-d08d-6aa994e24001.htm">SocketClient</a>。)</td></tr><tr><td><a href="2dcd25bd-0898-6fa8-1315-a2c545c9c288.htm">SetValue<span id="LST739ADBC2_46" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TValue<span id="LST739ADBC2_47" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            设置依赖注入的值
            <br />(继承自 <a href="c7528c46-b166-c6d5-9637-c1433bb94961.htm">DependencyObject</a>。)</td></tr><tr><td><a href="b822d86e-7ba1-f472-e7bf-b0e3c060d1b9.htm">ThrowIfDisposed</a></td><td>
            判断是否已经被释放，如果是，则抛出异常。
            <br />(继承自 <a href="fcb70826-454a-371d-29d4-6713c09e00c7.htm">DisposableObject</a>。)</td></tr><tr><td><span class="noLink">ToString</span></td><td>Returns a string that represents the current object.<br />(继承自 <span class="noLink">Object</span>。)</td></tr><tr><td><a href="19363dd0-de68-196d-9905-2969cf26f79c.htm">TryGetValue<span id="LST739ADBC2_48" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TValue<span id="LST739ADBC2_49" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            尝试获取依赖注入的值，当没有注入时，会返回<span class="keyword"><span id="LST739ADBC2_50" data-languageSpecificText="vb=False|nu=false"></span></span>。
            <br />(继承自 <a href="c7528c46-b166-c6d5-9637-c1433bb94961.htm">DependencyObject</a>。)</td></tr><tr><td><a href="cd5af0b4-281f-7b7c-0e64-d44c5940e467.htm">TryRemoveValue<span id="LST739ADBC2_51" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TValue<span id="LST739ADBC2_52" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            重置属性值。
            <br />(继承自 <a href="c7528c46-b166-c6d5-9637-c1433bb94961.htm">DependencyObject</a>。)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>扩展方法</h2><div id="IDADASection"><table id="ExtensionList" class="table is-hoverable"><tr><td><a href="0e718a73-aa52-0e39-df8a-aa8472cd9726.htm">ChannelExisted</a></td><td>
            判断指定Id的通道是否已经存在
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="bd41c7c2-c435-c89f-24c5-0647e23b2643.htm">CloseWithTLV</a></td><td>
            发送TLV的Close报文，然后关闭当前客户端
            <br />(由 <a href="8d6c77a9-be56-7e1b-e7e7-99d09c6fd8a9.htm">TLVClientExtensions</a> 定义。)</td></tr><tr><td><a href="8b3517c8-2fb0-325a-2550-c91efbe84cdf.htm">CreateChannel</a></td><td>
            在当前对点创建一个随机Id的通道
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="eca0c7fd-43b0-d8de-83ab-dbfcf86c317a.htm">CreateChannel</a></td><td>
            在当前对点创建一个指定Id的通道
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="d24913b8-8c53-67a8-d822-4b0afcf8df64.htm">CreateChannel</a></td><td>
            在指定路由点创建一个随机Id的通道
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="9e7e40a2-6fd7-955f-5570-3f83d3e7c25b.htm">CreateChannel</a></td><td>
            在指定路由点创建一个指定Id的通道
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="09636766-28aa-5d04-9fbb-b49416a7dab8.htm">CreateChannelAsync</a></td><td>
            在当前对点创建一个随机Id的通道
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="95d7f596-4fe5-4de5-cebd-ed539b22310d.htm">CreateChannelAsync</a></td><td>
            在当前对点创建一个指定Id的通道
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="73fcb5dc-42ef-69f0-97ad-f395f08b9432.htm">CreateChannelAsync</a></td><td>
            在指定路由点创建一个随机Id的通道
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="76271fa4-37bb-b5f6-2af0-a4a8a5c660b2.htm">CreateChannelAsync</a></td><td>
            在指定路由点创建一个指定Id的通道
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="5912a072-4cf1-9bbf-6a18-fc558943ee2f.htm">CreateTargetDmtpRpcActor</a></td><td>
            新创建一个直接向目标地址请求的<a href="95acda3c-7352-214c-a344-d7b7b4da2626.htm">IRpcClient</a>客户端。
            <br />(由 <a href="8e1c5535-7e98-6936-6d93-c5b97e5c0860.htm">DmtpRpcActorExtension</a> 定义。)</td></tr><tr><td><a href="730d9261-cda2-cced-564d-b5eac318977e.htm">GetDmtpFileTransferActor</a></td><td>
            从<a href="cfcb5c6a-e44a-143d-9a9d-f2d9040d5b8a.htm">IDmtpActorObject</a>中获取能实现文件传输的<a href="6174c6c5-2b36-f87a-c2af-f682e50fbe84.htm">IDmtpFileTransferActor</a><br />(由 <a href="977795fc-cbe4-ef71-8510-888125c3e81f.htm">DmtpFileTransferActorExtension</a> 定义。)</td></tr><tr><td><a href="d636e8a6-244d-6db0-7baf-15e2830d2a08.htm">GetDmtpRedisActor</a></td><td>
            获取<a href="8626c08b-a526-7c58-b320-2ceae2f1bf79.htm">IDmtpRedisActor</a><br />(由 <a href="f6766c8a-c2ee-d83d-a03c-5a8f641134a2.htm">DmtpRedisActorExtensions</a> 定义。)</td></tr><tr><td><a href="a94da72d-62f0-6616-3cca-6c9d7b3f0d1a.htm">GetDmtpRemoteStreamActor</a></td><td>
            从<a href="cfcb5c6a-e44a-143d-9a9d-f2d9040d5b8a.htm">IDmtpActorObject</a>中获取<a href="eb0c54f1-ae86-9315-8351-7efcde5a3a2f.htm">IDmtpRemoteStreamActor</a><br />(由 <a href="7801c437-60bb-266a-ba8b-058ce90896b8.htm">DmtpRemoteStreamExtension</a> 定义。)</td></tr><tr><td><a href="ccb10ef2-4572-2b45-115f-82b132cc8738.htm">GetDmtpRouterPackageActor</a></td><td>
            从<a href="cfcb5c6a-e44a-143d-9a9d-f2d9040d5b8a.htm">IDmtpActorObject</a>中获取<a href="b740ea2c-13e7-6cce-93db-9f4ba5cbe12c.htm">IDmtpRouterPackageActor</a><br />(由 <a href="3e3b8287-711c-0509-70a8-5c04e2ce7154.htm">DmtpRouterPackageExtension</a> 定义。)</td></tr><tr><td><a href="dc608f28-da28-8c75-b403-f47816fec965.htm">GetDmtpRpcActor</a></td><td>
            从<a href="cfcb5c6a-e44a-143d-9a9d-f2d9040d5b8a.htm">IDmtpActorObject</a>中获取<a href="f01fcd1a-0943-3bb9-b327-2d9935612fc6.htm">IDmtpRpcActor</a>，以实现Rpc调用功能。
            <br />(由 <a href="8e1c5535-7e98-6936-6d93-c5b97e5c0860.htm">DmtpRpcActorExtension</a> 定义。)</td></tr><tr><td><a href="1ff2b0ea-4b74-f436-5b48-4c7991548e10.htm">GetDmtpRpcActor<span id="LST739ADBC2_53" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TDmtpRpcActor<span id="LST739ADBC2_54" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            从<a href="cfcb5c6a-e44a-143d-9a9d-f2d9040d5b8a.htm">IDmtpActorObject</a>中获取继承实现<a href="f01fcd1a-0943-3bb9-b327-2d9935612fc6.htm">IDmtpRpcActor</a>的功能件，以实现Rpc调用功能。
            <br />(由 <a href="8e1c5535-7e98-6936-6d93-c5b97e5c0860.htm">DmtpRpcActorExtension</a> 定义。)</td></tr><tr><td><a href="de453090-a3a8-1a96-1adc-b9dd2e66e1c7.htm">GetIsJsonRpc</a></td><td>
            获取<a href="bf4c9829-221f-658a-632c-065f7b5c40f7.htm">IsJsonRpcProperty</a><br />(由 <a href="fa8c184d-f6d0-30c6-27c8-a0b4cbf5f7b8.htm">JsonRpcClientExtension</a> 定义。)</td></tr><tr><td><a href="a0d3dd8f-2801-e87d-d268-b9642c84ddeb.htm">GetJsonRpcActionClient</a></td><td>
            获取基于Tcp协议或者WebSocket协议的双工JsonRpc端
            <br />(由 <a href="fa8c184d-f6d0-30c6-27c8-a0b4cbf5f7b8.htm">JsonRpcClientExtension</a> 定义。)</td></tr><tr><td><a href="86093c8d-ebc8-ff60-107b-444465428589.htm">GetRemoteAccessActor</a></td><td>
            获取远程访问的<a href="49caf403-7979-240a-b55c-594918c3df1a.htm">IDmtpRemoteAccessActor</a><br />(由 <a href="096cea0c-ea3a-d7ac-5589-9a06cabd9df3.htm">DmtpRemoteAccessExtension</a> 定义。)</td></tr><tr><td><a href="878403cd-f12c-edde-588e-08269fc9e04c.htm">Map</a></td><td>
            简单对象映射
            <br />(由 <a href="02bbd272-534f-46ef-2987-02490a9e41e9.htm">Mapper</a> 定义。)</td></tr><tr><td><a href="fb7e6dd3-8e3a-2831-644a-c77d3c5d6d6e.htm">Map</a></td><td>
            简单对象映射
            <br />(由 <a href="02bbd272-534f-46ef-2987-02490a9e41e9.htm">Mapper</a> 定义。)</td></tr><tr><td><a href="9a18a592-c63b-7ce8-f2d6-6d9ac6e2d62e.htm">Map<span id="LST739ADBC2_55" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TTarget<span id="LST739ADBC2_56" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            简单映射
            <br />(由 <a href="02bbd272-534f-46ef-2987-02490a9e41e9.htm">Mapper</a> 定义。)</td></tr><tr><td><a href="123fe4dd-4f62-5d94-d41a-a4c71515c569.htm">Ping</a></td><td>
            向当前对点发送一个Ping报文，并且等待回应。
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="69b5ca5e-e5e9-1ad9-3c53-d9cceb92a458.htm">Ping</a></td><td>
            向指定路由点发送一个Ping报文，并且等待回应。
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="177c70ef-76d8-25cc-86a7-7e6faab86bff.htm">PingAsync</a></td><td>
            向当前对点发送一个Ping报文，并且等待回应。
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="698c5618-96a9-c0a2-5d54-6827d5a5bb17.htm">PingAsync</a></td><td>
            向指定路由点发送一个Ping报文，并且等待回应。
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="afb97a34-4d0b-3257-13ed-b2179f41164d.htm">PingWithTLV</a></td><td>
            发送Tag为Ping的报文，然后等待Pong回应。
            <p>当适配器不是<a href="8bbcf291-763a-6c48-b435-b6b1a8dc2ed8.htm">TLVDataHandlingAdapter</a>时，会抛出异常。</p><br />(由 <a href="8d6c77a9-be56-7e1b-e7e7-99d09c6fd8a9.htm">TLVClientExtensions</a> 定义。)</td></tr><tr><td><a href="42561b0b-8ddf-b261-08a5-1b07b9de94b4.htm">SafeDispose</a></td><td>
            安全性释放（不用判断对象是否为空）。不会抛出任何异常。
            <br />(由 <a href="08dccf0a-072b-52b7-b602-1958417b7198.htm">SystemExtensions</a> 定义。)</td></tr><tr><td><a href="b1aaaab3-153a-b46c-f4df-7dff8fed6817.htm">Send</a></td><td>
             发送
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="053c77a4-f34f-f359-19e7-73a84951597e.htm">Send</a></td><td>
            发送估计小于64K的<a href="f6c8909b-290c-5527-9b59-7add17b3630d.htm">IPackage</a><br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="125194d3-e5f7-9664-e952-be4e9b13f0bb.htm">Send</a></td><td>
            发送
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="1e635ed9-b9d3-d7e9-28e0-4c8ed1fbdf39.htm">Send</a></td><td>
             发送
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="4b907a93-958b-faa0-403e-f97574087fc4.htm">Send</a></td><td>
            发送<a href="f6c8909b-290c-5527-9b59-7add17b3630d.htm">IPackage</a><br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="ae266512-557d-905e-79f7-ac4150b5f1dd.htm">Send</a></td><td>
            发送
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="b6090b99-9d89-82bd-4f0e-69c3ce129f67.htm">SendAsync</a></td><td>
            发送
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="ced0a457-26b5-b8fd-bb0e-a42dcc8a55b9.htm">SendAsync</a></td><td>
            发送估计小于64K的<a href="f6c8909b-290c-5527-9b59-7add17b3630d.htm">IPackage</a><br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="d2fb13ea-613a-18a2-1092-ecdbd517a05b.htm">SendAsync</a></td><td>
            发送
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="7341917c-b83b-9e5a-0c18-838fdb9a1f80.htm">SendAsync</a></td><td>
            发送<a href="f6c8909b-290c-5527-9b59-7add17b3630d.htm">IPackage</a><br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="34749595-5fc7-6ed1-393c-556e89e77c5a.htm">SetIsJsonRpc</a></td><td>
            设置<a href="bf4c9829-221f-658a-632c-065f7b5c40f7.htm">IsJsonRpcProperty</a><br />(由 <a href="fa8c184d-f6d0-30c6-27c8-a0b4cbf5f7b8.htm">JsonRpcClientExtension</a> 定义。)</td></tr><tr><td><a href="0c8d4cc8-38de-cbf6-43ac-d65d145fe130.htm">ToJsonString</a></td><td>
            转换为Json
            <br />(由 <a href="8552a33c-c4bb-54b7-1888-08ff2740edab.htm">SerializeConvert</a> 定义。)</td></tr><tr><td><a href="ded187a6-f548-b994-965e-612156bf26ae.htm">TrySend</a></td><td>
            尝试发送
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="ca78e865-62a8-8904-695d-7f636190db25.htm">TrySend</a></td><td>
            尝试发送
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="974f8357-3a73-b561-a5a8-cf5104519d42.htm">TrySend</a></td><td>
            尝试发送
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="53475a8f-6c06-a272-6826-9d76cd286334.htm">TrySend</a></td><td>
            发送估计小于64K的<a href="f6c8909b-290c-5527-9b59-7add17b3630d.htm">IPackage</a><br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="e1097ff0-8d58-1b6f-c765-4c123c37a022.htm">TrySend</a></td><td>
            发送<a href="f6c8909b-290c-5527-9b59-7add17b3630d.htm">IPackage</a><br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="e77b5ac9-41c8-a74a-b567-169d544d3b65.htm">TrySend</a></td><td>
            尝试发送
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="21e5b7ac-fb8d-9437-4e9d-f977a2e82b35.htm">TrySendAsync</a></td><td>
            尝试发送
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="730b0b9e-1545-9e85-d477-ee15c03f57d6.htm">TrySendAsync</a></td><td>
            尝试发送
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="1464d149-7468-5b57-78a5-fe328b289ead.htm">TrySendAsync</a></td><td>
            发送估计小于64K的<a href="f6c8909b-290c-5527-9b59-7add17b3630d.htm">IPackage</a><br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="377a04fd-9445-242f-cc26-ad8630a84d27.htm">TrySendAsync</a></td><td>
            发送<a href="f6c8909b-290c-5527-9b59-7add17b3630d.htm">IPackage</a><br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="c12ab649-e850-e916-4e77-575cc2ad856e.htm">TrySendAsync</a></td><td>
            尝试发送
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr><tr><td><a href="36b3f754-38d5-a5ca-8d26-e0906bdd7cbc.htm">TrySubscribeChannel</a></td><td>
            尝试订阅已存在的通道。
            <br />(由 <a href="d6a9c158-7901-79c6-bae2-4f82a41c6b48.htm">DmtpActorExtension</a> 定义。)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>参见</h2><div id="seeAlsoSection"><h4>引用</h4><div><a href="d7cca369-c357-ebdb-b704-ca33c8375624.htm">TcpDmtpSocketClient 类</a></div><div><a href="efc93c14-3d45-c826-b03a-3a54da781746.htm">TouchSocket.Dmtp 命名空间</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">方法</a></li><li><a class="quickLink">扩展方法</a></li><li><a class="quickLink">参见</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p>Copyright © 2020-2024 若汝棋茗.</p><div class="feedbackLink">有关这个主题的评论请发邮件到
        <a id="HT_MailLink" href="mailto:505554090%40qq.com?Subject=TouchSocket手册">若汝棋茗邮箱</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>