<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>TouchSocket.Core.DependencyInjection</name>
  </assembly>
  <members>
    <member name="T:TouchSocket.Core.AspNetCoreConfigExtension">
      <summary>
            AspNetCoreConfigExtension
            </summary>
    </member>
    <member name="M:TouchSocket.Core.AspNetCoreConfigExtension.ConfigureContainer(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{TouchSocket.Core.IRegistrator})">
      <summary>
            配置容器。
            </summary>
      <param name="services">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>services</parameter>
            <parameter>M:TouchSocket.Core.AspNetCoreConfigExtension.ConfigureContainer(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{TouchSocket.Core.IRegistrator})</parameter>
          </include>
        </markup>
      </param>
      <param name="action">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>action</parameter>
            <parameter>M:TouchSocket.Core.AspNetCoreConfigExtension.ConfigureContainer(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{TouchSocket.Core.IRegistrator})</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Core.AspNetCoreConfigExtension.ConfigureContainer(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{TouchSocket.Core.IRegistrator})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Core.AspNetCoreConfigExtension.UseAspNetCoreContainer(TouchSocket.Core.TouchSocketConfig,Microsoft.Extensions.DependencyInjection.IServiceCollection)">
      <summary>
            使用<see cref="T:TouchSocket.Core.AspNetCore.AspNetCoreContainer" />作为容器。
            </summary>
      <param name="config"></param>
      <param name="services"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Core.AspNetCoreConfigExtension.UseAspNetCoreContainer(TouchSocket.Core.TouchSocketConfig,Microsoft.Extensions.DependencyInjection.IServiceCollection)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Core.AspNetCore.AspNetCoreContainer">
      <summary>
            AspNetCoreContainer
            </summary>
    </member>
    <member name="M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
      <summary>
            初始化一个IServiceCollection的容器。
            </summary>
      <param name="services">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>services</parameter>
            <parameter>M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.BuildResolver">
      <summary>
            构建一个服务获取器
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.BuildResolver</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.BuildResolver(System.IServiceProvider)">
      <summary>
            以传入的<see cref="T:System.IServiceProvider" />作为服务提供
            </summary>
      <param name="provider"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.BuildResolver(System.IServiceProvider)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.GetDescriptors">
      <summary>
            获取已注册的所有类型描述
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.GetDescriptors</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.GetService(System.Type)">
      <summary>Gets the service object of the specified type.</summary>
      <param name="serviceType">An object that specifies the type of service object to get.</param>
      <returns>A service object of type <paramref name="serviceType" />.  
  
 -or-  
  
 <see langword="null" /> if there is no service object of type <paramref name="serviceType" />.</returns>
    </member>
    <member name="M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.IsRegistered(System.Type)">
      <summary>
            判断某类型是否已经注册
            </summary>
      <param name="fromType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fromType</parameter>
            <parameter>M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.IsRegistered(System.Type)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.IsRegistered(System.Type)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.IsRegistered(System.Type,System.String)">
      <summary>
            判断某类型是否已经注册
            </summary>
      <param name="fromType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fromType</parameter>
            <parameter>M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.IsRegistered(System.Type,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="key">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>key</parameter>
            <parameter>M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.IsRegistered(System.Type,System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.IsRegistered(System.Type,System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.Register(TouchSocket.Core.DependencyDescriptor)">
      <summary>
            添加类型描述符
            </summary>
      <param name="descriptor">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>descriptor</parameter>
            <parameter>M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.Register(TouchSocket.Core.DependencyDescriptor)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.Register(TouchSocket.Core.DependencyDescriptor,System.String)">
      <summary>
            添加类型描述符。
            </summary>
      <param name="key">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>key</parameter>
            <parameter>M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.Register(TouchSocket.Core.DependencyDescriptor,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="descriptor">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>descriptor</parameter>
            <parameter>M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.Register(TouchSocket.Core.DependencyDescriptor,System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.Resolve(System.Type)">
      <summary>
            创建目标类型的对应实例。
            </summary>
      <param name="fromType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fromType</parameter>
            <parameter>M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.Resolve(System.Type)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.Resolve(System.Type)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.Resolve(System.Type,System.String)">
      <summary>
            创建目标类型的对应实例。
            </summary>
      <param name="fromType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fromType</parameter>
            <parameter>M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.Resolve(System.Type,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="key">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>key</parameter>
            <parameter>M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.Resolve(System.Type,System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.Resolve(System.Type,System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.Unregister(TouchSocket.Core.DependencyDescriptor)">
      <summary>
            移除注册信息
            </summary>
      <param name="descriptor">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>descriptor</parameter>
            <parameter>M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.Unregister(TouchSocket.Core.DependencyDescriptor)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.Unregister(TouchSocket.Core.DependencyDescriptor,System.String)">
      <summary>
            移除注册信息。
            </summary>
      <param name="descriptor">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>descriptor</parameter>
            <parameter>M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.Unregister(TouchSocket.Core.DependencyDescriptor,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="key">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>key</parameter>
            <parameter>M:TouchSocket.Core.AspNetCore.AspNetCoreContainer.Unregister(TouchSocket.Core.DependencyDescriptor,System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns></returns>
    </member>
  </members>
</doc>