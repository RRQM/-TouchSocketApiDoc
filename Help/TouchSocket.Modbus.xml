<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>TouchSocket.Modbus</name>
  </assembly>
  <members>
    <member name="T:TouchSocket.Modbus.FunctionCode">
      <summary>
            Modbus功能码
            </summary>
    </member>
    <member name="F:TouchSocket.Modbus.FunctionCode.ReadCoils">
      <summary>
            读线圈寄存器	位	取得一组逻辑线圈的当前状态（ON/OFF )
            </summary>
    </member>
    <member name="F:TouchSocket.Modbus.FunctionCode.ReadDiscreteInputs">
      <summary>
            读离散输入寄存器	位	取得一组开关输入的当前状态（ON/OFF )
            </summary>
    </member>
    <member name="F:TouchSocket.Modbus.FunctionCode.ReadHoldingRegisters">
      <summary>
            读保持寄存器	整型、浮点型、字符型	在一个或多个保持寄存器中取得当前的二进制值
            </summary>
    </member>
    <member name="F:TouchSocket.Modbus.FunctionCode.ReadInputRegisters">
      <summary>
            读输入寄存器	整型、浮点型	在一个或多个输入寄存器中取得当前的二进制值
            </summary>
    </member>
    <member name="F:TouchSocket.Modbus.FunctionCode.WriteSingleCoil">
      <summary>
            写单个线圈寄存器	位	强置一个逻辑线圈的通断状态
            </summary>
    </member>
    <member name="F:TouchSocket.Modbus.FunctionCode.WriteSingleRegister">
      <summary>
            写单个保持寄存器	整型、浮点型、字符型	把具体二进值装入一个保持寄存器
            </summary>
    </member>
    <member name="F:TouchSocket.Modbus.FunctionCode.WriteMultipleCoils">
      <summary>
            写多个线圈寄存器	位	强置一串连续逻辑线圈的通断
            </summary>
    </member>
    <member name="F:TouchSocket.Modbus.FunctionCode.WriteMultipleRegisters">
      <summary>
            写多个保持寄存器	整型、浮点型、字符型	把具体的二进制值装入一串连续的保持寄存器
            </summary>
    </member>
    <member name="F:TouchSocket.Modbus.FunctionCode.ReadWriteMultipleRegisters">
      <summary>
            读写多个保持寄存器	整型、浮点型、字符型	把具体的二进制值装入一串连续的保持寄存器 并读取一系列寄存器
            </summary>
    </member>
    <member name="T:TouchSocket.Modbus.IIgnoreSlaveIdModbusMaster">
      <summary>
            可以使用忽略SlaveId的限定接口
            </summary>
    </member>
    <member name="T:TouchSocket.Modbus.IModbusMaster">
      <summary>
            提供Modbus的操作接口
            </summary>
    </member>
    <member name="M:TouchSocket.Modbus.IModbusMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)">
      <summary>
            发送Modbus请求
            </summary>
      <param name="request">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>request</parameter>
            <parameter>M:TouchSocket.Modbus.IModbusMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="timeout">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeout</parameter>
            <parameter>M:TouchSocket.Modbus.IModbusMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="token">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>token</parameter>
            <parameter>M:TouchSocket.Modbus.IModbusMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.IModbusMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Modbus.IModbusMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)">
      <summary>
            异步发送Modbus请求
            </summary>
      <param name="request">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>request</parameter>
            <parameter>M:TouchSocket.Modbus.IModbusMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="timeout">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeout</parameter>
            <parameter>M:TouchSocket.Modbus.IModbusMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="token">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>token</parameter>
            <parameter>M:TouchSocket.Modbus.IModbusMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.IModbusMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Modbus.IModbusRequest">
      <summary>
            Modbus请求接口
            </summary>
    </member>
    <member name="P:TouchSocket.Modbus.IModbusRequest.Data">
      <summary>
            数据
            </summary>
    </member>
    <member name="P:TouchSocket.Modbus.IModbusRequest.FunctionCode">
      <summary>
            功能码
            </summary>
    </member>
    <member name="P:TouchSocket.Modbus.IModbusRequest.Quantity">
      <summary>
            数量
            </summary>
    </member>
    <member name="P:TouchSocket.Modbus.IModbusRequest.ReadQuantity">
      <summary>
            读取长度
            </summary>
    </member>
    <member name="P:TouchSocket.Modbus.IModbusRequest.ReadStartAddress">
      <summary>
            在读起始位置。
            </summary>
    </member>
    <member name="P:TouchSocket.Modbus.IModbusRequest.SlaveId">
      <summary>
            站点号（单元标识符）
            </summary>
    </member>
    <member name="P:TouchSocket.Modbus.IModbusRequest.StartingAddress">
      <summary>
            起始位置
            </summary>
    </member>
    <member name="T:TouchSocket.Modbus.IModbusResponse">
      <summary>
            Modbus响应
            </summary>
    </member>
    <member name="P:TouchSocket.Modbus.IModbusResponse.Data">
      <summary>
            数据
            </summary>
    </member>
    <member name="P:TouchSocket.Modbus.IModbusResponse.ErrorCode">
      <summary>
            错误码
            </summary>
    </member>
    <member name="P:TouchSocket.Modbus.IModbusResponse.FunctionCode">
      <summary>
            功能码
            </summary>
    </member>
    <member name="T:TouchSocket.Modbus.IModbusRtuMaster">
      <summary>
            基于串口的Modbus主站接口
            </summary>
    </member>
    <member name="T:TouchSocket.Modbus.IModbusRtuOverTcpMaster">
      <summary>
            基于Tcp协议，且使用Rtu数据格式的Modbus主站接口
            </summary>
    </member>
    <member name="T:TouchSocket.Modbus.IModbusRtuOverUdpMaster">
      <summary>
            基于Udp协议，且使用Rtu格式的Modbus主站接口
            </summary>
    </member>
    <member name="T:TouchSocket.Modbus.IModbusTcpMaster">
      <summary>
            基于Tcp协议的Modbus主站接口。
            </summary>
    </member>
    <member name="T:TouchSocket.Modbus.IModbusUdpMaster">
      <summary>
            基于Udp协议的Modbus主站接口。
            </summary>
    </member>
    <member name="T:TouchSocket.Modbus.ModbusErrorCode">
      <summary>
            Modbus错误码
            </summary>
    </member>
    <member name="F:TouchSocket.Modbus.ModbusErrorCode.Success">
      <summary>
            成功
            </summary>
    </member>
    <member name="F:TouchSocket.Modbus.ModbusErrorCode.FunctionCodeNotDefined">
      <summary>
            功能码不能被从机识别
            </summary>
    </member>
    <member name="F:TouchSocket.Modbus.ModbusErrorCode.AddressInvalid">
      <summary>
            非法数据地址
            </summary>
    </member>
    <member name="F:TouchSocket.Modbus.ModbusErrorCode.ValueInvalid">
      <summary>
            值不被从机接受
            </summary>
    </member>
    <member name="F:TouchSocket.Modbus.ModbusErrorCode.TaskError">
      <summary>
            当从机试图执行请求的操作时，发生了不可恢复的错误
            </summary>
    </member>
    <member name="F:TouchSocket.Modbus.ModbusErrorCode.HoldOn">
      <summary>
            从机已接受请求并正在处理，但需要很长时间。返回此响应是为了防止在主机中发生超时错误。主站可以在下一个轮询程序中发出一个完整的消息，以确定处理是否完成
            </summary>
    </member>
    <member name="F:TouchSocket.Modbus.ModbusErrorCode.Busy">
      <summary>
            从站正在处理长时间命令。Master应该稍后重试
            </summary>
    </member>
    <member name="F:TouchSocket.Modbus.ModbusErrorCode.ExecuteError">
      <summary>
            从站不能执行程序功能。主站应该向从站请求诊断或错误信息。
            </summary>
    </member>
    <member name="F:TouchSocket.Modbus.ModbusErrorCode.MemoryVerificationError">
      <summary>
            从站在内存中检测到奇偶校验错误。主设备可以重试请求，但从设备上可能需要服务。
            </summary>
    </member>
    <member name="F:TouchSocket.Modbus.ModbusErrorCode.GatewayError">
      <summary>
            专门用于Modbus网关。表示配置错误的网关。
            </summary>
    </member>
    <member name="F:TouchSocket.Modbus.ModbusErrorCode.GatewayUnavailable">
      <summary>
            专用于Modbus网关的响应。当从站无法响应时发送
            </summary>
    </member>
    <member name="T:TouchSocket.Modbus.ModbusIgnoreSlaveMasterExtension">
      <summary>
            ModbusIgnoreSlaveMasterExtension
            </summary>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusIgnoreSlaveMasterExtension.ReadCoils(TouchSocket.Modbus.IIgnoreSlaveIdModbusMaster,System.UInt16,System.UInt16)">
      <summary>
            忽略站点（默认站号为1）读取线圈（FC1），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="quantity">读取数量</param>
      <returns>读取到的值集合</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusIgnoreSlaveMasterExtension.ReadCoilsAsync(TouchSocket.Modbus.IIgnoreSlaveIdModbusMaster,System.UInt16,System.UInt16)">
      <summary>
            异步忽略站点（默认站号为1）读取线圈（FC1），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="quantity">读取数量</param>
      <returns>读取到的值集合</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusIgnoreSlaveMasterExtension.ReadDiscreteInputs(TouchSocket.Modbus.IIgnoreSlaveIdModbusMaster,System.UInt16,System.UInt16)">
      <summary>
            忽略站点（默认站号为1）读离散输入状态（FC2），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="quantity">读取数量</param>
      <returns>读取到的值集合</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusIgnoreSlaveMasterExtension.ReadDiscreteInputsAsync(TouchSocket.Modbus.IIgnoreSlaveIdModbusMaster,System.UInt16,System.UInt16)">
      <summary>
            异步忽略站点（默认站号为1）读离散输入状态（FC2），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="quantity">读取数量</param>
      <returns>读取到的值集合</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusIgnoreSlaveMasterExtension.ReadHoldingRegisters(TouchSocket.Modbus.IIgnoreSlaveIdModbusMaster,System.UInt16,System.UInt16)">
      <summary>
            忽略站点（默认站号为1）读保持寄存器（FC3），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="quantity">读取数量</param>
      <returns>响应值</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusIgnoreSlaveMasterExtension.ReadHoldingRegistersAsync(TouchSocket.Modbus.IIgnoreSlaveIdModbusMaster,System.UInt16,System.UInt16)">
      <summary>
            异步忽略站点（默认站号为1）读保持寄存器（FC3），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="quantity">读取数量</param>
      <returns>响应值</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusIgnoreSlaveMasterExtension.ReadInputRegisters(TouchSocket.Modbus.IIgnoreSlaveIdModbusMaster,System.UInt16,System.UInt16)">
      <summary>
            忽略站点（默认站号为1）读输入寄存器（FC4），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="quantity">读取数量</param>
      <returns>响应值</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusIgnoreSlaveMasterExtension.ReadInputRegistersAsync(TouchSocket.Modbus.IIgnoreSlaveIdModbusMaster,System.UInt16,System.UInt16)">
      <summary>
            异步忽略站点（默认站号为1）读输入寄存器（FC4），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="quantity">读取数量</param>
      <returns>响应值</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusIgnoreSlaveMasterExtension.ReadWriteMultipleRegisters(TouchSocket.Modbus.IIgnoreSlaveIdModbusMaster,System.UInt16,System.UInt16,System.UInt16,System.Byte[])">
      <summary>
            读写多个寄存器（FC23），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="startingAddressForRead">读取位置（从0开始）</param>
      <param name="quantityForRead">读取长度</param>
      <param name="startingAddress">写入位置（从0开始）</param>
      <param name="bytes">待写入数据</param>
      <returns>响应值</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusIgnoreSlaveMasterExtension.ReadWriteMultipleRegistersAsync(TouchSocket.Modbus.IIgnoreSlaveIdModbusMaster,System.UInt16,System.UInt16,System.UInt16,System.Byte[])">
      <summary>
            读写多个寄存器（FC23），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="startingAddressForRead">读取位置（从0开始）</param>
      <param name="quantityForRead">读取长度</param>
      <param name="startingAddress">写入位置（从0开始）</param>
      <param name="bytes">待写入数据</param>
      <returns>响应值</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusIgnoreSlaveMasterExtension.WriteMultipleCoils(TouchSocket.Modbus.IIgnoreSlaveIdModbusMaster,System.UInt16,System.Boolean[])">
      <summary>
            忽略站点（默认站号为1）写入多个线圈（FC15），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="values">待写入集合</param>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusIgnoreSlaveMasterExtension.WriteMultipleCoilsAsync(TouchSocket.Modbus.IIgnoreSlaveIdModbusMaster,System.UInt16,System.Boolean[])">
      <summary>
            异步忽略站点（默认站号为1）写入多个线圈（FC15），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="values">待写入集合</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusIgnoreSlaveMasterExtension.WriteMultipleCoilsAsync(TouchSocket.Modbus.IIgnoreSlaveIdModbusMaster,System.UInt16,System.Boolean[])</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusIgnoreSlaveMasterExtension.WriteMultipleRegisters(TouchSocket.Modbus.IIgnoreSlaveIdModbusMaster,System.UInt16,System.Byte[])">
      <summary>
            忽略站点（默认站号为1）写入多个寄存器（FC16），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="bytes">待写入集合</param>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusIgnoreSlaveMasterExtension.WriteMultipleRegistersAsync(TouchSocket.Modbus.IIgnoreSlaveIdModbusMaster,System.UInt16,System.Byte[])">
      <summary>
            异步忽略站点（默认站号为1）写入多个寄存器（FC16），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="bytes">待写入集合</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusIgnoreSlaveMasterExtension.WriteMultipleRegistersAsync(TouchSocket.Modbus.IIgnoreSlaveIdModbusMaster,System.UInt16,System.Byte[])</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusIgnoreSlaveMasterExtension.WriteSingleCoil(TouchSocket.Modbus.IIgnoreSlaveIdModbusMaster,System.UInt16,System.Boolean)">
      <summary>
            忽略站点（默认站号为1）写入单个线圈（FC5），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="value">待写入数值</param>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusIgnoreSlaveMasterExtension.WriteSingleCoilAsync(TouchSocket.Modbus.IIgnoreSlaveIdModbusMaster,System.UInt16,System.Boolean)">
      <summary>
            异步忽略站点（默认站号为1）写入单个线圈（FC5），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="value">待写入数值</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusIgnoreSlaveMasterExtension.WriteSingleCoilAsync(TouchSocket.Modbus.IIgnoreSlaveIdModbusMaster,System.UInt16,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusIgnoreSlaveMasterExtension.WriteSingleRegister(TouchSocket.Modbus.IIgnoreSlaveIdModbusMaster,System.UInt16,System.Int16)">
      <summary>
            忽略站点（默认站号为1）写入单个寄存器（FC6），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="value">待写入数值</param>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusIgnoreSlaveMasterExtension.WriteSingleRegisterAsync(TouchSocket.Modbus.IIgnoreSlaveIdModbusMaster,System.UInt16,System.Int16)">
      <summary>
            异步忽略站点（默认站号为1）写入单个寄存器（FC6），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="value">待写入数值</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusIgnoreSlaveMasterExtension.WriteSingleRegisterAsync(TouchSocket.Modbus.IIgnoreSlaveIdModbusMaster,System.UInt16,System.Int16)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Modbus.ModbusMasterExtension">
      <summary>
            ModbusClientExtension
            </summary>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.ReadCoils(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.UInt16)">
      <summary>
            从指定站点读取线圈（FC1），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="quantity">读取数量</param>
      <returns>读取到的值集合</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.ReadCoils(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.UInt16,System.Int32,System.Threading.CancellationToken)">
      <summary>
            从指定站点读取线圈（FC1）。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="quantity">读取数量</param>
      <param name="timeout">超时时间，单位（ms）</param>
      <param name="token">可取消令箭</param>
      <returns>读取到的值集合</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.ReadCoilsAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.UInt16)">
      <summary>
            异步从指定站点读取线圈（FC1），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="quantity">读取数量</param>
      <returns>读取到的值集合</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.ReadCoilsAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.UInt16,System.Int32,System.Threading.CancellationToken)">
      <summary>
            异步从指定站点读取线圈（FC1）。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="quantity">读取数量</param>
      <param name="timeout">超时时间，单位（ms）</param>
      <param name="token">可取消令箭</param>
      <returns>读取到的值集合</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.ReadDiscreteInputs(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.UInt16)">
      <summary>
            从指定站点读离散输入状态（FC2），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="quantity">读取数量</param>
      <returns>读取到的值集合</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.ReadDiscreteInputs(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.UInt16,System.Int32,System.Threading.CancellationToken)">
      <summary>
            从指定站点读离散输入状态（FC2）。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="quantity">读取数量</param>
      <param name="timeout">超时时间，单位（ms）</param>
      <param name="token">可取消令箭</param>
      <returns>读取到的值集合</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.ReadDiscreteInputsAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.UInt16)">
      <summary>
            异步从指定站点读离散输入状态（FC2），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="quantity">读取数量</param>
      <returns>读取到的值集合</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.ReadDiscreteInputsAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.UInt16,System.Int32,System.Threading.CancellationToken)">
      <summary>
            异步从指定站点读离散输入状态（FC2）。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="quantity">读取数量</param>
      <param name="timeout">超时时间，单位（ms）</param>
      <param name="token">可取消令箭</param>
      <returns>读取到的值集合</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.ReadHoldingRegisters(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.UInt16)">
      <summary>
            从指定站点读保持寄存器（FC3），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="quantity">读取数量</param>
      <returns>响应值</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.ReadHoldingRegisters(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.UInt16,System.Int32,System.Threading.CancellationToken)">
      <summary>
            从指定站点读保持寄存器（FC3）。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="quantity">读取数量</param>
      <param name="timeout">超时时间，单位（ms）</param>
      <param name="token">可取消令箭</param>
      <returns>响应值</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.ReadHoldingRegistersAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.UInt16)">
      <summary>
            异步从指定站点读保持寄存器（FC3），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="quantity">读取数量</param>
      <returns>响应值</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.ReadHoldingRegistersAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.UInt16,System.Int32,System.Threading.CancellationToken)">
      <summary>
            异步从指定站点读保持寄存器（FC3）。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="quantity">读取数量</param>
      <param name="timeout">超时时间，单位（ms）</param>
      <param name="token">可取消令箭</param>
      <returns>响应值</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.ReadInputRegisters(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.UInt16)">
      <summary>
            从指定站点读输入寄存器（FC4），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="quantity">读取数量</param>
      <returns>响应值</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.ReadInputRegisters(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.UInt16,System.Int32,System.Threading.CancellationToken)">
      <summary>
            从指定站点读输入寄存器（FC4）。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="quantity">读取数量</param>
      <param name="timeout">超时时间，单位（ms）</param>
      <param name="token">可取消令箭</param>
      <returns>响应值</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.ReadInputRegistersAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.UInt16)">
      <summary>
            异步从指定站点读输入寄存器（FC4），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="quantity">读取数量</param>
      <returns>响应值</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.ReadInputRegistersAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.UInt16,System.Int32,System.Threading.CancellationToken)">
      <summary>
            异步从指定站点读输入寄存器（FC4）。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="quantity">读取数量</param>
      <param name="timeout">超时时间，单位（ms）</param>
      <param name="token">可取消令箭</param>
      <returns>响应值</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.ReadWriteMultipleRegisters(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.UInt16,System.UInt16,System.Byte[])">
      <summary>
            读写多个寄存器（FC23），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddressForRead">读取位置（从0开始）</param>
      <param name="quantityForRead">读取长度</param>
      <param name="startingAddress">写入位置（从0开始）</param>
      <param name="bytes">待写入数据</param>
      <returns>响应值</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.ReadWriteMultipleRegisters(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.UInt16,System.UInt16,System.Byte[],System.Int32,System.Threading.CancellationToken)">
      <summary>
            读写多个寄存器（FC23）
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddressForRead">读取位置（从0开始）</param>
      <param name="quantityForRead">读取长度</param>
      <param name="startingAddress">写入位置（从0开始）</param>
      <param name="bytes">待写入数据</param>
      <param name="timeout">超时时间，单位（ms）</param>
      <param name="token">可取消令箭</param>
      <returns>响应值</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.ReadWriteMultipleRegistersAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.UInt16,System.UInt16,System.Byte[])">
      <summary>
            读写多个寄存器（FC23），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddressForRead">读取位置（从0开始）</param>
      <param name="quantityForRead">读取长度</param>
      <param name="startingAddress">写入位置（从0开始）</param>
      <param name="bytes">待写入数据</param>
      <returns>响应值</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.ReadWriteMultipleRegistersAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.UInt16,System.UInt16,System.Byte[],System.Int32,System.Threading.CancellationToken)">
      <summary>
            读写多个寄存器（FC23）
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddressForRead">读取位置（从0开始）</param>
      <param name="quantityForRead">读取长度</param>
      <param name="startingAddress">写入位置（从0开始）</param>
      <param name="bytes">待写入数据</param>
      <param name="timeout">超时时间，单位（ms）</param>
      <param name="token">可取消令箭</param>
      <returns>响应值</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.WriteMultipleCoils(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.Boolean[])">
      <summary>
            向指定站点写入多个线圈（FC15），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="values">待写入集合</param>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.WriteMultipleCoils(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.Boolean[],System.Int32,System.Threading.CancellationToken)">
      <summary>
            向指定站点写入多个线圈（FC15）。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="values">待写入集合</param>
      <param name="timeout">超时时间，单位（ms）</param>
      <param name="token">可取消令箭</param>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.WriteMultipleCoilsAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.Boolean[])">
      <summary>
            异步向指定站点写入多个线圈（FC15），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="values">待写入集合</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusMasterExtension.WriteMultipleCoilsAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.Boolean[])</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.WriteMultipleCoilsAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.Boolean[],System.Int32,System.Threading.CancellationToken)">
      <summary>
            异步向指定站点写入多个线圈（FC15）。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="values">待写入集合</param>
      <param name="timeout">超时时间，单位（ms）</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusMasterExtension.WriteMultipleCoilsAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.Boolean[],System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.WriteMultipleRegisters(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.Byte[])">
      <summary>
            向指定站点写入多个寄存器（FC16），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="bytes">待写入集合</param>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.WriteMultipleRegisters(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.Byte[],System.Int32,System.Threading.CancellationToken)">
      <summary>
            向指定站点写入多个寄存器（FC16）。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="bytes">待写入集合</param>
      <param name="timeout">超时时间，单位（ms）</param>
      <param name="token">可取消令箭</param>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.WriteMultipleRegistersAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.Byte[])">
      <summary>
            异步向指定站点写入多个寄存器（FC16），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="bytes">待写入集合</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusMasterExtension.WriteMultipleRegistersAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.Byte[])</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.WriteMultipleRegistersAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.Byte[],System.Int32,System.Threading.CancellationToken)">
      <summary>
            异步向指定站点写入多个寄存器（FC16）。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="bytes">待写入集合</param>
      <param name="timeout">超时时间，单位（ms）</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusMasterExtension.WriteMultipleRegistersAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.Byte[],System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.WriteSingleCoil(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.Boolean)">
      <summary>
            向指定站点写入单个线圈（FC5），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="value">待写入数值</param>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.WriteSingleCoil(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.Boolean,System.Int32,System.Threading.CancellationToken)">
      <summary>
            向指定站点写入单个线圈（FC5）。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="value">待写入数值</param>
      <param name="timeout">超时时间，单位（ms）</param>
      <param name="token">可取消令箭</param>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.WriteSingleCoilAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.Boolean)">
      <summary>
            异步向指定站点写入单个线圈（FC5），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="value">待写入数值</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusMasterExtension.WriteSingleCoilAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.WriteSingleCoilAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.Boolean,System.Int32,System.Threading.CancellationToken)">
      <summary>
            异步向指定站点写入单个线圈（FC5）。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="value">待写入数值</param>
      <param name="timeout">超时时间，单位（ms）</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusMasterExtension.WriteSingleCoilAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.Boolean,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.WriteSingleRegister(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.Int16)">
      <summary>
            向指定站点写入单个寄存器（FC6），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="value">待写入数值</param>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.WriteSingleRegister(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.Int16,System.Int32,System.Threading.CancellationToken)">
      <summary>
            向指定站点写入单个寄存器（FC6）
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="value">待写入数值</param>
      <param name="timeout">超时时间，单位（ms）</param>
      <param name="token">可取消令箭</param>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.WriteSingleRegister(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.UInt16,System.Int32,System.Threading.CancellationToken)">
      <summary>
            向指定站点写入单个寄存器（FC6）
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="value">待写入数值</param>
      <param name="timeout">超时时间，单位（ms）</param>
      <param name="token">可取消令箭</param>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.WriteSingleRegisterAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.Int16)">
      <summary>
            异步向指定站点写入单个寄存器（FC6），默认超时时间为1000ms。
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="value">待写入数值</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusMasterExtension.WriteSingleRegisterAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.Int16)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.WriteSingleRegisterAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.Int16,System.Int32,System.Threading.CancellationToken)">
      <summary>
            异步向指定站点写入单个寄存器（FC6）
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="value">待写入数值</param>
      <param name="timeout">超时时间，单位（ms）</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusMasterExtension.WriteSingleRegisterAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.Int16,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusMasterExtension.WriteSingleRegisterAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.UInt16,System.Int32,System.Threading.CancellationToken)">
      <summary>
            异步向指定站点写入单个寄存器（FC6）
            </summary>
      <param name="master">通讯客户端</param>
      <param name="slaveId">站点号</param>
      <param name="startingAddress">起始位置（从0开始）</param>
      <param name="value">待写入数值</param>
      <param name="timeout">超时时间，单位（ms）</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusMasterExtension.WriteSingleRegisterAsync(TouchSocket.Modbus.IModbusMaster,System.Byte,System.UInt16,System.UInt16,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Modbus.ModbusRequest">
      <summary>
            Modbus请求类
            </summary>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusRequest.#ctor">
      <summary>
            Modbus请求类
            </summary>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusRequest.#ctor(System.Byte,TouchSocket.Modbus.FunctionCode)">
      <summary>
            初始化一个站点与功能码请求。
            </summary>
      <param name="slaveId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>slaveId</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRequest.#ctor(System.Byte,TouchSocket.Modbus.FunctionCode)</parameter>
          </include>
        </markup>
      </param>
      <param name="functionCode">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>functionCode</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRequest.#ctor(System.Byte,TouchSocket.Modbus.FunctionCode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusRequest.#ctor(System.Byte,TouchSocket.Modbus.FunctionCode,System.UInt16,System.UInt16)">
      <summary>
            初始化一个读取类请求
            </summary>
      <param name="slaveId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>slaveId</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRequest.#ctor(System.Byte,TouchSocket.Modbus.FunctionCode,System.UInt16,System.UInt16)</parameter>
          </include>
        </markup>
      </param>
      <param name="functionCode">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>functionCode</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRequest.#ctor(System.Byte,TouchSocket.Modbus.FunctionCode,System.UInt16,System.UInt16)</parameter>
          </include>
        </markup>
      </param>
      <param name="startingAddress">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>startingAddress</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRequest.#ctor(System.Byte,TouchSocket.Modbus.FunctionCode,System.UInt16,System.UInt16)</parameter>
          </include>
        </markup>
      </param>
      <param name="quantity">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>quantity</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRequest.#ctor(System.Byte,TouchSocket.Modbus.FunctionCode,System.UInt16,System.UInt16)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusRequest.#ctor(TouchSocket.Modbus.FunctionCode)">
      <summary>
            使用一个功能码初始化
            </summary>
      <param name="functionCode">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>functionCode</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRequest.#ctor(TouchSocket.Modbus.FunctionCode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:TouchSocket.Modbus.ModbusRequest.Data">
      <summary>
            数据
            </summary>
    </member>
    <member name="P:TouchSocket.Modbus.ModbusRequest.FunctionCode">
      <summary>
            功能码
            </summary>
    </member>
    <member name="P:TouchSocket.Modbus.ModbusRequest.Quantity">
      <summary>
            数量
            </summary>
    </member>
    <member name="P:TouchSocket.Modbus.ModbusRequest.ReadQuantity">
      <summary>
            读取长度
            </summary>
    </member>
    <member name="P:TouchSocket.Modbus.ModbusRequest.ReadStartAddress">
      <summary>
            在读起始位置。
            </summary>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusRequest.SetValue(System.Boolean)">
      <summary>
            设置<see cref="P:TouchSocket.Modbus.ModbusRequest.Data" />的值为一个bool。
            </summary>
      <param name="value"></param>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusRequest.SetValue(System.Boolean[])">
      <summary>
            设置<see cref="P:TouchSocket.Modbus.ModbusRequest.Data" />的值为bool数组，同时设置<see cref="P:TouchSocket.Modbus.ModbusRequest.Quantity" />的数量（即数组长度）。
            </summary>
      <param name="values"></param>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusRequest.SetValue(System.Byte[])">
      <summary>
            设置<see cref="P:TouchSocket.Modbus.ModbusRequest.Data" />的值为数组，同时设置<see cref="P:TouchSocket.Modbus.ModbusRequest.Quantity" />的数量（即数组长度的1/2）。
            </summary>
      <param name="bytes"></param>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusRequest.SetValue(System.Int16)">
      <summary>
            设置<see cref="P:TouchSocket.Modbus.ModbusRequest.Data" />的值为short。
            </summary>
      <param name="value"></param>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusRequest.SetValue(System.UInt16)">
      <summary>
            设置<see cref="P:TouchSocket.Modbus.ModbusRequest.Data" />的值为ushort。
            </summary>
      <param name="value"></param>
    </member>
    <member name="P:TouchSocket.Modbus.ModbusRequest.SlaveId">
      <summary>
            站点号（单元标识符）
            </summary>
    </member>
    <member name="P:TouchSocket.Modbus.ModbusRequest.StartingAddress">
      <summary>
            起始位置
            </summary>
    </member>
    <member name="T:TouchSocket.Modbus.ModbusResponseException">
      <summary>
            Modbus响应异常。
            </summary>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusResponseException.#ctor(TouchSocket.Modbus.ModbusErrorCode)">
      <summary>
            Modbus响应异常
            </summary>
      <param name="errorCode">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>errorCode</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusResponseException.#ctor(TouchSocket.Modbus.ModbusErrorCode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:TouchSocket.Modbus.ModbusResponseException.ErrorCode">
      <summary>
            异常码
            </summary>
    </member>
    <member name="T:TouchSocket.Modbus.ModbusResponseExtension">
      <summary>
            ModbusResponseExtension
            </summary>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusResponseExtension.CreateReader(TouchSocket.Modbus.IModbusResponse)">
      <summary>
            获取一个读取器。
            </summary>
      <param name="response">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>response</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusResponseExtension.CreateReader(TouchSocket.Modbus.IModbusResponse)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusResponseExtension.CreateReader(TouchSocket.Modbus.IModbusResponse)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Modbus.ModbusRtuBase">
      <summary>
            ModbusRtuBase
            </summary>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusRtuBase.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>TouchSocket.Modbus.ModbusRtuBase</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:TouchSocket.Modbus.ModbusRtuBase.Crc">
      <summary>
            校验码
            </summary>
    </member>
    <member name="T:TouchSocket.Modbus.ModbusRtuMaster">
      <summary>
            基于串口的Modbus主站接口
            </summary>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusRtuMaster.#ctor">
      <summary>
            基于串口的Modbus主站接口
            </summary>
    </member>
    <member name="P:TouchSocket.Modbus.ModbusRtuMaster.CanSetDataHandlingAdapter">
      <summary>
            是否允许自由调用<see cref="M:TouchSocket.Core.IAdapterObject.SetDataHandlingAdapter(TouchSocket.Core.SingleStreamDataHandlingAdapter)" />进行赋值。
            </summary>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusRtuMaster.OnConnecting(TouchSocket.SerialPorts.SerialConnectingEventArgs)">
      <summary>
            准备连接的时候，此时并未建立连接
            </summary>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuMaster.OnConnecting(TouchSocket.SerialPorts.SerialConnectingEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuMaster.OnConnecting(TouchSocket.SerialPorts.SerialConnectingEventArgs)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusRtuMaster.ReceivedData(TouchSocket.Sockets.ReceivedDataEventArgs)">
      <summary>
            当收到适配器处理的数据时。
            </summary>
      <param name="e"></param>
      <returns>如果返回<see langword="true" />则表示数据已被处理，且不会再向下传递。</returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusRtuMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)">
      <summary>
            发送Modbus请求
            </summary>
      <param name="request">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>request</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="timeout">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeout</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="token">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>token</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusRtuMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)">
      <summary>
            异步发送Modbus请求
            </summary>
      <param name="request">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>request</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="timeout">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeout</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="token">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>token</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Modbus.ModbusRtuOverTcpMaster">
      <summary>
            基于Tcp协议，且使用Rtu数据格式的Modbus主站接口
            </summary>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusRtuOverTcpMaster.#ctor">
      <summary>
            基于Tcp协议，且使用Rtu数据格式的Modbus主站接口
            </summary>
    </member>
    <member name="P:TouchSocket.Modbus.ModbusRtuOverTcpMaster.CanSetDataHandlingAdapter">
      <summary>
            是否允许自由调用<see cref="M:TouchSocket.Core.IAdapterObject.SetDataHandlingAdapter(TouchSocket.Core.SingleStreamDataHandlingAdapter)" />进行赋值。
            </summary>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusRtuOverTcpMaster.OnConnecting(TouchSocket.Sockets.ConnectingEventArgs)">
      <summary>
            准备连接的时候，此时已初始化Socket，但是并未建立Tcp连接
            </summary>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuOverTcpMaster.OnConnecting(TouchSocket.Sockets.ConnectingEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuOverTcpMaster.OnConnecting(TouchSocket.Sockets.ConnectingEventArgs)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusRtuOverTcpMaster.ReceivedData(TouchSocket.Sockets.ReceivedDataEventArgs)">
      <summary>
            当收到适配器处理的数据时。
            </summary>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuOverTcpMaster.ReceivedData(TouchSocket.Sockets.ReceivedDataEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuOverTcpMaster.ReceivedData(TouchSocket.Sockets.ReceivedDataEventArgs)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusRtuOverTcpMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)">
      <summary>
            发送Modbus请求
            </summary>
      <param name="request">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>request</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuOverTcpMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="timeout">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeout</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuOverTcpMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="token">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>token</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuOverTcpMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuOverTcpMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusRtuOverTcpMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)">
      <summary>
            异步发送Modbus请求
            </summary>
      <param name="request">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>request</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuOverTcpMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="timeout">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeout</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuOverTcpMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="token">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>token</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuOverTcpMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuOverTcpMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Modbus.ModbusRtuOverUdpMaster">
      <summary>
            基于Udp协议，且使用Rtu格式的Modbus主站
            </summary>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusRtuOverUdpMaster.#ctor">
      <summary>
            基于Udp协议，且使用Rtu格式的Modbus主站
            </summary>
    </member>
    <member name="P:TouchSocket.Modbus.ModbusRtuOverUdpMaster.CanSetDataHandlingAdapter">
      <summary>
    
            是否允许自由调用<see cref="M:TouchSocket.Sockets.IUdpSession.SetDataHandlingAdapter(TouchSocket.Sockets.UdpDataHandlingAdapter)" />进行赋值。
            
  </summary>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusRtuOverUdpMaster.LoadConfig(TouchSocket.Core.TouchSocketConfig)">
      <summary>
            加载配置
            </summary>
      <param name="config">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>config</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuOverUdpMaster.LoadConfig(TouchSocket.Core.TouchSocketConfig)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusRtuOverUdpMaster.ReceivedData(TouchSocket.Sockets.UdpReceivedDataEventArgs)">
      <summary>
            处理已接收到的数据。
            </summary>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuOverUdpMaster.ReceivedData(TouchSocket.Sockets.UdpReceivedDataEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuOverUdpMaster.ReceivedData(TouchSocket.Sockets.UdpReceivedDataEventArgs)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusRtuOverUdpMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)">
      <summary>
            发送Modbus请求
            </summary>
      <param name="request">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>request</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuOverUdpMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="timeout">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeout</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuOverUdpMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="token">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>token</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuOverUdpMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuOverUdpMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusRtuOverUdpMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)">
      <summary>
            异步发送Modbus请求
            </summary>
      <param name="request">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>request</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuOverUdpMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="timeout">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeout</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuOverUdpMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="token">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>token</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuOverUdpMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusRtuOverUdpMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Modbus.ModbusTcpBase">
      <summary>
            ModbusTcpBase
            </summary>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusTcpBase.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>TouchSocket.Modbus.ModbusTcpBase</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:TouchSocket.Modbus.ModbusTcpBase.ProtocolId">
      <summary>
            协议标识符
            </summary>
    </member>
    <member name="P:TouchSocket.Modbus.ModbusTcpBase.TransactionId">
      <summary>
            事务处理标识符。即序号
            </summary>
    </member>
    <member name="T:TouchSocket.Modbus.ModbusTcpMaster">
      <summary>
            基于Tcp协议的Modbus客户端
            </summary>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusTcpMaster.#ctor">
      <summary>
            基于Tcp协议的Modbus客户端
            </summary>
    </member>
    <member name="P:TouchSocket.Modbus.ModbusTcpMaster.CanSetDataHandlingAdapter">
      <summary>
            是否允许自由调用<see cref="M:TouchSocket.Core.IAdapterObject.SetDataHandlingAdapter(TouchSocket.Core.SingleStreamDataHandlingAdapter)" />进行赋值。
            </summary>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusTcpMaster.OnConnecting(TouchSocket.Sockets.ConnectingEventArgs)">
      <summary>
            准备连接的时候，此时已初始化Socket，但是并未建立Tcp连接
            </summary>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusTcpMaster.OnConnecting(TouchSocket.Sockets.ConnectingEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusTcpMaster.OnConnecting(TouchSocket.Sockets.ConnectingEventArgs)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusTcpMaster.ReceivedData(TouchSocket.Sockets.ReceivedDataEventArgs)">
      <summary>
            当收到适配器处理的数据时。
            </summary>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusTcpMaster.ReceivedData(TouchSocket.Sockets.ReceivedDataEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusTcpMaster.ReceivedData(TouchSocket.Sockets.ReceivedDataEventArgs)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusTcpMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)">
      <summary>
            发送Modbus请求
            </summary>
      <param name="request">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>request</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusTcpMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="timeout">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeout</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusTcpMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="token">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>token</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusTcpMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusTcpMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusTcpMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)">
      <summary>
            异步发送Modbus请求
            </summary>
      <param name="request">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>request</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusTcpMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="timeout">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeout</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusTcpMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="token">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>token</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusTcpMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusTcpMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Modbus.ModbusUdpMaster">
      <summary>
            基于Udp协议的Modbus
            </summary>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusUdpMaster.#ctor">
      <summary>
            基于Udp协议的Modbus
            </summary>
    </member>
    <member name="P:TouchSocket.Modbus.ModbusUdpMaster.CanSetDataHandlingAdapter">
      <summary>
    
            是否允许自由调用<see cref="M:TouchSocket.Sockets.IUdpSession.SetDataHandlingAdapter(TouchSocket.Sockets.UdpDataHandlingAdapter)" />进行赋值。
            
  </summary>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusUdpMaster.LoadConfig(TouchSocket.Core.TouchSocketConfig)">
      <summary>
            加载配置
            </summary>
      <param name="config">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>config</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusUdpMaster.LoadConfig(TouchSocket.Core.TouchSocketConfig)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusUdpMaster.ReceivedData(TouchSocket.Sockets.UdpReceivedDataEventArgs)">
      <summary>
            处理已接收到的数据。
            </summary>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusUdpMaster.ReceivedData(TouchSocket.Sockets.UdpReceivedDataEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusUdpMaster.ReceivedData(TouchSocket.Sockets.UdpReceivedDataEventArgs)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusUdpMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)">
      <summary>
            发送Modbus请求
            </summary>
      <param name="request">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>request</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusUdpMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="timeout">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeout</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusUdpMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="token">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>token</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusUdpMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusUdpMaster.SendModbusRequest(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Modbus.ModbusUdpMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)">
      <summary>
            异步发送Modbus请求
            </summary>
      <param name="request">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>request</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusUdpMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="timeout">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeout</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusUdpMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="token">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>token</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusUdpMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.ModbusUdpMaster.SendModbusRequestAsync(TouchSocket.Modbus.ModbusRequest,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Modbus.TouchSocketModbusThrowHelper">
      <summary>
            TouchSocketModbusThrowHelper
            </summary>
    </member>
    <member name="M:TouchSocket.Modbus.TouchSocketModbusThrowHelper.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>TouchSocket.Modbus.TouchSocketModbusThrowHelper</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:TouchSocket.Modbus.TouchSocketModbusThrowHelper.ThrowIfNotSuccess(TouchSocket.Modbus.ModbusErrorCode)">
      <summary>
            判断Modbus状态，非成功状态将抛出异常。
            </summary>
      <param name="errorCode">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>errorCode</parameter>
            <parameter>M:TouchSocket.Modbus.TouchSocketModbusThrowHelper.ThrowIfNotSuccess(TouchSocket.Modbus.ModbusErrorCode)</parameter>
          </include>
        </markup>
      </param>
      <exception cref="T:TouchSocket.Modbus.ModbusResponseException"></exception>
    </member>
    <member name="T:TouchSocket.Modbus.TouchSocketModbusUtility">
      <summary>
            TouchSocketModbusUtility
            </summary>
    </member>
    <member name="M:TouchSocket.Modbus.TouchSocketModbusUtility.BoolToBytes(System.Boolean)">
      <summary>
            将布尔值转为2字节数组
            </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:TouchSocket.Modbus.TouchSocketModbusUtility.BoolToBytes(System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Modbus.TouchSocketModbusUtility.BoolToBytes(System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="F:TouchSocket.Modbus.TouchSocketModbusUtility.ModbusRtu">
      <summary>
            ModbusRtu
            </summary>
    </member>
    <member name="F:TouchSocket.Modbus.TouchSocketModbusUtility.ModbusRtuOverTcp">
      <summary>
            ModbusRtuOverTcp
            </summary>
    </member>
    <member name="F:TouchSocket.Modbus.TouchSocketModbusUtility.ModbusRtuOverUdp">
      <summary>
            ModbusRtuOverUdp
            </summary>
    </member>
    <member name="F:TouchSocket.Modbus.TouchSocketModbusUtility.ModbusTcp">
      <summary>
            ModbusTcp
            </summary>
    </member>
    <member name="F:TouchSocket.Modbus.TouchSocketModbusUtility.ModbusUdp">
      <summary>
            ModbusUdp
            </summary>
    </member>
    <member name="M:TouchSocket.Modbus.TouchSocketModbusUtility.ToModbusCrc(System.Byte[],System.Int32,System.Int32)">
      <summary>
            CRC16_Modbus效验
            </summary>
      <param name="byteData">要进行计算的字节数组</param>
      <param name="offset">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offset</parameter>
            <parameter>M:TouchSocket.Modbus.TouchSocketModbusUtility.ToModbusCrc(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="length">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>length</parameter>
            <parameter>M:TouchSocket.Modbus.TouchSocketModbusUtility.ToModbusCrc(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>计算后的数组</returns>
    </member>
  </members>
</doc>