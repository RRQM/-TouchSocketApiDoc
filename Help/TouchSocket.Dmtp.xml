<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>TouchSocket.Dmtp</name>
  </assembly>
  <members>
    <member name="T:TouchSocket.Dmtp.ChannelStatus">
      <summary>
            通道状态
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.ChannelStatus.Default">
      <summary>
            默认
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.ChannelStatus.Moving">
      <summary>
            继续下移
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.ChannelStatus.Overtime">
      <summary>
            超时
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.ChannelStatus.HoldOn">
      <summary>
            继续
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.ChannelStatus.Cancel">
      <summary>
            取消
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.ChannelStatus.Completed">
      <summary>
            完成
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.ChannelStatus.Disposed">
      <summary>
            已释放
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.CreateChannelEventArgs">
      <summary>
            创建通道事件类
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.CreateChannelEventArgs.#ctor(System.Int32,TouchSocket.Core.Metadata)">
      <summary>
            创建通道事件类
            </summary>
      <param name="channelId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>channelId</parameter>
            <parameter>M:TouchSocket.Dmtp.CreateChannelEventArgs.#ctor(System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <param name="metadata">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>metadata</parameter>
            <parameter>M:TouchSocket.Dmtp.CreateChannelEventArgs.#ctor(System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:TouchSocket.Dmtp.CreateChannelEventArgs.ChannelId">
      <summary>
            通道Id
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.CreateChannelEventArgs.Metadata">
      <summary>
            元数据
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.DmtpActor">
      <summary>
            提供Dmtp协议的最基础功能件
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.#ctor(System.Boolean)">
      <summary>
            创建一个可靠协议的Dmtp协议的最基础功能件
            </summary>
      <param name="allowRoute">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>allowRoute</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.#ctor(System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.#ctor(System.Boolean,System.Boolean)">
      <summary>
            创建一个Dmtp协议的最基础功能件
            </summary>
      <param name="allowRoute">是否允许路由</param>
      <param name="isReliable">是不是基于可靠协议运行的</param>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpActor.AllowRoute">
      <summary>
            是否允许支持路由数据。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.ChannelExisted(System.Int32)">
      <summary>
            判断指定Id的通道是否已经存在
            </summary>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.ChannelExisted(System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.ChannelExisted(System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpActor.Client">
      <summary>
            包含当前功能件的宿主通讯端。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.Close(System.String)">
      <summary>
            关闭客户端。
            </summary>
      <param name="msg">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>msg</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.Close(System.String)</parameter>
          </include>
        </markup>
      </param>
      <exception cref="T:System.Exception"></exception>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpActor.Closed">
      <summary>
            请求关闭
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.CreateChannel(System.Int32,TouchSocket.Core.Metadata)">
      <summary>
            在当前对点创建一个指定Id的通道
            </summary>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.CreateChannel(System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <param name="metadata">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>metadata</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.CreateChannel(System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.CreateChannel(System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.CreateChannel(System.String,System.Int32,TouchSocket.Core.Metadata)">
      <summary>
            在指定路由点创建一个指定Id的通道
            </summary>
      <param name="targetId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>targetId</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.CreateChannel(System.String,System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.CreateChannel(System.String,System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <param name="metadata">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>metadata</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.CreateChannel(System.String,System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.CreateChannel(System.String,System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.CreateChannel(System.String,TouchSocket.Core.Metadata)">
      <summary>
            在指定路由点创建一个随机Id的通道
            </summary>
      <param name="targetId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>targetId</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.CreateChannel(System.String,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <param name="metadata">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>metadata</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.CreateChannel(System.String,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.CreateChannel(System.String,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.CreateChannel(TouchSocket.Core.Metadata)">
      <summary>
            在当前对点创建一个随机Id的通道
            </summary>
      <param name="metadata">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>metadata</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.CreateChannel(TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.CreateChannel(TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.CreateChannelAsync(System.Int32,TouchSocket.Core.Metadata)">
      <summary>
            在当前对点创建一个指定Id的通道
            </summary>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.CreateChannelAsync(System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <param name="metadata">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>metadata</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.CreateChannelAsync(System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.CreateChannelAsync(System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.CreateChannelAsync(System.String,System.Int32,TouchSocket.Core.Metadata)">
      <summary>
            在指定路由点创建一个指定Id的通道
            </summary>
      <param name="targetId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>targetId</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.CreateChannelAsync(System.String,System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.CreateChannelAsync(System.String,System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <param name="metadata">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>metadata</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.CreateChannelAsync(System.String,System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.CreateChannelAsync(System.String,System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.CreateChannelAsync(System.String,TouchSocket.Core.Metadata)">
      <summary>
            在指定路由点创建一个随机Id的通道
            </summary>
      <param name="targetId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>targetId</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.CreateChannelAsync(System.String,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <param name="metadata">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>metadata</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.CreateChannelAsync(System.String,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.CreateChannelAsync(System.String,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.CreateChannelAsync(TouchSocket.Core.Metadata)">
      <summary>
            在当前对点创建一个随机Id的通道
            </summary>
      <param name="metadata">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>metadata</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.CreateChannelAsync(TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.CreateChannelAsync(TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpActor.CreatedChannel">
      <summary>
            当创建通道时
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpActor.FindDmtpActor">
      <summary>
            查找其他IDmtpActor
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.Handshake(System.String,System.String,System.Int32,TouchSocket.Core.Metadata,System.Threading.CancellationToken)">
      <summary>
            建立对点
            </summary>
      <param name="verifyToken">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>verifyToken</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.Handshake(System.String,System.String,System.Int32,TouchSocket.Core.Metadata,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.Handshake(System.String,System.String,System.Int32,TouchSocket.Core.Metadata,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="timeout">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeout</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.Handshake(System.String,System.String,System.Int32,TouchSocket.Core.Metadata,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="metadata">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>metadata</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.Handshake(System.String,System.String,System.Int32,TouchSocket.Core.Metadata,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="token">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>token</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.Handshake(System.String,System.String,System.Int32,TouchSocket.Core.Metadata,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <exception cref="T:System.Exception"></exception>
      <exception cref="T:TouchSocket.Dmtp.TokenVerifyException"></exception>
      <exception cref="T:System.TimeoutException"></exception>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.HandshakeAsync(System.String,System.String,System.Int32,TouchSocket.Core.Metadata,System.Threading.CancellationToken)">
      <summary>
            建立对点
            </summary>
      <param name="verifyToken">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>verifyToken</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.HandshakeAsync(System.String,System.String,System.Int32,TouchSocket.Core.Metadata,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.HandshakeAsync(System.String,System.String,System.Int32,TouchSocket.Core.Metadata,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="timeout">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeout</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.HandshakeAsync(System.String,System.String,System.Int32,TouchSocket.Core.Metadata,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="metadata">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>metadata</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.HandshakeAsync(System.String,System.String,System.Int32,TouchSocket.Core.Metadata,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="token">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>token</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.HandshakeAsync(System.String,System.String,System.Int32,TouchSocket.Core.Metadata,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.HandshakeAsync(System.String,System.String,System.Int32,TouchSocket.Core.Metadata,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.Exception"></exception>
      <exception cref="T:TouchSocket.Dmtp.TokenVerifyException"></exception>
      <exception cref="T:System.TimeoutException"></exception>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpActor.Handshaked">
      <summary>
            在完成握手连接时
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpActor.Handshaking">
      <summary>
            握手
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpActor.Id">
      <summary>
            本节点Id
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpActor.IdChanged">
      <summary>
            重设Id
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.InputReceivedData(TouchSocket.Dmtp.DmtpMessage)">
      <summary>
            处理接收数据.
            <para><list type="table"><item>0：Close</item><item>1：Handshake_Request</item><item>2：Handshake_Response</item><item>3：ResetId_Request</item><item>4：ResetId_Response</item><item>5：Ping_Request</item><item>6：Ping_Response</item><item>7：CreateChannel_Request</item><item>8：CreateChannel_Response</item><item>9：ChannelPackage</item></list></para></summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.InputReceivedData(TouchSocket.Dmtp.DmtpMessage)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.InputReceivedData(TouchSocket.Dmtp.DmtpMessage)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpActor.IsHandshaked">
      <summary>
            只是当前客户端是否已经完成握手连接。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpActor.IsReliable">
      <summary>
            是否基于可靠协议构建。例如：基于Tcp则为<see langword="true" />，基于Udp则为<see langword="false" />。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpActor.LastActiveTime">
      <summary>
            最后一次活动时间。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpActor.Logger">
      <summary>
            日志
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpActor.OutputSend">
      <summary>
            发送数据接口
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpActor.OutputSendAsync">
      <summary>
            异步发送数据接口
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.DmtpActor.P0_Close">
      <summary>
            Close
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.DmtpActor.P1_Handshake_Request">
      <summary>
            Handshake_Request
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.DmtpActor.P2_Handshake_Response">
      <summary>
            Handshake_Response
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.DmtpActor.P3_ResetId_Request">
      <summary>
            ResetId_Request
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.DmtpActor.P4_ResetId_Response">
      <summary>
            ResetId_Response
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.DmtpActor.P5_Ping_Request">
      <summary>
            Ping_Request
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.DmtpActor.P6_Ping_Response">
      <summary>
            Ping_Response
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.DmtpActor.P7_CreateChannel_Request">
      <summary>
            CreateChannel_Request
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.DmtpActor.P8_CreateChannel_Response">
      <summary>
            CreateChannel_Response
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.DmtpActor.P9_ChannelPackage">
      <summary>
            ChannelPackage
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.Ping(System.Int32)">
      <summary>
            向当前对点发送一个Ping报文，并且等待回应。
            </summary>
      <param name="timeout"></param>
      <returns>一般的，当返回<see langword="true" />时，则表明对点一定存在。而其他情况则返回<see langword="false" /></returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.Ping(System.String,System.Int32)">
      <summary>
            向指定路由点发送一个Ping报文，并且等待回应。
            </summary>
      <param name="targetId"></param>
      <param name="timeout"></param>
      <returns>一般的，当返回<see langword="true" />时，则表明对点一定存在。而其他情况则返回<see langword="false" /></returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.PingAsync(System.Int32)">
      <summary>
            向当前对点发送一个Ping报文，并且等待回应。
            </summary>
      <param name="timeout"></param>
      <returns>一般的，当返回<see langword="true" />时，则表明对点一定存在。而其他情况则返回<see langword="false" /></returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.PingAsync(System.String,System.Int32)">
      <summary>
            向指定路由点发送一个Ping报文，并且等待回应。
            </summary>
      <param name="targetId"></param>
      <param name="timeout"></param>
      <returns>一般的，当返回<see langword="true" />时，则表明对点一定存在。而其他情况则返回<see langword="false" /></returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.ResetId(System.String)">
      <summary>
            重新设置Id,并且同步到对端
            </summary>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.ResetId(System.String)</parameter>
          </include>
        </markup>
      </param>
      <exception cref="T:System.Exception"></exception>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.ResetIdAsync(System.String)">
      <summary>
            重新设置Id,并且同步到对端
            </summary>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.ResetIdAsync(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.ResetIdAsync(System.String)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.Exception"></exception>
      <exception cref="T:System.TimeoutException"></exception>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpActor.Routing">
      <summary>
            当需要路由的时候
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.Send(System.UInt16,System.Byte[],System.Int32,System.Int32)">
      <summary>
            发送字节
            </summary>
      <param name="protocol">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>protocol</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.Send(System.UInt16,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="buffer">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>buffer</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.Send(System.UInt16,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="offset">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offset</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.Send(System.UInt16,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="length">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>length</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.Send(System.UInt16,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.Send(System.UInt16,TouchSocket.Core.ByteBlock)">
      <summary>
            发送字节块
            </summary>
      <param name="protocol">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>protocol</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.Send(System.UInt16,TouchSocket.Core.ByteBlock)</parameter>
          </include>
        </markup>
      </param>
      <param name="byteBlock">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>byteBlock</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.Send(System.UInt16,TouchSocket.Core.ByteBlock)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.SendAsync(System.UInt16,System.Byte[],System.Int32,System.Int32)">
      <summary>
            异步发送字节
            </summary>
      <param name="protocol">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>protocol</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.SendAsync(System.UInt16,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="buffer">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>buffer</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.SendAsync(System.UInt16,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="offset">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offset</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.SendAsync(System.UInt16,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="length">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>length</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.SendAsync(System.UInt16,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.SendAsync(System.UInt16,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.SendAsync(System.UInt16,TouchSocket.Core.ByteBlock)">
      <summary>
            异步发送字节块
            </summary>
      <param name="protocol">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>protocol</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.SendAsync(System.UInt16,TouchSocket.Core.ByteBlock)</parameter>
          </include>
        </markup>
      </param>
      <param name="byteBlock">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>byteBlock</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.SendAsync(System.UInt16,TouchSocket.Core.ByteBlock)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.SendAsync(System.UInt16,TouchSocket.Core.ByteBlock)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.SendClose(System.String)">
      <summary>
            发送Close请求
            </summary>
      <param name="msg">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>msg</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.SendClose(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.SendClose(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.SendFastObject``1(System.UInt16,``0@)">
      <summary>
            以Fast序列化，发送小（64K）对象。接收方需要使用ReadObject读取对象。
            </summary>
      <param name="protocol">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>protocol</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.SendFastObject``1(System.UInt16,``0@)</parameter>
          </include>
        </markup>
      </param>
      <param name="obj">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.SendFastObject``1(System.UInt16,``0@)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.SendFastObject``1(System.UInt16,``0@)</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.SendPackage(System.UInt16,TouchSocket.Core.IPackage@)">
      <summary>
            以包发送小（64K）对象。接收方ReadPackage即可。
            </summary>
      <param name="protocol">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>protocol</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.SendPackage(System.UInt16,TouchSocket.Core.IPackage@)</parameter>
          </include>
        </markup>
      </param>
      <param name="package">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>package</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.SendPackage(System.UInt16,TouchSocket.Core.IPackage@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.SendString(System.UInt16,System.String)">
      <summary>
            发送以utf-8编码的字符串。
            </summary>
      <param name="protocol"></param>
      <param name="value"></param>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.SendStringAsync(System.UInt16,System.String)">
      <summary>
            发送以utf-8编码的字符串。
            </summary>
      <param name="protocol"></param>
      <param name="value"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.SendStringAsync(System.UInt16,System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpActor.SyncRoot">
      <summary>
             获取可用于同步对当前的访问对象进行锁同步。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.TryFindDmtpActor(System.String)">
      <summary>
            尝试获取指定Id的DmtpActor。一般此方法仅在Service下有效。
            </summary>
      <param name="targetId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>targetId</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.TryFindDmtpActor(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.TryFindDmtpActor(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.TryRoute(TouchSocket.Dmtp.PackageRouterEventArgs)">
      <summary>
            尝试请求路由，触发路由相关插件。并在路由失败时向<see cref="P:TouchSocket.Core.MsgPermitEventArgs.Message" />中传递消息。
            </summary>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.TryRoute(TouchSocket.Dmtp.PackageRouterEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.TryRoute(TouchSocket.Dmtp.PackageRouterEventArgs)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActor.TrySubscribeChannel(System.Int32,TouchSocket.Dmtp.IDmtpChannel@)">
      <summary>
            尝试订阅已存在的通道。
            </summary>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.TrySubscribeChannel(System.Int32,TouchSocket.Dmtp.IDmtpChannel@)</parameter>
          </include>
        </markup>
      </param>
      <param name="channel">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>channel</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.TrySubscribeChannel(System.Int32,TouchSocket.Dmtp.IDmtpChannel@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActor.TrySubscribeChannel(System.Int32,TouchSocket.Dmtp.IDmtpChannel@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpActor.WaitHandlePool">
      <summary>
            等待返回池
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.DmtpActorExtension">
      <summary>
            适用于<see cref="T:TouchSocket.Dmtp.IDmtpActor" />的扩展。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.ChannelExisted(TouchSocket.Dmtp.IDmtpActorObject,System.Int32)">
      <summary>
            判断指定Id的通道是否已经存在
            </summary>
      <param name="id"></param>
      <param name="client">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>client</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.ChannelExisted(TouchSocket.Dmtp.IDmtpActorObject,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.ChannelExisted(TouchSocket.Dmtp.IDmtpActorObject,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.CreateChannel(TouchSocket.Dmtp.IDmtpActorObject,System.Int32,TouchSocket.Core.Metadata)">
      <summary>
            在当前对点创建一个指定Id的通道
            </summary>
      <param name="id"></param>
      <param name="metadata"></param>
      <param name="client">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>client</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.CreateChannel(TouchSocket.Dmtp.IDmtpActorObject,System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.CreateChannel(TouchSocket.Dmtp.IDmtpActorObject,System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.CreateChannel(TouchSocket.Dmtp.IDmtpActorObject,System.String,System.Int32,TouchSocket.Core.Metadata)">
      <summary>
            在指定路由点创建一个指定Id的通道
            </summary>
      <param name="targetId"></param>
      <param name="id"></param>
      <param name="metadata"></param>
      <param name="client">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>client</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.CreateChannel(TouchSocket.Dmtp.IDmtpActorObject,System.String,System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.CreateChannel(TouchSocket.Dmtp.IDmtpActorObject,System.String,System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.CreateChannel(TouchSocket.Dmtp.IDmtpActorObject,System.String,TouchSocket.Core.Metadata)">
      <summary>
            在指定路由点创建一个随机Id的通道
            </summary>
      <param name="targetId"></param>
      <param name="metadata"></param>
      <param name="client">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>client</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.CreateChannel(TouchSocket.Dmtp.IDmtpActorObject,System.String,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.CreateChannel(TouchSocket.Dmtp.IDmtpActorObject,System.String,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.CreateChannel(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Core.Metadata)">
      <summary>
            在当前对点创建一个随机Id的通道
            </summary>
      <param name="client">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>client</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.CreateChannel(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <param name="metadata">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>metadata</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.CreateChannel(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.CreateChannel(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.CreateChannelAsync(TouchSocket.Dmtp.IDmtpActorObject,System.Int32,TouchSocket.Core.Metadata)">
      <summary>
            在当前对点创建一个指定Id的通道
            </summary>
      <param name="id"></param>
      <param name="metadata"></param>
      <param name="client">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>client</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.CreateChannelAsync(TouchSocket.Dmtp.IDmtpActorObject,System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.CreateChannelAsync(TouchSocket.Dmtp.IDmtpActorObject,System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.CreateChannelAsync(TouchSocket.Dmtp.IDmtpActorObject,System.String,System.Int32,TouchSocket.Core.Metadata)">
      <summary>
            在指定路由点创建一个指定Id的通道
            </summary>
      <param name="targetId"></param>
      <param name="id"></param>
      <param name="metadata"></param>
      <param name="client">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>client</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.CreateChannelAsync(TouchSocket.Dmtp.IDmtpActorObject,System.String,System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.CreateChannelAsync(TouchSocket.Dmtp.IDmtpActorObject,System.String,System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.CreateChannelAsync(TouchSocket.Dmtp.IDmtpActorObject,System.String,TouchSocket.Core.Metadata)">
      <summary>
            在指定路由点创建一个随机Id的通道
            </summary>
      <param name="targetId"></param>
      <param name="metadata"></param>
      <param name="client">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>client</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.CreateChannelAsync(TouchSocket.Dmtp.IDmtpActorObject,System.String,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.CreateChannelAsync(TouchSocket.Dmtp.IDmtpActorObject,System.String,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.CreateChannelAsync(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Core.Metadata)">
      <summary>
            在当前对点创建一个随机Id的通道
            </summary>
      <param name="client">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>client</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.CreateChannelAsync(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <param name="metadata">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>metadata</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.CreateChannelAsync(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.CreateChannelAsync(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.Ping(TouchSocket.Dmtp.IDmtpActorObject,System.Int32)">
      <summary>
            向当前对点发送一个Ping报文，并且等待回应。
            </summary>
      <param name="timeout"></param>
      <param name="client">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>client</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.Ping(TouchSocket.Dmtp.IDmtpActorObject,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>一般的，当返回<see langword="true" />时，则表明对点一定存在。而其他情况则返回<see langword="false" /></returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.Ping(TouchSocket.Dmtp.IDmtpActorObject,System.String,System.Int32)">
      <summary>
            向指定路由点发送一个Ping报文，并且等待回应。
            </summary>
      <param name="targetId"></param>
      <param name="timeout"></param>
      <param name="client">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>client</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.Ping(TouchSocket.Dmtp.IDmtpActorObject,System.String,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>一般的，当返回<see langword="true" />时，则表明对点一定存在。而其他情况则返回<see langword="false" /></returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.PingAsync(TouchSocket.Dmtp.IDmtpActorObject,System.Int32)">
      <summary>
            向当前对点发送一个Ping报文，并且等待回应。
            </summary>
      <param name="timeout"></param>
      <param name="client">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>client</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.PingAsync(TouchSocket.Dmtp.IDmtpActorObject,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>一般的，当返回<see langword="true" />时，则表明对点一定存在。而其他情况则返回<see langword="false" /></returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.PingAsync(TouchSocket.Dmtp.IDmtpActorObject,System.String,System.Int32)">
      <summary>
            向指定路由点发送一个Ping报文，并且等待回应。
            </summary>
      <param name="targetId"></param>
      <param name="timeout"></param>
      <param name="client">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>client</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.PingAsync(TouchSocket.Dmtp.IDmtpActorObject,System.String,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>一般的，当返回<see langword="true" />时，则表明对点一定存在。而其他情况则返回<see langword="false" /></returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.Send(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16)">
      <summary>
             发送
            </summary>
      <param name="client"></param>
      <param name="protocol"></param>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.Send(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,System.Byte[])">
      <summary>
            发送
            </summary>
      <param name="client"></param>
      <param name="protocol"></param>
      <param name="buffer"></param>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.Send(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,System.Byte[],System.Int32,System.Int32)">
      <summary>
            发送
            </summary>
      <param name="client"></param>
      <param name="protocol"></param>
      <param name="buffer"></param>
      <param name="offset"></param>
      <param name="length"></param>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.Send(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,TouchSocket.Core.ByteBlock)">
      <summary>
             发送
            </summary>
      <param name="client"></param>
      <param name="protocol"></param>
      <param name="byteBlock"></param>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.Send(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,TouchSocket.Core.IPackage)">
      <summary>
            发送估计小于64K的<see cref="T:TouchSocket.Core.IPackage" /></summary>
      <param name="client"></param>
      <param name="protocol">协议</param>
      <param name="package">包</param>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.Send(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,TouchSocket.Core.IPackage,System.Int32)">
      <summary>
            发送<see cref="T:TouchSocket.Core.IPackage" /></summary>
      <param name="client"></param>
      <param name="protocol">协议</param>
      <param name="package">包</param>
      <param name="maxSize">估计的包最大值，其作用是用于<see cref="T:TouchSocket.Core.ByteBlock" />的申请。</param>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.SendAsync(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16)">
      <summary>
            发送
            </summary>
      <param name="client"></param>
      <param name="protocol"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.SendAsync(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.SendAsync(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,System.Byte[])">
      <summary>
            发送
            </summary>
      <param name="client"></param>
      <param name="protocol"></param>
      <param name="buffer"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.SendAsync(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,System.Byte[])</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.SendAsync(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,TouchSocket.Core.IPackage)">
      <summary>
            发送估计小于64K的<see cref="T:TouchSocket.Core.IPackage" /></summary>
      <param name="client"></param>
      <param name="protocol">协议</param>
      <param name="package">包</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.SendAsync(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,TouchSocket.Core.IPackage)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.SendAsync(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,TouchSocket.Core.IPackage,System.Int32)">
      <summary>
            发送<see cref="T:TouchSocket.Core.IPackage" /></summary>
      <param name="client"></param>
      <param name="protocol">协议</param>
      <param name="package">包</param>
      <param name="maxSize">估计的包最大值，其作用是用于<see cref="T:TouchSocket.Core.ByteBlock" />的申请。</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.SendAsync(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,TouchSocket.Core.IPackage,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.ToResultCode(TouchSocket.Dmtp.ChannelStatus)">
      <summary>
            转为ResultCode
            </summary>
      <param name="channelStatus"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.ToResultCode(TouchSocket.Dmtp.ChannelStatus)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.TrySend(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16)">
      <summary>
            尝试发送
            </summary>
      <param name="client"></param>
      <param name="protocol"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.TrySend(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.TrySend(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,System.Byte[])">
      <summary>
            尝试发送
            </summary>
      <param name="client"></param>
      <param name="protocol"></param>
      <param name="buffer"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.TrySend(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,System.Byte[])</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.TrySend(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,System.Byte[],System.Int32,System.Int32)">
      <summary>
            尝试发送
            </summary>
      <param name="client"></param>
      <param name="protocol"></param>
      <param name="buffer"></param>
      <param name="offset"></param>
      <param name="length"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.TrySend(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.TrySend(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,TouchSocket.Core.ByteBlock)">
      <summary>
            尝试发送
            </summary>
      <param name="client"></param>
      <param name="protocol"></param>
      <param name="byteBlock"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.TrySend(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,TouchSocket.Core.ByteBlock)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.TrySend(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,TouchSocket.Core.IPackage)">
      <summary>
            发送估计小于64K的<see cref="T:TouchSocket.Core.IPackage" /></summary>
      <param name="client"></param>
      <param name="protocol">协议</param>
      <param name="package">包</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.TrySend(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,TouchSocket.Core.IPackage)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.TrySend(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,TouchSocket.Core.IPackage,System.Int32)">
      <summary>
            发送<see cref="T:TouchSocket.Core.IPackage" /></summary>
      <param name="client"></param>
      <param name="protocol">协议</param>
      <param name="package">包</param>
      <param name="maxSize">估计的包最大值，其作用是用于<see cref="T:TouchSocket.Core.ByteBlock" />的申请。</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.TrySend(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,TouchSocket.Core.IPackage,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.TrySendAsync(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16)">
      <summary>
            尝试发送
            </summary>
      <param name="client"></param>
      <param name="protocol"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.TrySendAsync(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.TrySendAsync(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,System.Byte[])">
      <summary>
            尝试发送
            </summary>
      <param name="client"></param>
      <param name="protocol"></param>
      <param name="buffer"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.TrySendAsync(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,System.Byte[])</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.TrySendAsync(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,System.Byte[],System.Int32,System.Int32)">
      <summary>
            尝试发送
            </summary>
      <param name="client"></param>
      <param name="protocol"></param>
      <param name="buffer"></param>
      <param name="offset"></param>
      <param name="length"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.TrySendAsync(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.TrySendAsync(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,TouchSocket.Core.IPackage)">
      <summary>
            发送估计小于64K的<see cref="T:TouchSocket.Core.IPackage" /></summary>
      <param name="client"></param>
      <param name="protocol">协议</param>
      <param name="package">包</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.TrySendAsync(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,TouchSocket.Core.IPackage)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.TrySendAsync(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,TouchSocket.Core.IPackage,System.Int32)">
      <summary>
            发送<see cref="T:TouchSocket.Core.IPackage" /></summary>
      <param name="client"></param>
      <param name="protocol">协议</param>
      <param name="package">包</param>
      <param name="maxSize">估计的包最大值，其作用是用于<see cref="T:TouchSocket.Core.ByteBlock" />的申请。</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.TrySendAsync(TouchSocket.Dmtp.IDmtpActorObject,System.UInt16,TouchSocket.Core.IPackage,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpActorExtension.TrySubscribeChannel(TouchSocket.Dmtp.IDmtpActorObject,System.Int32,TouchSocket.Dmtp.IDmtpChannel@)">
      <summary>
            尝试订阅已存在的通道。
            </summary>
      <param name="id"></param>
      <param name="channel"></param>
      <param name="client">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>client</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.TrySubscribeChannel(TouchSocket.Dmtp.IDmtpActorObject,System.Int32,TouchSocket.Dmtp.IDmtpChannel@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpActorExtension.TrySubscribeChannel(TouchSocket.Dmtp.IDmtpActorObject,System.Int32,TouchSocket.Dmtp.IDmtpChannel@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Dmtp.DmtpAdapter">
      <summary>
            DmtpAdapter
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpAdapter.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>TouchSocket.Dmtp.DmtpAdapter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpAdapter.CanSendRequestInfo">
      <summary>
    
            是否允许发送<see cref="T:TouchSocket.Core.IRequestInfo" />对象。
            
  </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpAdapter.CanSplicingSend">
      <summary>
            默认不支持拼接发送
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpAdapter.HeaderLength">
      <summary>
            固定包头的长度。
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.DmtpAdapter.MaxSplicing">
      <summary>
            最大拼接
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.DmtpChannelExtension">
      <summary>
            DmtpChannelExtension
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpChannelExtension.TryWrite(TouchSocket.Dmtp.IDmtpChannel,System.Byte[])">
      <summary>
            尝试写入
            </summary>
      <param name="channel">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>channel</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpChannelExtension.TryWrite(TouchSocket.Dmtp.IDmtpChannel,System.Byte[])</parameter>
          </include>
        </markup>
      </param>
      <param name="data">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>data</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpChannelExtension.TryWrite(TouchSocket.Dmtp.IDmtpChannel,System.Byte[])</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpChannelExtension.TryWrite(TouchSocket.Dmtp.IDmtpChannel,System.Byte[])</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpChannelExtension.TryWrite(TouchSocket.Dmtp.IDmtpChannel,System.Byte[],System.Int32,System.Int32)">
      <summary>
            尝试写入。
            </summary>
      <param name="channel">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>channel</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpChannelExtension.TryWrite(TouchSocket.Dmtp.IDmtpChannel,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="data">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>data</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpChannelExtension.TryWrite(TouchSocket.Dmtp.IDmtpChannel,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="offset">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offset</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpChannelExtension.TryWrite(TouchSocket.Dmtp.IDmtpChannel,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="length">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>length</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpChannelExtension.TryWrite(TouchSocket.Dmtp.IDmtpChannel,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpChannelExtension.TryWrite(TouchSocket.Dmtp.IDmtpChannel,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpChannelExtension.TryWriteAsync(TouchSocket.Dmtp.IDmtpChannel,System.Byte[])">
      <summary>
            异步尝试写入
            </summary>
      <param name="channel">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>channel</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpChannelExtension.TryWriteAsync(TouchSocket.Dmtp.IDmtpChannel,System.Byte[])</parameter>
          </include>
        </markup>
      </param>
      <param name="data">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>data</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpChannelExtension.TryWriteAsync(TouchSocket.Dmtp.IDmtpChannel,System.Byte[])</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpChannelExtension.TryWriteAsync(TouchSocket.Dmtp.IDmtpChannel,System.Byte[])</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpChannelExtension.TryWriteAsync(TouchSocket.Dmtp.IDmtpChannel,System.Byte[],System.Int32,System.Int32)">
      <summary>
            异步尝试写入
            </summary>
      <param name="channel">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>channel</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpChannelExtension.TryWriteAsync(TouchSocket.Dmtp.IDmtpChannel,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="data">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>data</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpChannelExtension.TryWriteAsync(TouchSocket.Dmtp.IDmtpChannel,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="offset">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offset</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpChannelExtension.TryWriteAsync(TouchSocket.Dmtp.IDmtpChannel,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="length">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>length</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpChannelExtension.TryWriteAsync(TouchSocket.Dmtp.IDmtpChannel,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpChannelExtension.TryWriteAsync(TouchSocket.Dmtp.IDmtpChannel,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpChannelExtension.Write(TouchSocket.Dmtp.IDmtpChannel,System.Byte[])">
      <summary>
            写入通道
            </summary>
      <param name="channel">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>channel</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpChannelExtension.Write(TouchSocket.Dmtp.IDmtpChannel,System.Byte[])</parameter>
          </include>
        </markup>
      </param>
      <param name="data">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>data</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpChannelExtension.Write(TouchSocket.Dmtp.IDmtpChannel,System.Byte[])</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpChannelExtension.WriteAsync(TouchSocket.Dmtp.IDmtpChannel,System.Byte[])">
      <summary>
            写入通道
            </summary>
      <param name="channel">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>channel</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpChannelExtension.WriteAsync(TouchSocket.Dmtp.IDmtpChannel,System.Byte[])</parameter>
          </include>
        </markup>
      </param>
      <param name="data">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>data</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpChannelExtension.WriteAsync(TouchSocket.Dmtp.IDmtpChannel,System.Byte[])</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpChannelExtension.WriteAsync(TouchSocket.Dmtp.IDmtpChannel,System.Byte[])</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Dmtp.DmtpConfigExtension">
      <summary>
            DmtpConfigExtensions
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpConfigExtension.BuildWithHttpDmtpClient``1(TouchSocket.Core.TouchSocketConfig)">
      <summary>
            构建<see cref="T:TouchSocket.Dmtp.IHttpDmtpClient" />类客户端，并连接
            </summary>
      <param name="config"></param>
      <typeparam name="TClient"></typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpConfigExtension.BuildWithHttpDmtpClient``1(TouchSocket.Core.TouchSocketConfig)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpConfigExtension.BuildWithHttpDmtpClient(TouchSocket.Core.TouchSocketConfig)">
      <summary>
            构建<see cref="T:TouchSocket.Dmtp.IHttpDmtpClient" />类客户端，并连接
            </summary>
      <param name="config"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpConfigExtension.BuildWithHttpDmtpClient(TouchSocket.Core.TouchSocketConfig)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpConfigExtension.BuildWithHttpDmtpService``1(TouchSocket.Core.TouchSocketConfig)">
      <summary>
            构建<see cref="T:TouchSocket.Dmtp.IHttpDmtpServiceBase" />类服务器，并启动。
            </summary>
      <param name="config"></param>
      <typeparam name="TService"></typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpConfigExtension.BuildWithHttpDmtpService``1(TouchSocket.Core.TouchSocketConfig)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpConfigExtension.BuildWithHttpDmtpService(TouchSocket.Core.TouchSocketConfig)">
      <summary>
            构建<see cref="T:TouchSocket.Dmtp.IHttpDmtpServiceBase" />类服务器，并启动。
            </summary>
      <param name="config"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpConfigExtension.BuildWithHttpDmtpService(TouchSocket.Core.TouchSocketConfig)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpConfigExtension.BuildWithTcpDmtpClient``1(TouchSocket.Core.TouchSocketConfig)">
      <summary>
            构建<see cref="T:TouchSocket.Dmtp.TcpDmtpClient" />类客户端，并连接
            </summary>
      <param name="config"></param>
      <typeparam name="TClient">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TClient</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpConfigExtension.BuildWithTcpDmtpClient``1(TouchSocket.Core.TouchSocketConfig)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpConfigExtension.BuildWithTcpDmtpClient``1(TouchSocket.Core.TouchSocketConfig)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpConfigExtension.BuildWithTcpDmtpClient(TouchSocket.Core.TouchSocketConfig)">
      <summary>
            构建<see cref="T:TouchSocket.Dmtp.TcpDmtpClient" />类客户端，并连接
            </summary>
      <param name="config"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpConfigExtension.BuildWithTcpDmtpClient(TouchSocket.Core.TouchSocketConfig)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpConfigExtension.BuildWithTcpDmtpService``1(TouchSocket.Core.TouchSocketConfig)">
      <summary>
            构建<see cref="T:TouchSocket.Dmtp.ITcpDmtpServiceBase" />类服务器，并启动。
            </summary>
      <param name="config"></param>
      <typeparam name="TService"></typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpConfigExtension.BuildWithTcpDmtpService``1(TouchSocket.Core.TouchSocketConfig)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpConfigExtension.BuildWithTcpDmtpService(TouchSocket.Core.TouchSocketConfig)">
      <summary>
            构建<see cref="T:TouchSocket.Dmtp.ITcpDmtpServiceBase" />类服务器，并启动。
            </summary>
      <param name="config"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpConfigExtension.BuildWithTcpDmtpService(TouchSocket.Core.TouchSocketConfig)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="F:TouchSocket.Dmtp.DmtpConfigExtension.DefaultIdProperty">
      <summary>
            默认使用Id。
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.DmtpConfigExtension.DmtpOptionProperty">
      <summary>
            设置Dmtp相关配置。
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.DmtpConfigExtension.MetadataProperty">
      <summary>
            DmtpClient连接时的元数据, 所需类型<see cref="T:TouchSocket.Core.Metadata" /></summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpConfigExtension.SetDefaultId(TouchSocket.Core.TouchSocketConfig,System.String)">
      <summary>
            设置默认的使用Id。仅在DmtpRpc组件适用。
            <para>
            使用该功能时，仅在服务器的Handshaking之后生效。且如果id重复，则会连接失败。
            </para></summary>
      <param name="config">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>config</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpConfigExtension.SetDefaultId(TouchSocket.Core.TouchSocketConfig,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpConfigExtension.SetDefaultId(TouchSocket.Core.TouchSocketConfig,System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpConfigExtension.SetDefaultId(TouchSocket.Core.TouchSocketConfig,System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpConfigExtension.SetDmtpOption(TouchSocket.Core.TouchSocketConfig,TouchSocket.Dmtp.DmtpOption)">
      <summary>
            设置Dmtp相关配置。
            </summary>
      <param name="config">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>config</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpConfigExtension.SetDmtpOption(TouchSocket.Core.TouchSocketConfig,TouchSocket.Dmtp.DmtpOption)</parameter>
          </include>
        </markup>
      </param>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpConfigExtension.SetDmtpOption(TouchSocket.Core.TouchSocketConfig,TouchSocket.Dmtp.DmtpOption)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpConfigExtension.SetDmtpOption(TouchSocket.Core.TouchSocketConfig,TouchSocket.Dmtp.DmtpOption)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpConfigExtension.SetMetadata(TouchSocket.Core.TouchSocketConfig,TouchSocket.Core.Metadata)">
      <summary>
            设置DmtpClient连接时的元数据
            <para>仅适用于DmtpClient系类</para></summary>
      <param name="config">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>config</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpConfigExtension.SetMetadata(TouchSocket.Core.TouchSocketConfig,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpConfigExtension.SetMetadata(TouchSocket.Core.TouchSocketConfig,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpConfigExtension.SetMetadata(TouchSocket.Core.TouchSocketConfig,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpConfigExtension.SetVerifyTimeout(TouchSocket.Core.TouchSocketConfig,System.Int32)">
      <summary>
            验证超时时间,默认为3000ms.
            </summary>
      <param name="config">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>config</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpConfigExtension.SetVerifyTimeout(TouchSocket.Core.TouchSocketConfig,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpConfigExtension.SetVerifyTimeout(TouchSocket.Core.TouchSocketConfig,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpConfigExtension.SetVerifyTimeout(TouchSocket.Core.TouchSocketConfig,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpConfigExtension.SetVerifyToken(TouchSocket.Core.TouchSocketConfig,System.String)">
      <summary>
            连接令箭，当为null或空时，重置为默认值“rrqm”
            </summary>
      <param name="config">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>config</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpConfigExtension.SetVerifyToken(TouchSocket.Core.TouchSocketConfig,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpConfigExtension.SetVerifyToken(TouchSocket.Core.TouchSocketConfig,System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpConfigExtension.SetVerifyToken(TouchSocket.Core.TouchSocketConfig,System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="F:TouchSocket.Dmtp.DmtpConfigExtension.VerifyTimeoutProperty">
      <summary>
            验证超时时间,默认为3000ms, 所需类型<see cref="T:System.Int32" /></summary>
    </member>
    <member name="F:TouchSocket.Dmtp.DmtpConfigExtension.VerifyTokenProperty">
      <summary>
            连接令箭,当为null或空时，重置为默认值“rrqm”, 所需类型<see cref="T:System.String" /></summary>
    </member>
    <member name="T:TouchSocket.Dmtp.DmtpFeatureExtension">
      <summary>
            DmtpFeatureExtension
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.DmtpHeartbeatPlugin">
      <summary>
            基于Dmtp的心跳插件。服务器和客户端均适用
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpHeartbeatPlugin.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>TouchSocket.Dmtp.DmtpHeartbeatPlugin</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpHeartbeatPlugin.OnDmtpHandshaked(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Dmtp.DmtpVerifyEventArgs)">
      <summary>
            在完成握手连接时。
            </summary>
      <param name="client">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>client</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpHeartbeatPlugin.OnDmtpHandshaked(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Dmtp.DmtpVerifyEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpHeartbeatPlugin.OnDmtpHandshaked(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Dmtp.DmtpVerifyEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpHeartbeatPlugin.OnDmtpHandshaked(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Dmtp.DmtpVerifyEventArgs)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Dmtp.DmtpMessage">
      <summary>
            Dmtp协议的消息。
            <para>|*2*|**4**|***************n***********|</para><para>|ProtocolFlags|Length|Data|</para><para>|ushort|int32|bytes|</para></summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpMessage.#ctor">
      <summary>
            Dmtp协议的消息。
            <para>|*2*|*2*|**4**|***************n***********|</para><para>|Head|ProtocolFlags|Length|Data|</para><para>|dm|ushort|int32|bytes|</para></summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpMessage.#ctor(System.UInt16)">
      <summary>
            Dmtp协议的消息。
            <para>|*2*|**4**|***************n***********|</para><para>|ProtocolFlags|Length|Data|</para><para>|ushort|int32|bytes|</para><param name="protocolFlags"></param></summary>
      <param name="protocolFlags">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>protocolFlags</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpMessage.#ctor(System.UInt16)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpMessage.BodyByteBlock">
      <summary>
            实际使用的Body数据。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpMessage.Build(TouchSocket.Core.ByteBlock)">
      <summary>
            构建数据到<see cref="T:TouchSocket.Core.ByteBlock" /></summary>
      <param name="byteBlock"></param>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpMessage.CreateFrom(System.ArraySegment{System.Byte})">
      <summary>
            从当前内存中解析出一个<see cref="T:TouchSocket.Dmtp.DmtpMessage" /><para>注意：
            <list type="number"><item>本解析只能解析一个完整消息。所以使用该方法时，请确认是否已经接收完成一个完整的<see cref="T:TouchSocket.Dmtp.DmtpMessage" />包。</item><item>本解析所得的<see cref="T:TouchSocket.Dmtp.DmtpMessage" />消息会脱离生命周期管理，所以需要手动释放。</item></list></para></summary>
      <param name="bytes"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpMessage.CreateFrom(System.ArraySegment{System.Byte})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpMessage.CreateFrom(TouchSocket.Core.ByteBlock)">
      <summary>
            从当前内存中解析出一个<see cref="T:TouchSocket.Dmtp.DmtpMessage" /><para>注意：
            <list type="number"><item>本解析只能解析一个完整消息。所以使用该方法时，请确认是否已经接收完成一个完整的<see cref="T:TouchSocket.Dmtp.DmtpMessage" />包。</item><item>本解析所得的<see cref="T:TouchSocket.Dmtp.DmtpMessage" />消息会脱离生命周期管理，所以需要手动释放。</item></list></para></summary>
      <param name="block"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpMessage.CreateFrom(TouchSocket.Core.ByteBlock)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpMessage.GetBodyString">
      <summary>
            将<see cref="P:TouchSocket.Dmtp.DmtpMessage.BodyByteBlock" />的有效数据转换为utf-8的字符串。
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpMessage.GetBodyString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="F:TouchSocket.Dmtp.DmtpMessage.Head">
      <summary>
            Head
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpMessage.MaxLength">
      <summary>
            构建数据时，指示内存池的申请长度。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpMessage.ProtocolFlags">
      <summary>
            协议标识
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpMessage.TouchSocket#Core#IFixedHeaderByteBlockRequestInfo#BodyLength">
      <summary>
            数据体长度
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpMessage.TouchSocket#Core#IFixedHeaderByteBlockRequestInfo#OnParsingBody(TouchSocket.Core.ByteBlock)">
      <summary>
            当收到数据，由框架封送有效载荷数据。
            <para>如果返回false，意味着放弃本次解析的所有数据，包括已经解析完成的Header</para></summary>
      <param name="byteBlock">载荷数据，注意：该字节块生命周期不受框架控制，请一定自行调用Dispose</param>
      <returns>是否成功有效</returns>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpMessage.TouchSocket#Core#IFixedHeaderByteBlockRequestInfo#OnParsingHeader(System.Byte[])">
      <summary>
            当收到数据，由框架封送固定协议头。
            <para>您需要在此函数中，解析自己的固定包头，并且对<see cref="P:TouchSocket.Core.IFixedHeaderByteBlockRequestInfo.BodyLength" />赋值后续数据的长度，然后返回True。</para><para>如果返回false，则意味着放弃本次解析</para></summary>
      <param name="header"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpMessage.TouchSocket#Core#IFixedHeaderByteBlockRequestInfo#OnParsingHeader(System.Byte[])</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Dmtp.DmtpMessageEventArgs">
      <summary>
            DmtpMessageEventArgs
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpMessageEventArgs.#ctor(TouchSocket.Dmtp.DmtpMessage)">
      <summary>
            DmtpMessageEventArgs
            </summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpMessageEventArgs.#ctor(TouchSocket.Dmtp.DmtpMessage)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpMessageEventArgs.DmtpMessage">
      <summary>
            Dmtp消息
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.DmtpOption">
      <summary>
            针对Dmtp的配置项
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpOption.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>TouchSocket.Dmtp.DmtpOption</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpOption.Id">
      <summary>
            连接时指定Id。
            <para>
            使用该功能时，仅在服务器的Handshaking之后生效。且如果id重复，则会连接失败。
            </para></summary>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpOption.Metadata">
      <summary>
            设置DmtpClient连接时的元数据
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpOption.VerifyTimeout">
      <summary>
            验证连接超时时间。仅用于服务器。意为：当服务器收到基础链接，在指定的时间内如果没有收到握手信息，则直接视为无效链接，直接断开。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpOption.VerifyToken">
      <summary>
            连接令箭
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.DmtpPluginManagerExtension">
      <summary>
            DmtpPluginManagerExtension
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpPluginManagerExtension.UseDmtpHeartbeat(TouchSocket.Core.IPluginManager)">
      <summary>
            DmtpRpc心跳。客户端、服务器均，但是一般建议仅客户端使用即可。
            <para>
            默认心跳每3秒进行一次。最大失败3次即判定为断开连接。
            </para></summary>
      <param name="pluginManager">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pluginManager</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpPluginManagerExtension.UseDmtpHeartbeat(TouchSocket.Core.IPluginManager)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpPluginManagerExtension.UseDmtpHeartbeat(TouchSocket.Core.IPluginManager)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Dmtp.DmtpRouteService">
      <summary>
            路由服务实现。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpRouteService.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>TouchSocket.Dmtp.DmtpRouteService</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpRouteService.FindDmtpActor">
      <summary>
    
            查找其他IDmtpActor
            
  </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.DmtpRouteServiceExtension">
      <summary>
            DmtpRouteServiceExtension
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpRouteServiceExtension.AddDmtpRouteService(TouchSocket.Core.IRegistrator)">
      <summary>
            添加Dmtp路由服务。
            </summary>
      <param name="registrator">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>registrator</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpRouteServiceExtension.AddDmtpRouteService(TouchSocket.Core.IRegistrator)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpRouteServiceExtension.AddDmtpRouteService(TouchSocket.Core.IRegistrator,System.Func{System.String,System.Threading.Tasks.Task{TouchSocket.Dmtp.IDmtpActor}})">
      <summary>
            添加基于设定委托的Dmtp路由服务。
            </summary>
      <param name="registrator">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>registrator</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpRouteServiceExtension.AddDmtpRouteService(TouchSocket.Core.IRegistrator,System.Func{System.String,System.Threading.Tasks.Task{TouchSocket.Dmtp.IDmtpActor}})</parameter>
          </include>
        </markup>
      </param>
      <param name="func">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>func</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpRouteServiceExtension.AddDmtpRouteService(TouchSocket.Core.IRegistrator,System.Func{System.String,System.Threading.Tasks.Task{TouchSocket.Dmtp.IDmtpActor}})</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpRouteServiceExtension.AddDmtpRouteService(TouchSocket.Core.IRegistrator,System.Func{System.String,TouchSocket.Dmtp.IDmtpActor})">
      <summary>
            添加基于设定委托的Dmtp路由服务。
            </summary>
      <param name="registrator">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>registrator</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpRouteServiceExtension.AddDmtpRouteService(TouchSocket.Core.IRegistrator,System.Func{System.String,TouchSocket.Dmtp.IDmtpActor})</parameter>
          </include>
        </markup>
      </param>
      <param name="action">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>action</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpRouteServiceExtension.AddDmtpRouteService(TouchSocket.Core.IRegistrator,System.Func{System.String,TouchSocket.Dmtp.IDmtpActor})</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:TouchSocket.Dmtp.DmtpUtility">
      <summary>
            DmtpUtility
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.DmtpUtility.Dmtp">
      <summary>
            Dmtp字符串
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpUtility.DmtpProtocol">
      <summary>
            Dmtp协议
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpUtility.IsDmtp(TouchSocket.Sockets.Protocol)">
      <summary>
            是否为Dmtp协议
            </summary>
      <param name="protocol">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>protocol</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpUtility.IsDmtp(TouchSocket.Sockets.Protocol)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.DmtpUtility.IsDmtp(TouchSocket.Sockets.Protocol)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Dmtp.DmtpVerifyEventArgs">
      <summary>
            连接验证
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.DmtpVerifyEventArgs.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>TouchSocket.Dmtp.DmtpVerifyEventArgs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpVerifyEventArgs.Id">
      <summary>
            设定的初始化Id。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpVerifyEventArgs.Metadata">
      <summary>
            元数据
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.DmtpVerifyEventArgs.Token">
      <summary>
            令箭
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.FlowOperator">
      <summary>
            关于具有流速的操作器。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FlowOperator.CompletedLength">
      <summary>
            已完成长度
            </summary>
      <returns></returns>
    </member>
    <member name="P:TouchSocket.Dmtp.FlowOperator.FlowGate">
      <summary>
            流量控制器。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FlowOperator.IsEnd">
      <summary>
            由<see cref="P:TouchSocket.Dmtp.FlowOperator.Result" />的结果，判断是否已结束操作。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FlowOperator.Length">
      <summary>
            数据源的全部长度。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FlowOperator.MaxSpeed">
      <summary>
            最大传输速度。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FlowOperator.Metadata">
      <summary>
            元数据
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FlowOperator.Progress">
      <summary>
            进度
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FlowOperator.Result">
      <summary>
            执行结果
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FlowOperator.Speed">
      <summary>
            从上次获取到此次获得的速度
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FlowOperator.Speed</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.FlowOperator.Timeout">
      <summary>
            超时时间，默认10*1000ms。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FlowOperator.Token">
      <summary>
            可取消令箭
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.HttpDmtpClient">
      <summary>
            HttpDmtpClient
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.HttpDmtpClient.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>TouchSocket.Dmtp.HttpDmtpClient</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.HttpDmtpClient.Close(System.String)">
      <summary>
            发送<see cref="T:TouchSocket.Dmtp.IDmtpActor" />关闭消息。
            </summary>
      <param name="msg"></param>
      <returns></returns>
    </member>
    <member name="M:TouchSocket.Dmtp.HttpDmtpClient.Connect(System.Int32,System.Threading.CancellationToken)">
      <summary>
            使用基于Http升级的协议，连接Dmtp服务器
            </summary>
      <param name="timeout">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeout</parameter>
            <parameter>M:TouchSocket.Dmtp.HttpDmtpClient.Connect(System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="token">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>token</parameter>
            <parameter>M:TouchSocket.Dmtp.HttpDmtpClient.Connect(System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <exception cref="T:System.Exception"></exception>
    </member>
    <member name="M:TouchSocket.Dmtp.HttpDmtpClient.ConnectAsync(System.Int32,System.Threading.CancellationToken)">
      <summary>
            异步使用基于Http升级的协议，连接Dmtp服务器
            </summary>
      <param name="timeout">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeout</parameter>
            <parameter>M:TouchSocket.Dmtp.HttpDmtpClient.ConnectAsync(System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="token">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>token</parameter>
            <parameter>M:TouchSocket.Dmtp.HttpDmtpClient.ConnectAsync(System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.HttpDmtpClient.ConnectAsync(System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.Exception"></exception>
    </member>
    <member name="P:TouchSocket.Dmtp.HttpDmtpClient.DmtpActor">
      <summary>
            提供Dmtp协议的最基础功能件
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.HttpDmtpClient.Id">
      <summary>
            本节点Id
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.HttpDmtpClient.IsHandshaked">
      <summary>
            只是当前客户端是否已经完成握手连接。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.HttpDmtpClient.ResetId(System.String)">
      <summary>
            重新设置Id,并且同步到对端
            </summary>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:TouchSocket.Dmtp.HttpDmtpClient.ResetId(System.String)</parameter>
          </include>
        </markup>
      </param>
      <exception cref="T:System.Exception"></exception>
    </member>
    <member name="M:TouchSocket.Dmtp.HttpDmtpClient.ResetIdAsync(System.String)">
      <summary>
            重新设置Id,并且同步到对端
            </summary>
      <param name="id"></param>
      <param name="newId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newId</parameter>
            <parameter>M:TouchSocket.Dmtp.HttpDmtpClient.ResetIdAsync(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.HttpDmtpClient.ResetIdAsync(System.String)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.Exception"></exception>
      <exception cref="T:System.TimeoutException"></exception>
    </member>
    <member name="T:TouchSocket.Dmtp.HttpDmtpService">
      <summary>
            HttpDmtpService
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.HttpDmtpService.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>TouchSocket.Dmtp.HttpDmtpService</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.HttpDmtpService`1">
      <summary>
            HttpDmtpService泛型类型
            </summary>
      <typeparam name="TClient"></typeparam>
    </member>
    <member name="M:TouchSocket.Dmtp.HttpDmtpService`1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>TouchSocket.Dmtp.HttpDmtpService`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.HttpDmtpService`1.VerifyToken">
      <summary>
            连接令箭
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.HttpDmtpSocketClient">
      <summary>
            Http服务器辅助类
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.HttpDmtpSocketClient.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>TouchSocket.Dmtp.HttpDmtpSocketClient</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.HttpDmtpSocketClient.Close(System.String)">
      <summary>
            关闭客户端。
            </summary>
      <param name="msg">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>msg</parameter>
            <parameter>M:TouchSocket.Dmtp.HttpDmtpSocketClient.Close(System.String)</parameter>
          </include>
        </markup>
      </param>
      <exception cref="T:System.Exception"></exception>
    </member>
    <member name="P:TouchSocket.Dmtp.HttpDmtpSocketClient.DmtpActor">
      <summary>
            提供Dmtp协议的最基础功能件
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.HttpDmtpSocketClient.IsHandshaked">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:TouchSocket.Dmtp.HttpDmtpSocketClient.IsHandshaked</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.HttpDmtpSocketClient.ResetId(System.String)">
      <summary>
            重新设置Id,并且同步到对端
            </summary>
      <param name="id"></param>
      <param name="newId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newId</parameter>
            <parameter>M:TouchSocket.Dmtp.HttpDmtpSocketClient.ResetId(System.String)</parameter>
          </include>
        </markup>
      </param>
      <exception cref="T:System.Exception"></exception>
    </member>
    <member name="M:TouchSocket.Dmtp.HttpDmtpSocketClient.ResetIdAsync(System.String)">
      <summary>
            重新设置Id,并且同步到对端
            </summary>
      <param name="id"></param>
      <param name="newId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newId</parameter>
            <parameter>M:TouchSocket.Dmtp.HttpDmtpSocketClient.ResetIdAsync(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.HttpDmtpSocketClient.ResetIdAsync(System.String)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.Exception"></exception>
      <exception cref="T:System.TimeoutException"></exception>
    </member>
    <member name="M:TouchSocket.Dmtp.HttpDmtpSocketClient.Send(System.Byte[],System.Int32,System.Int32)">
      <summary>
            不允许直接发送
            </summary>
      <param name="buffer">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>buffer</parameter>
            <parameter>M:TouchSocket.Dmtp.HttpDmtpSocketClient.Send(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="offset">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offset</parameter>
            <parameter>M:TouchSocket.Dmtp.HttpDmtpSocketClient.Send(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="length">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>length</parameter>
            <parameter>M:TouchSocket.Dmtp.HttpDmtpSocketClient.Send(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.HttpDmtpSocketClient.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>
            不允许直接发送
            </summary>
      <param name="transferBytes">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>transferBytes</parameter>
            <parameter>M:TouchSocket.Dmtp.HttpDmtpSocketClient.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.HttpDmtpSocketClient.SendAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>
            不允许直接发送
            </summary>
      <param name="buffer">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>buffer</parameter>
            <parameter>M:TouchSocket.Dmtp.HttpDmtpSocketClient.SendAsync(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="offset">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offset</parameter>
            <parameter>M:TouchSocket.Dmtp.HttpDmtpSocketClient.SendAsync(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="length">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>length</parameter>
            <parameter>M:TouchSocket.Dmtp.HttpDmtpSocketClient.SendAsync(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.HttpDmtpSocketClient.SendAsync(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.HttpDmtpSocketClient.SendAsync(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>
            不允许直接发送
            </summary>
      <param name="transferBytes">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>transferBytes</parameter>
            <parameter>M:TouchSocket.Dmtp.HttpDmtpSocketClient.SendAsync(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.HttpDmtpSocketClient.SendAsync(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.HttpDmtpSocketClient.VerifyTimeout">
      <summary>
            验证超时时间
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.HttpDmtpSocketClient.VerifyToken">
      <summary>
            连接令箭
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.IActor">
      <summary>
            IActor
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.IActor.DmtpActor">
      <summary>
            包含当前Actor的父容器。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.IActor.InputReceivedData(TouchSocket.Dmtp.DmtpMessage)">
      <summary>
            处理收到的消息。
            </summary>
      <param name="message"></param>
      <returns>当满足本协议时，应当返回<see langword="true" />，其他时候应该返回<see langword="false" />.</returns>
    </member>
    <member name="T:TouchSocket.Dmtp.IDmtpActor">
      <summary>
            提供Dmtp协议的最基础功能件
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.IDmtpActor.AllowRoute">
      <summary>
            是否允许支持路由数据。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.ChannelExisted(System.Int32)">
      <summary>
            判断指定Id的通道是否已经存在
            </summary>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.ChannelExisted(System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.ChannelExisted(System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.IDmtpActor.Client">
      <summary>
            包含当前功能件的宿主通讯端。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.CreateChannel(System.Int32,TouchSocket.Core.Metadata)">
      <summary>
            在当前对点创建一个指定Id的通道
            </summary>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.CreateChannel(System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <param name="metadata">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>metadata</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.CreateChannel(System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.CreateChannel(System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.CreateChannel(System.String,System.Int32,TouchSocket.Core.Metadata)">
      <summary>
            在指定路由点创建一个指定Id的通道
            </summary>
      <param name="targetId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>targetId</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.CreateChannel(System.String,System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.CreateChannel(System.String,System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <param name="metadata">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>metadata</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.CreateChannel(System.String,System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.CreateChannel(System.String,System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.CreateChannel(System.String,TouchSocket.Core.Metadata)">
      <summary>
            在指定路由点创建一个随机Id的通道
            </summary>
      <param name="targetId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>targetId</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.CreateChannel(System.String,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <param name="metadata">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>metadata</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.CreateChannel(System.String,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.CreateChannel(System.String,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.CreateChannel(TouchSocket.Core.Metadata)">
      <summary>
            在当前对点创建一个随机Id的通道
            </summary>
      <param name="metadata">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>metadata</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.CreateChannel(TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.CreateChannel(TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.CreateChannelAsync(System.Int32,TouchSocket.Core.Metadata)">
      <summary>
            在当前对点创建一个指定Id的通道
            </summary>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.CreateChannelAsync(System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <param name="metadata">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>metadata</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.CreateChannelAsync(System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.CreateChannelAsync(System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.CreateChannelAsync(System.String,System.Int32,TouchSocket.Core.Metadata)">
      <summary>
            在指定路由点创建一个指定Id的通道
            </summary>
      <param name="targetId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>targetId</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.CreateChannelAsync(System.String,System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.CreateChannelAsync(System.String,System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <param name="metadata">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>metadata</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.CreateChannelAsync(System.String,System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.CreateChannelAsync(System.String,System.Int32,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.CreateChannelAsync(System.String,TouchSocket.Core.Metadata)">
      <summary>
            在指定路由点创建一个随机Id的通道
            </summary>
      <param name="targetId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>targetId</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.CreateChannelAsync(System.String,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <param name="metadata">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>metadata</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.CreateChannelAsync(System.String,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.CreateChannelAsync(System.String,TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.CreateChannelAsync(TouchSocket.Core.Metadata)">
      <summary>
            在当前对点创建一个随机Id的通道
            </summary>
      <param name="metadata">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>metadata</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.CreateChannelAsync(TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.CreateChannelAsync(TouchSocket.Core.Metadata)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.IDmtpActor.Id">
      <summary>
            本节点Id
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.IDmtpActor.IsReliable">
      <summary>
            是否基于可靠协议构建。例如：基于Tcp则为<see langword="true" />，基于Udp则为<see langword="false" />。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.IDmtpActor.LastActiveTime">
      <summary>
            最后一次活动时间。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.IDmtpActor.Logger">
      <summary>
            日志
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.Ping(System.Int32)">
      <summary>
            向当前对点发送一个Ping报文，并且等待回应。
            </summary>
      <param name="timeout"></param>
      <returns>一般的，当返回<see langword="true" />时，则表明对点一定存在。而其他情况则返回<see langword="false" /></returns>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.Ping(System.String,System.Int32)">
      <summary>
            向指定路由点发送一个Ping报文，并且等待回应。
            </summary>
      <param name="targetId"></param>
      <param name="timeout"></param>
      <returns>一般的，当返回<see langword="true" />时，则表明对点一定存在。而其他情况则返回<see langword="false" /></returns>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.PingAsync(System.Int32)">
      <summary>
            向当前对点发送一个Ping报文，并且等待回应。
            </summary>
      <param name="timeout"></param>
      <returns>一般的，当返回<see langword="true" />时，则表明对点一定存在。而其他情况则返回<see langword="false" /></returns>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.PingAsync(System.String,System.Int32)">
      <summary>
            向指定路由点发送一个Ping报文，并且等待回应。
            </summary>
      <param name="targetId"></param>
      <param name="timeout"></param>
      <returns>一般的，当返回<see langword="true" />时，则表明对点一定存在。而其他情况则返回<see langword="false" /></returns>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.ResetId(System.String)">
      <summary>
            重新设置Id,并且同步到对端
            </summary>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.ResetId(System.String)</parameter>
          </include>
        </markup>
      </param>
      <exception cref="T:System.Exception"></exception>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.ResetIdAsync(System.String)">
      <summary>
            重新设置Id,并且同步到对端
            </summary>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.ResetIdAsync(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.ResetIdAsync(System.String)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.Exception"></exception>
      <exception cref="T:System.TimeoutException"></exception>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.Send(System.UInt16,System.Byte[],System.Int32,System.Int32)">
      <summary>
            发送字节
            </summary>
      <param name="protocol">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>protocol</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.Send(System.UInt16,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="buffer">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>buffer</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.Send(System.UInt16,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="offset">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offset</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.Send(System.UInt16,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="length">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>length</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.Send(System.UInt16,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.Send(System.UInt16,TouchSocket.Core.ByteBlock)">
      <summary>
            发送字节块
            </summary>
      <param name="protocol">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>protocol</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.Send(System.UInt16,TouchSocket.Core.ByteBlock)</parameter>
          </include>
        </markup>
      </param>
      <param name="byteBlock">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>byteBlock</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.Send(System.UInt16,TouchSocket.Core.ByteBlock)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.SendAsync(System.UInt16,System.Byte[],System.Int32,System.Int32)">
      <summary>
            异步发送字节
            </summary>
      <param name="protocol">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>protocol</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.SendAsync(System.UInt16,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="buffer">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>buffer</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.SendAsync(System.UInt16,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="offset">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offset</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.SendAsync(System.UInt16,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="length">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>length</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.SendAsync(System.UInt16,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.SendAsync(System.UInt16,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.SendAsync(System.UInt16,TouchSocket.Core.ByteBlock)">
      <summary>
            异步发送字节块
            </summary>
      <param name="protocol">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>protocol</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.SendAsync(System.UInt16,TouchSocket.Core.ByteBlock)</parameter>
          </include>
        </markup>
      </param>
      <param name="byteBlock">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>byteBlock</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.SendAsync(System.UInt16,TouchSocket.Core.ByteBlock)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.SendAsync(System.UInt16,TouchSocket.Core.ByteBlock)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.SendClose(System.String)">
      <summary>
            发送Close请求
            </summary>
      <param name="msg">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>msg</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.SendClose(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.SendClose(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.SendFastObject``1(System.UInt16,``0@)">
      <summary>
            以Fast序列化，发送小（64K）对象。接收方需要使用ReadObject读取对象。
            </summary>
      <param name="protocol">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>protocol</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.SendFastObject``1(System.UInt16,``0@)</parameter>
          </include>
        </markup>
      </param>
      <param name="obj">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.SendFastObject``1(System.UInt16,``0@)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.SendFastObject``1(System.UInt16,``0@)</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.SendPackage(System.UInt16,TouchSocket.Core.IPackage@)">
      <summary>
            以包发送小（64K）对象。接收方ReadPackage即可。
            </summary>
      <param name="protocol">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>protocol</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.SendPackage(System.UInt16,TouchSocket.Core.IPackage@)</parameter>
          </include>
        </markup>
      </param>
      <param name="package">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>package</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.SendPackage(System.UInt16,TouchSocket.Core.IPackage@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.SendString(System.UInt16,System.String)">
      <summary>
            发送以utf-8编码的字符串。
            </summary>
      <param name="protocol"></param>
      <param name="value"></param>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.SendStringAsync(System.UInt16,System.String)">
      <summary>
            发送以utf-8编码的字符串。
            </summary>
      <param name="protocol"></param>
      <param name="value"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.SendStringAsync(System.UInt16,System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.IDmtpActor.SyncRoot">
      <summary>
             获取可用于同步对当前的访问对象进行锁同步。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.TryFindDmtpActor(System.String)">
      <summary>
            尝试获取指定Id的DmtpActor。一般此方法仅在Service下有效。
            </summary>
      <param name="targetId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>targetId</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.TryFindDmtpActor(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.TryFindDmtpActor(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.TryRoute(TouchSocket.Dmtp.PackageRouterEventArgs)">
      <summary>
            尝试请求路由，触发路由相关插件。并在路由失败时向<see cref="P:TouchSocket.Core.MsgPermitEventArgs.Message" />中传递消息。
            </summary>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.TryRoute(TouchSocket.Dmtp.PackageRouterEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.TryRoute(TouchSocket.Dmtp.PackageRouterEventArgs)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpActor.TrySubscribeChannel(System.Int32,TouchSocket.Dmtp.IDmtpChannel@)">
      <summary>
            尝试订阅已存在的通道。
            </summary>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.TrySubscribeChannel(System.Int32,TouchSocket.Dmtp.IDmtpChannel@)</parameter>
          </include>
        </markup>
      </param>
      <param name="channel">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>channel</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.TrySubscribeChannel(System.Int32,TouchSocket.Dmtp.IDmtpChannel@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpActor.TrySubscribeChannel(System.Int32,TouchSocket.Dmtp.IDmtpChannel@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.IDmtpActor.WaitHandlePool">
      <summary>
            等待返回池
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.IDmtpActorObject">
      <summary>
            定义包含<see cref="T:TouchSocket.Dmtp.IDmtpActor" />成员的接口对象。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.IDmtpActorObject.DmtpActor">
      <summary>
            提供Dmtp协议的最基础功能件
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.IDmtpChannel">
      <summary>
            提供一个基于Dmtp协议的，可以独立读写的通道。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.IDmtpChannel.Available">
      <summary>
            具有可读数据的长度
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.IDmtpChannel.CacheCapacity">
      <summary>
            缓存容量
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpChannel.Cancel(System.String)">
      <summary>
            取消
            </summary>
      <param name="operationMes">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>operationMes</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpChannel.Cancel(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpChannel.CancelAsync(System.String)">
      <summary>
            异步取消
            </summary>
      <param name="operationMes">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>operationMes</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpChannel.CancelAsync(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpChannel.CancelAsync(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.IDmtpChannel.CanMoveNext">
      <summary>
            判断当前通道能否调用<see cref="M:TouchSocket.Dmtp.IDmtpChannel.MoveNext" /></summary>
    </member>
    <member name="P:TouchSocket.Dmtp.IDmtpChannel.CanWrite">
      <summary>
            能否写入
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpChannel.Complete(System.String)">
      <summary>
            完成操作
            </summary>
      <param name="operationMes">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>operationMes</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpChannel.Complete(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpChannel.CompleteAsync(System.String)">
      <summary>
            异步完成操作
            </summary>
      <param name="operationMes">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>operationMes</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpChannel.CompleteAsync(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpChannel.CompleteAsync(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpChannel.GetCurrent">
      <summary>
            获取当前的有效数据。在使用之后，请进行显式的<see cref="M:System.IDisposable.Dispose" />调用。
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpChannel.GetCurrent</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpChannel.HoldOn(System.String)">
      <summary>
            继续。
            <para>调用该指令时，接收方会跳出接收，但是通道依然可用，所以接收方需要重新调用<see cref="M:TouchSocket.Dmtp.IDmtpChannel.MoveNext" /></para></summary>
      <param name="operationMes"></param>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpChannel.HoldOnAsync(System.String)">
      <summary>
            异步调用继续
            </summary>
      <param name="operationMes">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>operationMes</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpChannel.HoldOnAsync(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpChannel.HoldOnAsync(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.IDmtpChannel.Id">
      <summary>
            通道Id
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.IDmtpChannel.LastOperationMes">
      <summary>
            最后一次操作时显示消息
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.IDmtpChannel.MaxSpeed">
      <summary>
            通道传输速度限制
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.IDmtpChannel.Metadata">
      <summary>
            元数据
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpChannel.MoveNext">
      <summary>
            转向下个元素
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpChannel.MoveNext</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpChannel.MoveNextAsync">
      <summary>
            转向下个元素
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpChannel.MoveNextAsync</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.IDmtpChannel.Status">
      <summary>
            状态
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.IDmtpChannel.TargetId">
      <summary>
            目的Id地址。仅当该通道由两个客户端打通时有效。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.IDmtpChannel.Timeout">
      <summary>
            超时时间，默认1000*10ms。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.IDmtpChannel.Using">
      <summary>
            是否被使用
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpChannel.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>
            写入通道
            </summary>
      <param name="data">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>data</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpChannel.Write(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="offset">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offset</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpChannel.Write(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="length">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>length</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpChannel.Write(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpChannel.WriteAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>
            写入通道
            </summary>
      <param name="data">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>data</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpChannel.WriteAsync(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="offset">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offset</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpChannel.WriteAsync(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="length">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>length</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpChannel.WriteAsync(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpChannel.WriteAsync(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Dmtp.IDmtpCreateChannelPlugin">
      <summary>
            IDmtpCreateChannelPlugin
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.IDmtpCreateChannelPlugin`1">
      <summary>
            IDmtpCreateChannelPlugin
            </summary>
      <typeparam name="TClient"></typeparam>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpCreateChannelPlugin`1.OnCreateChannel(`0,TouchSocket.Dmtp.CreateChannelEventArgs)">
      <summary>
            在完成握手连接时。
            </summary>
      <param name="client">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>client</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpCreateChannelPlugin`1.OnCreateChannel(`0,TouchSocket.Dmtp.CreateChannelEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpCreateChannelPlugin`1.OnCreateChannel(`0,TouchSocket.Dmtp.CreateChannelEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpCreateChannelPlugin`1.OnCreateChannel(`0,TouchSocket.Dmtp.CreateChannelEventArgs)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Dmtp.IDmtpFeature">
      <summary>
            Dmtp功能性组件接口
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.IDmtpFeature.ReserveProtocolSize">
      <summary>
            保留协议长度
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.IDmtpFeature.StartProtocol">
      <summary>
            起始协议
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.IDmtpHandshakedPlugin">
      <summary>
            IDmtpHandshakedPlugin
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.IDmtpHandshakedPlugin`1">
      <summary>
            IDmtpHandshakedPlugin
            </summary>
      <typeparam name="TClient"></typeparam>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpHandshakedPlugin`1.OnDmtpHandshaked(`0,TouchSocket.Dmtp.DmtpVerifyEventArgs)">
      <summary>
            在完成握手连接时。
            </summary>
      <param name="client">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>client</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpHandshakedPlugin`1.OnDmtpHandshaked(`0,TouchSocket.Dmtp.DmtpVerifyEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpHandshakedPlugin`1.OnDmtpHandshaked(`0,TouchSocket.Dmtp.DmtpVerifyEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpHandshakedPlugin`1.OnDmtpHandshaked(`0,TouchSocket.Dmtp.DmtpVerifyEventArgs)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Dmtp.IDmtpHandshakingPlugin">
      <summary>
            IDmtpHandshakingPlugin
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.IDmtpHandshakingPlugin`1">
      <summary>
            IDmtpHandshakingPlugin
            </summary>
      <typeparam name="TClient"></typeparam>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpHandshakingPlugin`1.OnDmtpHandshaking(`0,TouchSocket.Dmtp.DmtpVerifyEventArgs)">
      <summary>
            在Dmtp建立握手连接之前。
            </summary>
      <param name="client">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>client</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpHandshakingPlugin`1.OnDmtpHandshaking(`0,TouchSocket.Dmtp.DmtpVerifyEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpHandshakingPlugin`1.OnDmtpHandshaking(`0,TouchSocket.Dmtp.DmtpVerifyEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpHandshakingPlugin`1.OnDmtpHandshaking(`0,TouchSocket.Dmtp.DmtpVerifyEventArgs)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Dmtp.IDmtpReceivedPlugin">
      <summary>
            IDmtpReceivedPlugin
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.IDmtpReceivedPlugin`1">
      <summary>
            IDmtpPlugin
            </summary>
      <typeparam name="TClient">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TClient</parameter>
            <parameter>T:TouchSocket.Dmtp.IDmtpReceivedPlugin`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpReceivedPlugin`1.OnDmtpReceived(`0,TouchSocket.Dmtp.DmtpMessageEventArgs)">
      <summary>
            收到DmtpMessage数据
            </summary>
      <param name="client">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>client</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpReceivedPlugin`1.OnDmtpReceived(`0,TouchSocket.Dmtp.DmtpMessageEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpReceivedPlugin`1.OnDmtpReceived(`0,TouchSocket.Dmtp.DmtpMessageEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpReceivedPlugin`1.OnDmtpReceived(`0,TouchSocket.Dmtp.DmtpMessageEventArgs)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Dmtp.IDmtpRouteService">
      <summary>
            用于路由的服务接口
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.IDmtpRouteService.FindDmtpActor">
      <summary>
            查找其他IDmtpActor
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.IDmtpRoutingPlugin">
      <summary>
            IDmtpRoutingPlugin
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.IDmtpRoutingPlugin`1">
      <summary>
            IDmtpRoutingPlugin
            </summary>
      <typeparam name="TClient"></typeparam>
    </member>
    <member name="M:TouchSocket.Dmtp.IDmtpRoutingPlugin`1.OnDmtpRouting(`0,TouchSocket.Dmtp.PackageRouterEventArgs)">
      <summary>
            当需要转发路由包时
            </summary>
      <param name="client">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>client</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpRoutingPlugin`1.OnDmtpRouting(`0,TouchSocket.Dmtp.PackageRouterEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpRoutingPlugin`1.OnDmtpRouting(`0,TouchSocket.Dmtp.PackageRouterEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IDmtpRoutingPlugin`1.OnDmtpRouting(`0,TouchSocket.Dmtp.PackageRouterEventArgs)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Dmtp.IDmtpService">
      <summary>
            IDmtpService
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.IHttpDmtpClient">
      <summary>
            IHttpDmtpClient
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.IHttpDmtpClientBase">
      <summary>
            基于Dmtp协议的Http终端接口
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.IHttpDmtpService">
      <summary>
            IHttpDmtpService
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.IHttpDmtpService`1">
      <summary>
            IHttpDmtpService
            </summary>
      <typeparam name="TClient">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TClient</parameter>
            <parameter>T:TouchSocket.Dmtp.IHttpDmtpService`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="T:TouchSocket.Dmtp.IHttpDmtpServiceBase">
      <summary>
            IHttpDmtpServiceBase
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.IHttpDmtpSocketClient">
      <summary>
            IHttpDmtpSocketClient
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.IProtocolSecureService">
      <summary>
            协议安全服务，主要用于检测协议冲突的问题。
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.ITcpDmtpClient">
      <summary>
            基于Dmtp协议的Tcp客户端接口
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.ITcpDmtpClientBase">
      <summary>
            基于Dmtp协议的Tcp终端接口
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.ITcpDmtpService">
      <summary>
            ITcpDmtpService
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.ITcpDmtpService`1">
      <summary>
            ITcpDmtpService
            </summary>
      <typeparam name="TClient"></typeparam>
    </member>
    <member name="T:TouchSocket.Dmtp.ITcpDmtpServiceBase">
      <summary>
            ITcpDmtpServiceBase
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.ITcpDmtpSocketClient">
      <summary>
            ITcpDmtpSocketClient
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.IUdpDmtp">
      <summary>
            IUdpDmtpService
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.IUdpDmtpClient">
      <summary>
            UdpDmtp终端接口
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.IUdpDmtpClient.EndPoint">
      <summary>
            默认远程终结点。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.IUdpDmtpClient.UdpSession">
      <summary>
            默认通信的udp终端。
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.IWebSocketDmtpClient">
      <summary>
            IWebSocketDmtpClient
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.IWebSocketDmtpClient.ConnectAsync(System.Int32)">
      <summary>
            异步连接
            </summary>
      <param name="timeout">验证超时时间</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IWebSocketDmtpClient.ConnectAsync(System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.IWebSocketDmtpClient.ConnectAsync(System.Threading.CancellationToken,System.Int32)">
      <summary>
            异步连接
            </summary>
      <param name="token">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>token</parameter>
            <parameter>M:TouchSocket.Dmtp.IWebSocketDmtpClient.ConnectAsync(System.Threading.CancellationToken,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="timeout">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeout</parameter>
            <parameter>M:TouchSocket.Dmtp.IWebSocketDmtpClient.ConnectAsync(System.Threading.CancellationToken,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.IWebSocketDmtpClient.ConnectAsync(System.Threading.CancellationToken,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Dmtp.IWebSocketDmtpClientBase">
      <summary>
            基于WebSocket协议的Dmtp终端接口
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.IWebSocketDmtpClientBase.Id">
      <summary>
            客户端的Id
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.PackageRouterEventArgs">
      <summary>
            PackageRouterEventArgs
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.PackageRouterEventArgs.#ctor(TouchSocket.Dmtp.RouteType,TouchSocket.Core.RouterPackage)">
      <summary>
            PackageRouterEventArgs
            </summary>
      <param name="routerType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>routerType</parameter>
            <parameter>M:TouchSocket.Dmtp.PackageRouterEventArgs.#ctor(TouchSocket.Dmtp.RouteType,TouchSocket.Core.RouterPackage)</parameter>
          </include>
        </markup>
      </param>
      <param name="package">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>package</parameter>
            <parameter>M:TouchSocket.Dmtp.PackageRouterEventArgs.#ctor(TouchSocket.Dmtp.RouteType,TouchSocket.Core.RouterPackage)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:TouchSocket.Dmtp.PackageRouterEventArgs.Package">
      <summary>
            路由数据包。一般为不完全数据，仅包含基本的路由信息。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.PackageRouterEventArgs.RouterType">
      <summary>
            路由类型
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.RouteType">
      <summary>
            路由类型
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.RouteType.#ctor(System.String)">
      <summary>
            路由类型
            </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:TouchSocket.Dmtp.RouteType.#ctor(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="F:TouchSocket.Dmtp.RouteType.CreateChannel">
      <summary>
            创建通道路由包。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.RouteType.Equals(System.Object)">
      <summary>
    Indicates whether this instance and a specified object are equal.
  </summary>
      <param name="obj">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:TouchSocket.Dmtp.RouteType.Equals(System.Object)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.RouteType.Equals(System.Object)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.RouteType.GetHashCode">
      <summary>
    Returns the hash code for this instance.
  </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.RouteType.GetHashCode</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.RouteType.op_Equality(TouchSocket.Dmtp.RouteType,TouchSocket.Dmtp.RouteType)">
      <summary>
            判断RouteType是相等。
            </summary>
      <param name="a">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:TouchSocket.Dmtp.RouteType.op_Equality(TouchSocket.Dmtp.RouteType,TouchSocket.Dmtp.RouteType)</parameter>
          </include>
        </markup>
      </param>
      <param name="b">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:TouchSocket.Dmtp.RouteType.op_Equality(TouchSocket.Dmtp.RouteType,TouchSocket.Dmtp.RouteType)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.RouteType.op_Equality(TouchSocket.Dmtp.RouteType,TouchSocket.Dmtp.RouteType)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.RouteType.op_Inequality(TouchSocket.Dmtp.RouteType,TouchSocket.Dmtp.RouteType)">
      <summary>
            判断RouteType不相等。
            </summary>
      <param name="a">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:TouchSocket.Dmtp.RouteType.op_Inequality(TouchSocket.Dmtp.RouteType,TouchSocket.Dmtp.RouteType)</parameter>
          </include>
        </markup>
      </param>
      <param name="b">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:TouchSocket.Dmtp.RouteType.op_Inequality(TouchSocket.Dmtp.RouteType,TouchSocket.Dmtp.RouteType)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.RouteType.op_Inequality(TouchSocket.Dmtp.RouteType,TouchSocket.Dmtp.RouteType)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="F:TouchSocket.Dmtp.RouteType.Ping">
      <summary>
            一个Ping探测路由包
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.RouteType.PullFile">
      <summary>
            拉取文件的路由包
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.RouteType.PushFile">
      <summary>
            推送文件的路由包
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.RouteType.Rpc">
      <summary>
            Rpc调用的路由包
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.RouteType.ToString">
      <summary>
    Returns the fully qualified type name of this instance.
  </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.RouteType.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Dmtp.SealedDmtpActor">
      <summary>
            密封的<see cref="T:TouchSocket.Dmtp.DmtpActor" /></summary>
    </member>
    <member name="M:TouchSocket.Dmtp.SealedDmtpActor.#ctor(System.Boolean)">
      <summary>
            创建一个可靠协议的Dmtp协议的最基础功能件
            </summary>
      <param name="allowRoute"></param>
    </member>
    <member name="M:TouchSocket.Dmtp.SealedDmtpActor.#ctor(System.Boolean,System.Boolean)">
      <summary>
            创建一个Dmtp协议的最基础功能件
            </summary>
      <param name="allowRoute">是否允许路由</param>
      <param name="isReliable">是不是基于可靠协议运行的</param>
    </member>
    <member name="T:TouchSocket.Dmtp.TcpDmtpClient">
      <summary>
            TcpDmtpClient
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.TcpDmtpClient.#ctor">
      <summary>
            TcpDmtpClient
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.TcpDmtpClient.Close(System.String)">
      <summary>
            发送<see cref="T:TouchSocket.Dmtp.IDmtpActor" />关闭消息。
            </summary>
      <param name="msg"></param>
      <returns></returns>
    </member>
    <member name="M:TouchSocket.Dmtp.TcpDmtpClient.Connect(System.Int32,System.Threading.CancellationToken)">
      <summary>
            进行Dmtp协议的握手连接
            </summary>
      <param name="timeout">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeout</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpClient.Connect(System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="token">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>token</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpClient.Connect(System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.TcpDmtpClient.ConnectAsync(System.Int32,System.Threading.CancellationToken)">
      <summary>
            异步进行Dmtp协议的握手连接
            </summary>
      <param name="timeout">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeout</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpClient.ConnectAsync(System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="token">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>token</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpClient.ConnectAsync(System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpClient.ConnectAsync(System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.TcpDmtpClient.DmtpActor">
      <summary>
            提供Dmtp协议的最基础功能件
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.TcpDmtpClient.Id">
      <summary>
            本节点Id
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.TcpDmtpClient.IsHandshaked">
      <summary>
            只是当前客户端是否已经完成握手连接。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.TcpDmtpClient.ResetId(System.String)">
      <summary>
            重新设置Id,并且同步到对端
            </summary>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpClient.ResetId(System.String)</parameter>
          </include>
        </markup>
      </param>
      <exception cref="T:System.Exception"></exception>
    </member>
    <member name="M:TouchSocket.Dmtp.TcpDmtpClient.ResetIdAsync(System.String)">
      <summary>
            重新设置Id,并且同步到对端
            </summary>
      <param name="id"></param>
      <param name="newId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newId</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpClient.ResetIdAsync(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpClient.ResetIdAsync(System.String)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.Exception"></exception>
      <exception cref="T:System.TimeoutException"></exception>
    </member>
    <member name="M:TouchSocket.Dmtp.TcpDmtpClient.Send(System.Byte[],System.Int32,System.Int32)">
      <summary>
            不允许直接发送
            </summary>
      <param name="buffer">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>buffer</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpClient.Send(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="offset">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offset</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpClient.Send(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="length">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>length</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpClient.Send(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.TcpDmtpClient.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>
            不允许直接发送
            </summary>
      <param name="transferBytes">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>transferBytes</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpClient.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.TcpDmtpClient.SendAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>
            不允许直接发送
            </summary>
      <param name="buffer">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>buffer</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpClient.SendAsync(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="offset">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offset</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpClient.SendAsync(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="length">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>length</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpClient.SendAsync(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpClient.SendAsync(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.TcpDmtpClient.SendAsync(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>
            不允许直接发送
            </summary>
      <param name="transferBytes">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>transferBytes</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpClient.SendAsync(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpClient.SendAsync(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Dmtp.TcpDmtpService">
      <summary>
            TcpDmtpService
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.TcpDmtpService.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>TouchSocket.Dmtp.TcpDmtpService</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.TcpDmtpService`1">
      <summary>
            TcpDmtpService泛型类型
            </summary>
      <typeparam name="TClient"></typeparam>
    </member>
    <member name="M:TouchSocket.Dmtp.TcpDmtpService`1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>TouchSocket.Dmtp.TcpDmtpService`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.TcpDmtpService`1.VerifyToken">
      <summary>
            连接令箭
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.TcpDmtpSocketClient">
      <summary>
            TcpDmtpSocketClient
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.TcpDmtpSocketClient.#ctor">
      <summary>
            TcpDmtpSocketClient
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.TcpDmtpSocketClient.Close(System.String)">
      <summary>
            发送<see cref="T:TouchSocket.Dmtp.IDmtpActor" />关闭消息。
            </summary>
      <param name="msg"></param>
      <returns></returns>
    </member>
    <member name="P:TouchSocket.Dmtp.TcpDmtpSocketClient.DmtpActor">
      <summary>
            提供Dmtp协议的最基础功能件
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.TcpDmtpSocketClient.IsHandshaked">
      <summary>
            只是当前客户端是否已经完成握手连接。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.TcpDmtpSocketClient.ResetId(System.String)">
      <summary>
            重新设置Id,并且同步到对端
            </summary>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpSocketClient.ResetId(System.String)</parameter>
          </include>
        </markup>
      </param>
      <exception cref="T:System.Exception"></exception>
    </member>
    <member name="M:TouchSocket.Dmtp.TcpDmtpSocketClient.ResetIdAsync(System.String)">
      <summary>
            重新设置Id,并且同步到对端
            </summary>
      <param name="id"></param>
      <param name="newId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newId</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpSocketClient.ResetIdAsync(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpSocketClient.ResetIdAsync(System.String)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.Exception"></exception>
      <exception cref="T:System.TimeoutException"></exception>
    </member>
    <member name="M:TouchSocket.Dmtp.TcpDmtpSocketClient.Send(System.Byte[],System.Int32,System.Int32)">
      <summary>
            不允许直接发送
            </summary>
      <param name="buffer">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>buffer</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpSocketClient.Send(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="offset">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offset</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpSocketClient.Send(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="length">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>length</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpSocketClient.Send(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.TcpDmtpSocketClient.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>
            不允许直接发送
            </summary>
      <param name="transferBytes">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>transferBytes</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpSocketClient.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.TcpDmtpSocketClient.SendAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>
            不允许直接发送
            </summary>
      <param name="buffer">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>buffer</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpSocketClient.SendAsync(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="offset">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offset</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpSocketClient.SendAsync(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="length">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>length</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpSocketClient.SendAsync(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpSocketClient.SendAsync(System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.TcpDmtpSocketClient.SendAsync(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>
            不允许直接发送
            </summary>
      <param name="transferBytes">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>transferBytes</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpSocketClient.SendAsync(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.TcpDmtpSocketClient.SendAsync(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.TcpDmtpSocketClient.VerifyTimeout">
      <summary>
            验证超时时间,默认为3000ms
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.TcpDmtpSocketClient.VerifyToken">
      <summary>
            连接令箭
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.TokenVerifyException">
      <summary>
            Token验证异常
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.TokenVerifyException.#ctor">
      <summary>
            构造函数
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.TokenVerifyException.#ctor(System.String)">
      <summary>
            构造函数
            </summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:TouchSocket.Dmtp.TokenVerifyException.#ctor(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.TokenVerifyException.#ctor(System.String,System.Exception)">
      <summary>
            构造函数
            </summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:TouchSocket.Dmtp.TokenVerifyException.#ctor(System.String,System.Exception)</parameter>
          </include>
        </markup>
      </param>
      <param name="inner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>inner</parameter>
            <parameter>M:TouchSocket.Dmtp.TokenVerifyException.#ctor(System.String,System.Exception)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:TouchSocket.Dmtp.UdpDmtp">
      <summary>
            UdpDmtpService
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.UdpDmtp.#ctor">
      <summary>
            构造函数
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.UdpDmtp.DmtpActor">
      <summary>
            提供Dmtp协议的最基础功能件
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.UdpDmtp.GetUdpDmtpClient(System.Net.EndPoint)">
      <summary>
            通过终结点获取<see cref="T:TouchSocket.Dmtp.IUdpDmtpClient" /></summary>
      <param name="endPoint"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.UdpDmtp.GetUdpDmtpClient(System.Net.EndPoint)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Dmtp.WaitPing">
      <summary>
            WaitPing
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.WaitPing.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>TouchSocket.Dmtp.WaitPing</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.WaitSetId">
      <summary>
            设置Id
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.WaitSetId.#ctor(System.String,System.String)">
      <summary>
            构造函数
            </summary>
      <param name="oldId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>oldId</parameter>
            <parameter>M:TouchSocket.Dmtp.WaitSetId.#ctor(System.String,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="newId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newId</parameter>
            <parameter>M:TouchSocket.Dmtp.WaitSetId.#ctor(System.String,System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:TouchSocket.Dmtp.WaitSetId.NewId">
      <summary>
            新Id
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.WaitSetId.OldId">
      <summary>
            旧Id
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.WaitVerify">
      <summary>
            验证消息
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.WaitVerify.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>TouchSocket.Dmtp.WaitVerify</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.WaitVerify.Id">
      <summary>
            Id
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.WaitVerify.Metadata">
      <summary>
            元数据
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.WaitVerify.Token">
      <summary>
            令箭
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.WebSocketDmtpClient">
      <summary>
            WebSocketDmtpClient
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.WebSocketDmtpClient.#ctor">
      <summary>
            WebSocketDmtpClient
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.WebSocketDmtpClient.CanSend">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:TouchSocket.Dmtp.WebSocketDmtpClient.CanSend</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.WebSocketDmtpClient.ClearReceiver">
      <summary>
            不支持该功能
            </summary>
      <exception cref="T:System.NotSupportedException"></exception>
    </member>
    <member name="M:TouchSocket.Dmtp.WebSocketDmtpClient.Close(System.String)">
      <summary>
            发送<see cref="T:TouchSocket.Dmtp.IDmtpActor" />关闭消息。
            </summary>
      <param name="msg"></param>
      <returns></returns>
    </member>
    <member name="M:TouchSocket.Dmtp.WebSocketDmtpClient.ConnectAsync(System.Int32)">
      <summary>
            异步连接
            </summary>
      <param name="timeout">验证超时时间</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.WebSocketDmtpClient.ConnectAsync(System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.WebSocketDmtpClient.ConnectAsync(System.Threading.CancellationToken,System.Int32)">
      <summary>
            异步连接
            </summary>
      <param name="token">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>token</parameter>
            <parameter>M:TouchSocket.Dmtp.WebSocketDmtpClient.ConnectAsync(System.Threading.CancellationToken,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="timeout">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeout</parameter>
            <parameter>M:TouchSocket.Dmtp.WebSocketDmtpClient.ConnectAsync(System.Threading.CancellationToken,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.WebSocketDmtpClient.ConnectAsync(System.Threading.CancellationToken,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.WebSocketDmtpClient.CreateReceiver">
      <summary>
            不支持该功能
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.WebSocketDmtpClient.CreateReceiver</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.NotSupportedException"></exception>
    </member>
    <member name="P:TouchSocket.Dmtp.WebSocketDmtpClient.Disconnected">
      <summary>
            断开连接
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.WebSocketDmtpClient.DmtpActor">
      <summary>
            提供Dmtp协议的最基础功能件
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.WebSocketDmtpClient.Id">
      <summary>
            客户端的Id
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.WebSocketDmtpClient.IsHandshaked">
      <summary>
            只是当前客户端是否已经完成握手连接。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.WebSocketDmtpClient.LastReceivedTime">
      <summary>
            最后一次接收到数据的时间
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.WebSocketDmtpClient.LastSendTime">
      <summary>
            最后一次发送数据的时间
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.WebSocketDmtpClient.Ping(System.Int32)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:TouchSocket.Dmtp.WebSocketDmtpClient.Ping(System.Int32)</parameter>
          </include>
        </markup>
      </summary>
      <param name="timeout">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeout</parameter>
            <parameter>M:TouchSocket.Dmtp.WebSocketDmtpClient.Ping(System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.WebSocketDmtpClient.Ping(System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.WebSocketDmtpClient.Ping(System.String,System.Int32)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:TouchSocket.Dmtp.WebSocketDmtpClient.Ping(System.String,System.Int32)</parameter>
          </include>
        </markup>
      </summary>
      <param name="targetId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>targetId</parameter>
            <parameter>M:TouchSocket.Dmtp.WebSocketDmtpClient.Ping(System.String,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="timeout">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeout</parameter>
            <parameter>M:TouchSocket.Dmtp.WebSocketDmtpClient.Ping(System.String,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.WebSocketDmtpClient.Ping(System.String,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.WebSocketDmtpClient.Protocol">
      <summary>
            终端协议
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.WebSocketDmtpClient.RemoteIPHost">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:TouchSocket.Dmtp.WebSocketDmtpClient.RemoteIPHost</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.WebSocketDmtpClient.ResetId(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:TouchSocket.Dmtp.WebSocketDmtpClient.ResetId(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="newId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newId</parameter>
            <parameter>M:TouchSocket.Dmtp.WebSocketDmtpClient.ResetId(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor">
      <summary>
            能够基于Dmtp协议提供文件传输功能
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.#ctor(TouchSocket.Dmtp.IDmtpActor)">
      <summary>
            创建一个<see cref="T:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor" /></summary>
      <param name="dmtpActor"></param>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.DmtpActor">
      <summary>
            包含当前Actor的父容器。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.FileController">
      <summary>
            文件资源访问接口。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.FinishedFileResourceInfo(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            请求完成一个资源。
            <para>如果是Push，当正常返回时，则说明整个过程已完成。</para><para>如果是Pull，当正常返回时，则说明服务器对于这个过程已完成，后续还需要再<see cref="M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.TryFinished" />。</para></summary>
      <param name="targetId">目标客户端Id</param>
      <param name="fileResourceInfo">文件资源信息</param>
      <param name="code">状态代码</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.FinishedFileResourceInfo(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.FinishedFileResourceInfo(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            请求完成一个资源。
            <para>如果是Push，当正常返回时，则说明整个过程已完成。</para><para>如果是Pull，当正常返回时，则说明服务器对于这个过程已完成，后续还需要再<see cref="M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.TryFinished" />。</para></summary>
      <param name="fileResourceInfo">文件资源信息</param>
      <param name="code">状态代码</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.FinishedFileResourceInfo(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.FinishedFileResourceInfoAsync(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            请求完成一个资源。
            <para>如果是Push，当正常返回时，则说明整个过程已完成。</para><para>如果是Pull，当正常返回时，则说明服务器对于这个过程已完成，后续还需要再<see cref="M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.TryFinished" />。</para></summary>
      <param name="targetId">目标客户端Id</param>
      <param name="fileResourceInfo">文件资源信息</param>
      <param name="code">状态代码</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.FinishedFileResourceInfoAsync(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.FinishedFileResourceInfoAsync(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            请求完成一个资源。
            <para>如果是Push，当正常返回时，则说明整个过程已完成。</para><para>如果是Pull，当正常返回时，则说明服务器对于这个过程已完成，后续还需要再<see cref="M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.TryFinished" />。</para></summary>
      <param name="fileResourceInfo">文件资源信息</param>
      <param name="code">状态代码</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.FinishedFileResourceInfoAsync(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.InputReceivedData(TouchSocket.Dmtp.DmtpMessage)">
      <summary>
            处理收到的消息。
            </summary>
      <param name="message"></param>
      <returns>当满足本协议时，应当返回<see langword="true" />，其他时候应该返回<see langword="false" />.</returns>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.MaxSmallFileLength">
      <summary>
            允许传输的小文件的最大长度。默认1024*1024字节。
            <para>注意，当调整该值时，应该和对端保持一致。</para></summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.OnFileTransfered">
      <summary>
            当文件传输结束之后。并不意味着完成传输，请通过<see cref="P:TouchSocket.Dmtp.FileTransfer.FileTransferedEventArgs.Result" />属性值进行判断。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.OnFileTransfering">
      <summary>
            在文件传输即将进行时触发。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PullFileResourceInfo(System.String,System.String,TouchSocket.Core.Metadata,System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>
            拉取文件信息。
            <para>注意：</para><list type="number"><item>完成该操作后，必须在设定时间（60秒）内至少完成一次文件块访问，不然该信息将变得无效，</item><item>每次该操作，都应该对应一次<see cref="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.FinishedFileResourceInfo(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)" /></item></list></summary>
      <param name="targetId">目标客户端Id</param>
      <param name="path">资源路径</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="fileSectionSize">文件分块尺寸。</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PullFileResourceInfo(System.String,System.String,TouchSocket.Core.Metadata,System.Int32,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PullFileResourceInfo(System.String,TouchSocket.Core.Metadata,System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>
            拉取文件信息。
            <para>注意：</para><list type="number"><item>完成该操作后，必须在设定时间（60秒）内至少完成一次文件块访问，不然该信息将变得无效，</item><item>每次该操作，都应该对应一次<see cref="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.FinishedFileResourceInfo(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)" /></item></list></summary>
      <param name="path">资源路径</param>
      <param name="metadata">元数据</param>
      <param name="fileSectionSize">文件分块尺寸</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PullFileResourceInfo(System.String,TouchSocket.Core.Metadata,System.Int32,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PullFileResourceInfoAsync(System.String,System.String,TouchSocket.Core.Metadata,System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>
            拉取文件信息。
            <para>注意：</para><list type="number"><item>完成该操作后，必须在设定时间（60秒）内至少完成一次文件块访问，不然该信息将变得无效，</item><item>每次该操作，都应该对应一次<see cref="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.FinishedFileResourceInfo(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)" /></item></list></summary>
      <param name="targetId">目标客户端Id</param>
      <param name="path">资源路径</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="fileSectionSize">文件分块尺寸。</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PullFileResourceInfoAsync(System.String,System.String,TouchSocket.Core.Metadata,System.Int32,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PullFileResourceInfoAsync(System.String,TouchSocket.Core.Metadata,System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>
            拉取文件信息。
            <para>注意：</para><list type="number"><item>完成该操作后，必须在设定时间（60秒）内至少完成一次文件块访问，不然该信息将变得无效，</item><item>每次该操作，都应该对应一次<see cref="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.FinishedFileResourceInfo(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)" /></item></list></summary>
      <param name="path">资源路径</param>
      <param name="metadata">元数据</param>
      <param name="fileSectionSize">文件分块尺寸</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PullFileResourceInfoAsync(System.String,TouchSocket.Core.Metadata,System.Int32,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PullFileSection(System.String,TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)">
      <summary>
            拉取文件块。
            <para>注意：拉取文件块时，两个成功块之间的时间应该在设定时间（60秒）内完成。</para></summary>
      <param name="targetId">目标客户端Id</param>
      <param name="fileSection">文件块</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PullFileSection(System.String,TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PullFileSection(TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)">
      <summary>
            拉取文件块。
            <para>注意：拉取文件块时，两个成功块之间的时间应该在设定时间（60秒）内完成。</para></summary>
      <param name="fileSection">文件块</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PullFileSection(TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PullFileSectionAsync(System.String,TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)">
      <summary>
            拉取文件块。
            <para>注意：拉取文件块时，两个成功块之间的时间应该在设定时间（60秒）内完成。</para></summary>
      <param name="targetId">目标客户端Id</param>
      <param name="fileSection">文件块</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PullFileSectionAsync(System.String,TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PullFileSectionAsync(TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)">
      <summary>
            拉取文件块。
            <para>注意：拉取文件块时，两个成功块之间的时间应该在设定时间（60秒）内完成。</para></summary>
      <param name="fileSection">文件块</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PullFileSectionAsync(TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PullSmallFile(System.String,System.String,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            拉取小文件。默认设置1024*1024字节大小。
            </summary>
      <param name="targetId">目标客户端Id</param>
      <param name="path">请求路径</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PullSmallFile(System.String,System.String,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PullSmallFile(System.String,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            拉取小文件。默认设置1024*1024字节大小。
            </summary>
      <param name="path">请求路径</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PullSmallFile(System.String,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PullSmallFileAsync(System.String,System.String,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            拉取小文件。默认设置1024*1024字节大小。
            </summary>
      <param name="targetId">目标客户端Id</param>
      <param name="path">请求路径</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PullSmallFileAsync(System.String,System.String,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PullSmallFileAsync(System.String,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            拉取小文件。默认设置1024*1024字节大小。
            </summary>
      <param name="path">请求路径</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PullSmallFileAsync(System.String,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PushFileResourceInfo(System.String,System.String,TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            推送文件信息。
            <para>注意：</para><list type="number"><item>完成该操作后，必须在设定时间（60秒）内至少完成一次文件块访问，不然该信息将变得无效，</item><item>每次该操作，都必须对应一次<see cref="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.FinishedFileResourceInfo(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)" /></item></list></summary>
      <param name="targetId">目标客户端Id</param>
      <param name="savePath">保存路径</param>
      <param name="fileResourceLocator">文件资源定位器</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PushFileResourceInfo(System.String,System.String,TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PushFileResourceInfo(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            推送文件信息。
            <para>注意：</para><list type="number"><item>完成该操作后，必须在设定时间（60秒）内至少完成一次文件块访问，不然该信息将变得无效，</item><item>每次该操作，都必须对应一次<see cref="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.FinishedFileResourceInfo(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)" /></item></list></summary>
      <param name="savePath">保存路径</param>
      <param name="fileResourceLocator">文件资源定位器</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PushFileResourceInfo(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PushFileResourceInfoAsync(System.String,System.String,TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            推送文件信息。
            <para>注意：</para><list type="number"><item>完成该操作后，必须在设定时间（60秒）内至少完成一次文件块访问，不然该信息将变得无效，</item><item>每次该操作，都必须对应一次<see cref="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.FinishedFileResourceInfo(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)" /></item></list></summary>
      <param name="targetId">目标客户端Id</param>
      <param name="savePath">保存路径</param>
      <param name="fileResourceLocator">文件资源定位器</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PushFileResourceInfoAsync(System.String,System.String,TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PushFileResourceInfoAsync(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            推送文件信息。
            <para>注意：</para><list type="number"><item>完成该操作后，必须在设定时间（60秒）内至少完成一次文件块访问，不然该信息将变得无效，</item><item>每次该操作，都必须对应一次<see cref="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.FinishedFileResourceInfo(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)" /></item></list></summary>
      <param name="savePath">保存路径</param>
      <param name="fileResourceLocator">文件资源定位器</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PushFileResourceInfoAsync(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PushFileSection(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)">
      <summary>
            推送文件块。
            <para>注意：推送文件块时，两个成功块之间的时间应该在设定时间（60秒）内完成。</para></summary>
      <param name="targetId">目标客户端Id</param>
      <param name="fileResourceLocator">文件资源定位器</param>
      <param name="fileSection">文件块</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PushFileSection(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PushFileSection(TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)">
      <summary>
            推送文件块。
            <para>注意：推送文件块时，两个成功块之间的时间应该在设定时间（60秒）内完成。</para></summary>
      <param name="fileResourceLocator">文件资源定位器</param>
      <param name="fileSection">文件块</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PushFileSection(TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PushFileSectionAsync(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)">
      <summary>
            推送文件块。
            <para>注意：推送文件块时，两个成功块之间的时间应该在设定时间（60秒）内完成。</para></summary>
      <param name="targetId">目标客户端Id</param>
      <param name="fileResourceLocator">文件资源定位器</param>
      <param name="fileSection">文件块</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PushFileSectionAsync(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PushFileSectionAsync(TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)">
      <summary>
            推送文件块。
            <para>注意：推送文件块时，两个成功块之间的时间应该在设定时间（60秒）内完成。</para></summary>
      <param name="fileResourceLocator">文件资源定位器</param>
      <param name="fileSection">文件块</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PushFileSectionAsync(TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PushSmallFile(System.String,System.IO.FileInfo,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            推送小文件到特定的Id。默认设置1024*1024字节大小。
            </summary>
      <param name="savePath">保存路径</param>
      <param name="fileInfo">推送的文件信息</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PushSmallFile(System.String,System.IO.FileInfo,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PushSmallFile(System.String,System.String,System.IO.FileInfo,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            推送小文件到特定的Id。默认设置1024*1024字节大小。
            </summary>
      <param name="targetId">目标客户端Id</param>
      <param name="savePath">保存路径</param>
      <param name="fileInfo">推送的文件信息</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PushSmallFile(System.String,System.String,System.IO.FileInfo,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PushSmallFileAsync(System.String,System.IO.FileInfo,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            推送小文件。默认设置1024*1024字节大小。
            </summary>
      <param name="savePath">保存路径</param>
      <param name="fileInfo">推送的文件信息</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PushSmallFileAsync(System.String,System.IO.FileInfo,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PushSmallFileAsync(System.String,System.String,System.IO.FileInfo,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            推送小文件。默认设置1024*1024字节大小。
            </summary>
      <param name="targetId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>targetId</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PushSmallFileAsync(System.String,System.String,System.IO.FileInfo,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="savePath">保存路径</param>
      <param name="fileInfo">推送的文件信息</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.PushSmallFileAsync(System.String,System.String,System.IO.FileInfo,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.RootPath">
      <summary>
            文件传输的根路径
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.SetProtocolFlags(System.UInt16)">
      <summary>
            设置处理协议标识的起始标识。默认为30；
            </summary>
      <param name="start">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>start</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActor.SetProtocolFlags(System.UInt16)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension">
      <summary>
            DmtpFileTransferActorExtension
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.DmtpFileTransferActorProperty">
      <summary>
            DmtpFileTransferActor
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.GetDmtpFileTransferActor(TouchSocket.Dmtp.IDmtpActor)">
      <summary>
            从<see cref="T:TouchSocket.Dmtp.DmtpActor" />中获取<see cref="T:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor" /></summary>
      <param name="dmtpActor"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.GetDmtpFileTransferActor(TouchSocket.Dmtp.IDmtpActor)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.GetDmtpFileTransferActor(TouchSocket.Dmtp.IDmtpActorObject)">
      <summary>
            从<see cref="T:TouchSocket.Dmtp.IDmtpActorObject" />中获取能实现文件传输的<see cref="T:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor" /></summary>
      <param name="client"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.GetDmtpFileTransferActor(TouchSocket.Dmtp.IDmtpActorObject)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PullFile(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,System.String,TouchSocket.Dmtp.FileTransfer.FileOperator)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PullFile(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,System.String,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </summary>
      <param name="actor">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>actor</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PullFile(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,System.String,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </param>
      <param name="targetId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>targetId</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PullFile(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,System.String,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileOperator">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileOperator</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PullFile(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,System.String,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PullFile(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,System.String,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PullFile(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,TouchSocket.Dmtp.FileTransfer.FileOperator)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PullFile(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </summary>
      <param name="actor">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>actor</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PullFile(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileOperator">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileOperator</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PullFile(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PullFile(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PullFileAsync(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,System.String,TouchSocket.Dmtp.FileTransfer.FileOperator)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PullFileAsync(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,System.String,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </summary>
      <param name="actor">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>actor</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PullFileAsync(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,System.String,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </param>
      <param name="targetId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>targetId</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PullFileAsync(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,System.String,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileOperator">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileOperator</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PullFileAsync(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,System.String,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PullFileAsync(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,System.String,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PullFileAsync(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,TouchSocket.Dmtp.FileTransfer.FileOperator)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PullFileAsync(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </summary>
      <param name="actor">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>actor</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PullFileAsync(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileOperator">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileOperator</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PullFileAsync(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PullFileAsync(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PushFile(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,System.String,TouchSocket.Dmtp.FileTransfer.FileOperator)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PushFile(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,System.String,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </summary>
      <param name="actor">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>actor</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PushFile(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,System.String,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </param>
      <param name="targetId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>targetId</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PushFile(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,System.String,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileOperator">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileOperator</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PushFile(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,System.String,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PushFile(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,System.String,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PushFile(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,TouchSocket.Dmtp.FileTransfer.FileOperator)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PushFile(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </summary>
      <param name="actor">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>actor</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PushFile(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileOperator">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileOperator</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PushFile(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PushFile(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PushFileAsync(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,System.String,TouchSocket.Dmtp.FileTransfer.FileOperator)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PushFileAsync(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,System.String,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </summary>
      <param name="actor">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>actor</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PushFileAsync(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,System.String,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </param>
      <param name="targetId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>targetId</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PushFileAsync(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,System.String,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileOperator">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileOperator</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PushFileAsync(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,System.String,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PushFileAsync(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,System.String,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PushFileAsync(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,TouchSocket.Dmtp.FileTransfer.FileOperator)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PushFileAsync(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </summary>
      <param name="actor">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>actor</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PushFileAsync(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileOperator">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileOperator</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PushFileAsync(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.PushFileAsync(TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor,TouchSocket.Dmtp.FileTransfer.FileOperator)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.UseDmtpFileTransfer(TouchSocket.Core.IPluginManager)">
      <summary>
            使用DmtpFileTransfer插件
            </summary>
      <param name="pluginManager">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pluginManager</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.UseDmtpFileTransfer(TouchSocket.Core.IPluginManager)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferActorExtension.UseDmtpFileTransfer(TouchSocket.Core.IPluginManager)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferFeature">
      <summary>
            能够基于Dmtp协议，提供文件传输的能力
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferFeature.#ctor(TouchSocket.Core.IResolver)">
      <summary>
            能够基于Dmtp协议，提供文件传输的能力
            </summary>
      <param name="resolver">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>resolver</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferFeature.#ctor(TouchSocket.Core.IResolver)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferFeature.MaxSmallFileLength">
      <summary>
            允许传输的小文件的最大长度。默认1024*1024字节。
            <para>注意，当调整该值时，应该和对端保持一致。</para></summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferFeature.OnDmtpHandshaking(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Dmtp.DmtpVerifyEventArgs)">
      <summary>
            在Dmtp建立握手连接之前。
            </summary>
      <param name="client">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>client</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferFeature.OnDmtpHandshaking(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Dmtp.DmtpVerifyEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferFeature.OnDmtpHandshaking(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Dmtp.DmtpVerifyEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferFeature.OnDmtpHandshaking(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Dmtp.DmtpVerifyEventArgs)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferFeature.OnDmtpReceived(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Dmtp.DmtpMessageEventArgs)">
      <summary>
            收到DmtpMessage数据
            </summary>
      <param name="client">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>client</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferFeature.OnDmtpReceived(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Dmtp.DmtpMessageEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferFeature.OnDmtpReceived(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Dmtp.DmtpMessageEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferFeature.OnDmtpReceived(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Dmtp.DmtpMessageEventArgs)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferFeature.ReserveProtocolSize">
      <summary>
            保留协议长度
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferFeature.RootPath">
      <summary>
            文件传输的根路径
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferFeature.SetMaxSmallFileLength(System.Int32)">
      <summary>
            允许传输的小文件的最大长度。默认1024*1024字节。
            <para>注意，当调整该值时，应该和对端保持一致。</para></summary>
      <param name="maxSmallFileLength">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>maxSmallFileLength</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferFeature.SetMaxSmallFileLength(System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferFeature.SetMaxSmallFileLength(System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferFeature.SetProtocolFlags(System.UInt16)">
      <summary>
            设置<see cref="T:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferFeature" />的起始协议。
            <para>
            默认起始为：30，保留20个协议长度。
            </para></summary>
      <param name="start"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferFeature.SetProtocolFlags(System.UInt16)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferFeature.SetRootPath(System.String)">
      <summary>
            文件传输的根路径
            </summary>
      <param name="rootPath">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rootPath</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferFeature.SetRootPath(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferFeature.SetRootPath(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.DmtpFileTransferFeature.StartProtocol">
      <summary>
            起始协议
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.FileTransfer.FileOperator">
      <summary>
            文件传输操作器。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileOperator.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>TouchSocket.Dmtp.FileTransfer.FileOperator</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileOperator.FileSectionSize">
      <summary>
            文件分块大小，默认512*1024字节。
            不要超过1024*1024字节。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileOperator.ResourceInfo">
      <summary>
            文件资源信息。此值不为空时复用，可能会尝试断点续传。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileOperator.ResourcePath">
      <summary>
            资源文件路径，
            可输入绝对路径，也可以输入相对路径。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileOperator.SavePath">
      <summary>
            存放路径，
            可输入绝对路径，也可以输入相对路径。
            但是必须包含文件名及扩展名。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileOperator.TryCount">
      <summary>
            失败重试次数。默认10。
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.FileTransfer.FileResourceController">
      <summary>
            文件资源控制器。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceController.#ctor">
      <summary>
            文件资源控制器
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileResourceController.FileResourceStore">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:TouchSocket.Dmtp.FileTransfer.FileResourceController.FileResourceStore</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceController.GetFullPath(System.String,System.String)">
      <summary>
            获取全路径
            </summary>
      <param name="root">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>root</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceController.GetFullPath(System.String,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="path">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>path</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceController.GetFullPath(System.String,System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceController.GetFullPath(System.String,System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceController.LoadFileResourceLocatorForRead(System.String,System.Int32)">
      <summary>
            加载读取的文件资源定位器。
            </summary>
      <param name="path">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>path</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceController.LoadFileResourceLocatorForRead(System.String,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileSectionSize">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileSectionSize</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceController.LoadFileResourceLocatorForRead(System.String,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceController.LoadFileResourceLocatorForRead(System.String,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceController.LoadFileResourceLocatorForWrite(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceInfo)">
      <summary>
            加载写入的文件资源定位器。
            </summary>
      <param name="savePath">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>savePath</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceController.LoadFileResourceLocatorForWrite(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceInfo)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileResourceInfo">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileResourceInfo</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceController.LoadFileResourceLocatorForWrite(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceInfo)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceController.LoadFileResourceLocatorForWrite(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceInfo)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceController.ReadAllBytes(System.IO.FileInfo,System.Byte[])">
      <summary>
            读取文件的所有数据
            </summary>
      <param name="fileInfo">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileInfo</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceController.ReadAllBytes(System.IO.FileInfo,System.Byte[])</parameter>
          </include>
        </markup>
      </param>
      <param name="buffer">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>buffer</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceController.ReadAllBytes(System.IO.FileInfo,System.Byte[])</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceController.ReadAllBytes(System.IO.FileInfo,System.Byte[])</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileResourceController.Timeout">
      <summary>
            超时时间。默认60秒。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceController.TryGetFileResourceLocator(System.Int32,TouchSocket.Dmtp.FileTransfer.FileResourceLocator@)">
      <summary>
            通过文件句柄，获取资源定位器。
            </summary>
      <param name="resourceHandle">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>resourceHandle</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceController.TryGetFileResourceLocator(System.Int32,TouchSocket.Dmtp.FileTransfer.FileResourceLocator@)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileResourceLocator">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileResourceLocator</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceController.TryGetFileResourceLocator(System.Int32,TouchSocket.Dmtp.FileTransfer.FileResourceLocator@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceController.TryGetFileResourceLocator(System.Int32,TouchSocket.Dmtp.FileTransfer.FileResourceLocator@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceController.TryRelaseFileResourceLocator(System.Int32,TouchSocket.Dmtp.FileTransfer.FileResourceLocator@)">
      <summary>
            释放文件资源定位器
            </summary>
      <param name="resourceHandle">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>resourceHandle</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceController.TryRelaseFileResourceLocator(System.Int32,TouchSocket.Dmtp.FileTransfer.FileResourceLocator@)</parameter>
          </include>
        </markup>
      </param>
      <param name="locator">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>locator</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceController.TryRelaseFileResourceLocator(System.Int32,TouchSocket.Dmtp.FileTransfer.FileResourceLocator@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceController.TryRelaseFileResourceLocator(System.Int32,TouchSocket.Dmtp.FileTransfer.FileResourceLocator@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceController.WriteAllBytes(System.String,System.Byte[],System.Int32,System.Int32)">
      <summary>
            写入数据到文件
            </summary>
      <param name="path">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>path</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceController.WriteAllBytes(System.String,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="buffer">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>buffer</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceController.WriteAllBytes(System.String,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="offset">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offset</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceController.WriteAllBytes(System.String,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="length">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>length</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceController.WriteAllBytes(System.String,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:TouchSocket.Dmtp.FileTransfer.FileResourceInfo">
      <summary>
            文件资源信息
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.#ctor(System.IO.FileInfo,System.Int32)">
      <summary>
            初始化一个本地资源
            </summary>
      <param name="fileInfo">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileInfo</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.#ctor(System.IO.FileInfo,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileSectionSize">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileSectionSize</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.#ctor(System.IO.FileInfo,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.#ctor(System.String,System.Int32)">
      <summary>
            初始化一个本地资源
            </summary>
      <param name="filePath">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>filePath</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.#ctor(System.String,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileSectionSize">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileSectionSize</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.#ctor(System.String,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <exception cref="T:System.IO.FileNotFoundException"></exception>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.#ctor(TouchSocket.Core.ByteBlock)">
      <summary>
            从内存初始化资源
            </summary>
      <param name="byteBlock">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>byteBlock</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.#ctor(TouchSocket.Core.ByteBlock)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.#ctor(TouchSocket.Dmtp.FileTransfer.RemoteFileInfo,System.Int32)">
      <summary>
            初始化一个远程资源
            </summary>
      <param name="fileInfo">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileInfo</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.#ctor(TouchSocket.Dmtp.FileTransfer.RemoteFileInfo,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileSectionSize">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileSectionSize</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.#ctor(TouchSocket.Dmtp.FileTransfer.RemoteFileInfo,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.FileInfo">
      <summary>
            资源文件信息
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.FileSections">
      <summary>
            资源分块集合。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.FileSectionSize">
      <summary>
            文件分块尺寸。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.GetContinuationIndex">
      <summary>
            获取尝试续传时的索引。
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.GetContinuationIndex</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.GetFileSections(TouchSocket.Dmtp.FileTransfer.FileSectionStatus)">
      <summary>
            按文件块状态，获取块集合，如果没用找到任何元素，则返回空数组。
            </summary>
      <param name="fileSectionStatus">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileSectionStatus</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.GetFileSections(TouchSocket.Dmtp.FileTransfer.FileSectionStatus)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.GetFileSections(TouchSocket.Dmtp.FileTransfer.FileSectionStatus)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.Package(TouchSocket.Core.ByteBlock@)">
      <summary>
            打包。
            <para>重写的话，约定基类方法必须先执行</para></summary>
      <param name="byteBlock">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>byteBlock</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.Package(TouchSocket.Core.ByteBlock@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.ResetResourceHandle(System.Int32)">
      <summary>
            重新设置资源标识。
            </summary>
      <param name="handle">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>handle</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.ResetResourceHandle(System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.ResourceHandle">
      <summary>
            资源句柄唯一标识
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.Save(TouchSocket.Core.ByteBlock)">
      <summary>
            将<see cref="T:TouchSocket.Dmtp.FileTransfer.FileResourceInfo" />对象保存到内存。
            </summary>
      <param name="byteBlock"></param>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.Unpackage(TouchSocket.Core.ByteBlock@)">
      <summary>
            解包。
            <para>重写的话，约定基类方法必须先执行</para></summary>
      <param name="byteBlock">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>byteBlock</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceInfo.Unpackage(TouchSocket.Core.ByteBlock@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:TouchSocket.Dmtp.FileTransfer.FileResourceInfoResult">
      <summary>
            FileResourceInfoResult
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceInfoResult.#ctor(System.String,TouchSocket.Core.ResultCode)">
      <summary>
            创建失败的资源结果
            </summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceInfoResult.#ctor(System.String,TouchSocket.Core.ResultCode)</parameter>
          </include>
        </markup>
      </param>
      <param name="code">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>code</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceInfoResult.#ctor(System.String,TouchSocket.Core.ResultCode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceInfoResult.#ctor(TouchSocket.Core.Result)">
      <summary>
            创建失败的资源结果
            </summary>
      <param name="result">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>result</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceInfoResult.#ctor(TouchSocket.Core.Result)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceInfoResult.#ctor(TouchSocket.Dmtp.FileTransfer.FileResourceInfo)">
      <summary>
            创建成功的资源结果
            </summary>
      <param name="fileResourceInfo">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileResourceInfo</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceInfoResult.#ctor(TouchSocket.Dmtp.FileTransfer.FileResourceInfo)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileResourceInfoResult.FileResourceInfo">
      <summary>
            文件资源信息
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.FileTransfer.FileResourceLocator">
      <summary>
            文件资源定位器。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.#ctor(TouchSocket.Dmtp.FileTransfer.FileResourceInfo)">
      <summary>
            根据资源信息，初始化一个仅读的定位器。
            </summary>
      <param name="fileResourceInfo">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileResourceInfo</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.#ctor(TouchSocket.Dmtp.FileTransfer.FileResourceInfo)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.#ctor(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,System.String,System.Boolean)">
      <summary>
            根据资源信息和保存目录，初始化一个可写入的定位器。
            </summary>
      <param name="fileResourceInfo">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileResourceInfo</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.#ctor(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,System.String,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="locatorPath">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>locatorPath</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.#ctor(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,System.String,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="overwrite">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>overwrite</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.#ctor(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,System.String,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <exception cref="T:System.ArgumentException"></exception>
    </member>
    <member name="F:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.ExtensionName">
      <summary>
            缓存文件的扩展名。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.FileAccess">
      <summary>
            文件访问类型。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.FileResourceInfo">
      <summary>
            资源信息。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.FileStorage">
      <summary>
            文件访问存储器。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.GetDefaultOrFailFileSection">
      <summary>
            获取一个默认状态，或者失败状态的文件片段
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.GetDefaultOrFailFileSection</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.GetUnfinishedFileSection">
      <summary>
            获取没有完成的文件块集合。
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.GetUnfinishedFileSection</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.LastActiveTime">
      <summary>
            最后活动时间
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.LocatorPath">
      <summary>
            定位器指向的实际文件的全名称。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.ReadBytes(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>
            读取字节。
            </summary>
      <param name="pos">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.ReadBytes(System.Int64,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="buffer">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>buffer</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.ReadBytes(System.Int64,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="offset">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offset</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.ReadBytes(System.Int64,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="length">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>length</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.ReadBytes(System.Int64,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.ReadBytes(System.Int64,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.ReadFileSection(TouchSocket.Dmtp.FileTransfer.FileSection)">
      <summary>
            按文件块读取。
            </summary>
      <param name="fileSection">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileSection</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.ReadFileSection(TouchSocket.Dmtp.FileTransfer.FileSection)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.ReadFileSection(TouchSocket.Dmtp.FileTransfer.FileSection)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.ReloadFileResourceInfo(TouchSocket.Dmtp.FileTransfer.FileResourceInfo)">
      <summary>
            重新载入资源信息，并覆盖现有的分块的所有信息。要求资源路径必须一致。
            </summary>
      <param name="fileResourceInfo">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileResourceInfo</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.ReloadFileResourceInfo(TouchSocket.Dmtp.FileTransfer.FileResourceInfo)</parameter>
          </include>
        </markup>
      </param>
      <exception cref="T:System.Exception"></exception>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.TryFinished">
      <summary>
            尝试完成该资源。
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.TryFinished</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.WriteFileSection(TouchSocket.Dmtp.FileTransfer.FileSection,System.ArraySegment{System.Byte})">
      <summary>
            写入文件块
            </summary>
      <param name="fileSection">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileSection</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.WriteFileSection(TouchSocket.Dmtp.FileTransfer.FileSection,System.ArraySegment{System.Byte})</parameter>
          </include>
        </markup>
      </param>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.WriteFileSection(TouchSocket.Dmtp.FileTransfer.FileSection,System.ArraySegment{System.Byte})</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.WriteFileSection(TouchSocket.Dmtp.FileTransfer.FileSection,System.ArraySegment{System.Byte})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.WriteFileSection(TouchSocket.Dmtp.FileTransfer.FileSectionResult)">
      <summary>
            写入文件块
            </summary>
      <param name="fileSectionResult">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileSectionResult</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.WriteFileSection(TouchSocket.Dmtp.FileTransfer.FileSectionResult)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.WriteFileSection(TouchSocket.Dmtp.FileTransfer.FileSectionResult)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Dmtp.FileTransfer.FileSection">
      <summary>
            文件片段句柄。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileSection.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>TouchSocket.Dmtp.FileTransfer.FileSection</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileSection.Equals(TouchSocket.Dmtp.FileTransfer.FileSection)">
      <summary>
            判断基本信息是否一致。
            </summary>
      <param name="fileSection">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileSection</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileSection.Equals(TouchSocket.Dmtp.FileTransfer.FileSection)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileSection.Equals(TouchSocket.Dmtp.FileTransfer.FileSection)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileSection.Index">
      <summary>
            存于集合的索引。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileSection.Length">
      <summary>
            片段长度
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileSection.Offset">
      <summary>
            片段的流偏移量。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileSection.Package(TouchSocket.Core.ByteBlock@)">
      <summary>
            打包。
            <para>重写的话，约定基类方法必须先执行</para></summary>
      <param name="byteBlock">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>byteBlock</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileSection.Package(TouchSocket.Core.ByteBlock@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileSection.ResourceHandle">
      <summary>
            文件句柄唯一标识
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileSection.Status">
      <summary>
            分块状态。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileSection.Unpackage(TouchSocket.Core.ByteBlock@)">
      <summary>
            解包。
            <para>重写的话，约定基类方法必须先执行</para></summary>
      <param name="byteBlock">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>byteBlock</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileSection.Unpackage(TouchSocket.Core.ByteBlock@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:TouchSocket.Dmtp.FileTransfer.FileSectionResult">
      <summary>
            FileSectionResult
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileSectionResult.#ctor(TouchSocket.Core.ResultCode,System.String,TouchSocket.Core.ByteBlock,TouchSocket.Dmtp.FileTransfer.FileSection)">
      <summary>
            FileSectionResult
            </summary>
      <param name="resultCode">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>resultCode</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileSectionResult.#ctor(TouchSocket.Core.ResultCode,System.String,TouchSocket.Core.ByteBlock,TouchSocket.Dmtp.FileTransfer.FileSection)</parameter>
          </include>
        </markup>
      </param>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileSectionResult.#ctor(TouchSocket.Core.ResultCode,System.String,TouchSocket.Core.ByteBlock,TouchSocket.Dmtp.FileTransfer.FileSection)</parameter>
          </include>
        </markup>
      </param>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileSectionResult.#ctor(TouchSocket.Core.ResultCode,System.String,TouchSocket.Core.ByteBlock,TouchSocket.Dmtp.FileTransfer.FileSection)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileSection">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileSection</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileSectionResult.#ctor(TouchSocket.Core.ResultCode,System.String,TouchSocket.Core.ByteBlock,TouchSocket.Dmtp.FileTransfer.FileSection)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileSectionResult.#ctor(TouchSocket.Core.ResultCode,TouchSocket.Core.ByteBlock,TouchSocket.Dmtp.FileTransfer.FileSection)">
      <summary>
            FileSectionResult
            </summary>
      <param name="resultCode">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>resultCode</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileSectionResult.#ctor(TouchSocket.Core.ResultCode,TouchSocket.Core.ByteBlock,TouchSocket.Dmtp.FileTransfer.FileSection)</parameter>
          </include>
        </markup>
      </param>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileSectionResult.#ctor(TouchSocket.Core.ResultCode,TouchSocket.Core.ByteBlock,TouchSocket.Dmtp.FileTransfer.FileSection)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileSection">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileSection</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileSectionResult.#ctor(TouchSocket.Core.ResultCode,TouchSocket.Core.ByteBlock,TouchSocket.Dmtp.FileTransfer.FileSection)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileSectionResult.Dispose">
      <summary>
            Dispose
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileSectionResult.FileSection">
      <summary>
            文件块
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileSectionResult.Value">
      <summary>
            实际数据
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.FileTransfer.FileSectionStatus">
      <summary>
            文件片段状态
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.FileTransfer.FileSectionStatus.Default">
      <summary>
            默认状态
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.FileTransfer.FileSectionStatus.Transfering">
      <summary>
            正在传输状态
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.FileTransfer.FileSectionStatus.Transfered">
      <summary>
            传输结束状态
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.FileTransfer.FileSectionStatus.Fail">
      <summary>
            失败
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.FileTransfer.FileSectionStatus.Finished">
      <summary>
            完成状态
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.FileTransfer.FileTransferedEventArgs">
      <summary>
            FileTransferedEventArgs
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileTransferedEventArgs.#ctor(TouchSocket.Dmtp.FileTransfer.TransferType,TouchSocket.Core.Metadata,TouchSocket.Dmtp.FileTransfer.RemoteFileInfo,TouchSocket.Core.Result)">
      <summary>
            FileTransferedEventArgs
            </summary>
      <param name="transferType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>transferType</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileTransferedEventArgs.#ctor(TouchSocket.Dmtp.FileTransfer.TransferType,TouchSocket.Core.Metadata,TouchSocket.Dmtp.FileTransfer.RemoteFileInfo,TouchSocket.Core.Result)</parameter>
          </include>
        </markup>
      </param>
      <param name="result">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>result</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileTransferedEventArgs.#ctor(TouchSocket.Dmtp.FileTransfer.TransferType,TouchSocket.Core.Metadata,TouchSocket.Dmtp.FileTransfer.RemoteFileInfo,TouchSocket.Core.Result)</parameter>
          </include>
        </markup>
      </param>
      <param name="metadata">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>metadata</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileTransferedEventArgs.#ctor(TouchSocket.Dmtp.FileTransfer.TransferType,TouchSocket.Core.Metadata,TouchSocket.Dmtp.FileTransfer.RemoteFileInfo,TouchSocket.Core.Result)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileInfo">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileInfo</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileTransferedEventArgs.#ctor(TouchSocket.Dmtp.FileTransfer.TransferType,TouchSocket.Core.Metadata,TouchSocket.Dmtp.FileTransfer.RemoteFileInfo,TouchSocket.Core.Result)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileTransferedEventArgs.Result">
      <summary>
            结果
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.FileTransfer.FileTransferingEventArgs">
      <summary>
            FileTransferingEventArgs
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FileTransferingEventArgs.#ctor(TouchSocket.Dmtp.FileTransfer.TransferType,TouchSocket.Core.Metadata,TouchSocket.Dmtp.FileTransfer.RemoteFileInfo)">
      <summary>
            FileTransferingEventArgs
            </summary>
      <param name="transferType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>transferType</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileTransferingEventArgs.#ctor(TouchSocket.Dmtp.FileTransfer.TransferType,TouchSocket.Core.Metadata,TouchSocket.Dmtp.FileTransfer.RemoteFileInfo)</parameter>
          </include>
        </markup>
      </param>
      <param name="metadata">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>metadata</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileTransferingEventArgs.#ctor(TouchSocket.Dmtp.FileTransfer.TransferType,TouchSocket.Core.Metadata,TouchSocket.Dmtp.FileTransfer.RemoteFileInfo)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileInfo">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileInfo</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FileTransferingEventArgs.#ctor(TouchSocket.Dmtp.FileTransfer.TransferType,TouchSocket.Core.Metadata,TouchSocket.Dmtp.FileTransfer.RemoteFileInfo)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileTransferingEventArgs.FileInfo">
      <summary>
            文件信息
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileTransferingEventArgs.Metadata">
      <summary>
            元数据
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileTransferingEventArgs.ResourcePath">
      <summary>
            请求文件路径，
            可输入绝对路径，也可以输入相对路径。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileTransferingEventArgs.SavePath">
      <summary>
            存放路径，
            可输入绝对路径，也可以输入相对路径。
            但是必须包含文件名及扩展名。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FileTransferingEventArgs.TransferType">
      <summary>
            传输类型
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.FileTransfer.FinishedResult">
      <summary>
            完成的请求结果
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FinishedResult.#ctor(TouchSocket.Core.Result,System.Int32)">
      <summary>
            失败的请求结果
            </summary>
      <param name="result">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>result</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FinishedResult.#ctor(TouchSocket.Core.Result,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="resourceHandle">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>resourceHandle</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FinishedResult.#ctor(TouchSocket.Core.Result,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FinishedResult.#ctor(TouchSocket.Core.ResultCode,System.Int32)">
      <summary>
            完成的请求结果
            </summary>
      <param name="resultCode">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>resultCode</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FinishedResult.#ctor(TouchSocket.Core.ResultCode,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="resourceHandle">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>resourceHandle</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FinishedResult.#ctor(TouchSocket.Core.ResultCode,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.FinishedResult.#ctor(TouchSocket.Core.ResultCode,System.String,System.Int32)">
      <summary>
            失败的请求结果
            </summary>
      <param name="resultCode">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>resultCode</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FinishedResult.#ctor(TouchSocket.Core.ResultCode,System.String,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FinishedResult.#ctor(TouchSocket.Core.ResultCode,System.String,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="resourceHandle">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>resourceHandle</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.FinishedResult.#ctor(TouchSocket.Core.ResultCode,System.String,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.FinishedResult.ResourceHandle">
      <summary>
            资源句柄
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor">
      <summary>
            能够基于Dmtp协议提供文件传输功能的接口
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.FileController">
      <summary>
            文件资源访问接口。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.FinishedFileResourceInfo(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            请求完成一个资源。
            <para>如果是Push，当正常返回时，则说明整个过程已完成。</para><para>如果是Pull，当正常返回时，则说明服务器对于这个过程已完成，后续还需要再<see cref="M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.TryFinished" />。</para></summary>
      <param name="targetId">目标客户端Id</param>
      <param name="fileResourceInfo">文件资源信息</param>
      <param name="code">状态代码</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.FinishedFileResourceInfo(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.FinishedFileResourceInfo(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            请求完成一个资源。
            <para>如果是Push，当正常返回时，则说明整个过程已完成。</para><para>如果是Pull，当正常返回时，则说明服务器对于这个过程已完成，后续还需要再<see cref="M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.TryFinished" />。</para></summary>
      <param name="fileResourceInfo">文件资源信息</param>
      <param name="code">状态代码</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.FinishedFileResourceInfo(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.FinishedFileResourceInfoAsync(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            请求完成一个资源。
            <para>如果是Push，当正常返回时，则说明整个过程已完成。</para><para>如果是Pull，当正常返回时，则说明服务器对于这个过程已完成，后续还需要再<see cref="M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.TryFinished" />。</para></summary>
      <param name="targetId">目标客户端Id</param>
      <param name="fileResourceInfo">文件资源信息</param>
      <param name="code">状态代码</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.FinishedFileResourceInfoAsync(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.FinishedFileResourceInfoAsync(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            请求完成一个资源。
            <para>如果是Push，当正常返回时，则说明整个过程已完成。</para><para>如果是Pull，当正常返回时，则说明服务器对于这个过程已完成，后续还需要再<see cref="M:TouchSocket.Dmtp.FileTransfer.FileResourceLocator.TryFinished" />。</para></summary>
      <param name="fileResourceInfo">文件资源信息</param>
      <param name="code">状态代码</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.FinishedFileResourceInfoAsync(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.MaxSmallFileLength">
      <summary>
            允许传输的小文件的最大长度。默认1024*1024字节。
            <para>注意，当调整该值时，应该和对端保持一致。</para></summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PullFileResourceInfo(System.String,System.String,TouchSocket.Core.Metadata,System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>
            拉取文件信息。
            <para>注意：</para><list type="number"><item>完成该操作后，必须在设定时间（60秒）内至少完成一次文件块访问，不然该信息将变得无效，</item><item>每次该操作，都应该对应一次<see cref="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.FinishedFileResourceInfo(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)" /></item></list></summary>
      <param name="targetId">目标客户端Id</param>
      <param name="path">资源路径</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="fileSectionSize">文件分块尺寸。</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PullFileResourceInfo(System.String,System.String,TouchSocket.Core.Metadata,System.Int32,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PullFileResourceInfo(System.String,TouchSocket.Core.Metadata,System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>
            拉取文件信息。
            <para>注意：</para><list type="number"><item>完成该操作后，必须在设定时间（60秒）内至少完成一次文件块访问，不然该信息将变得无效，</item><item>每次该操作，都应该对应一次<see cref="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.FinishedFileResourceInfo(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)" /></item></list></summary>
      <param name="path">资源路径</param>
      <param name="metadata">元数据</param>
      <param name="fileSectionSize">文件分块尺寸</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PullFileResourceInfo(System.String,TouchSocket.Core.Metadata,System.Int32,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PullFileResourceInfoAsync(System.String,System.String,TouchSocket.Core.Metadata,System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>
            拉取文件信息。
            <para>注意：</para><list type="number"><item>完成该操作后，必须在设定时间（60秒）内至少完成一次文件块访问，不然该信息将变得无效，</item><item>每次该操作，都应该对应一次<see cref="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.FinishedFileResourceInfo(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)" /></item></list></summary>
      <param name="targetId">目标客户端Id</param>
      <param name="path">资源路径</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="fileSectionSize">文件分块尺寸。</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PullFileResourceInfoAsync(System.String,System.String,TouchSocket.Core.Metadata,System.Int32,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PullFileResourceInfoAsync(System.String,TouchSocket.Core.Metadata,System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>
            拉取文件信息。
            <para>注意：</para><list type="number"><item>完成该操作后，必须在设定时间（60秒）内至少完成一次文件块访问，不然该信息将变得无效，</item><item>每次该操作，都应该对应一次<see cref="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.FinishedFileResourceInfo(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)" /></item></list></summary>
      <param name="path">资源路径</param>
      <param name="metadata">元数据</param>
      <param name="fileSectionSize">文件分块尺寸</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PullFileResourceInfoAsync(System.String,TouchSocket.Core.Metadata,System.Int32,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PullFileSection(System.String,TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)">
      <summary>
            拉取文件块。
            <para>注意：拉取文件块时，两个成功块之间的时间应该在设定时间（60秒）内完成。</para></summary>
      <param name="targetId">目标客户端Id</param>
      <param name="fileSection">文件块</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PullFileSection(System.String,TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PullFileSection(TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)">
      <summary>
            拉取文件块。
            <para>注意：拉取文件块时，两个成功块之间的时间应该在设定时间（60秒）内完成。</para></summary>
      <param name="fileSection">文件块</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PullFileSection(TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PullFileSectionAsync(System.String,TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)">
      <summary>
            拉取文件块。
            <para>注意：拉取文件块时，两个成功块之间的时间应该在设定时间（60秒）内完成。</para></summary>
      <param name="targetId">目标客户端Id</param>
      <param name="fileSection">文件块</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PullFileSectionAsync(System.String,TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PullFileSectionAsync(TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)">
      <summary>
            拉取文件块。
            <para>注意：拉取文件块时，两个成功块之间的时间应该在设定时间（60秒）内完成。</para></summary>
      <param name="fileSection">文件块</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PullFileSectionAsync(TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PullSmallFile(System.String,System.String,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            拉取小文件。默认设置1024*1024字节大小。
            </summary>
      <param name="targetId">目标客户端Id</param>
      <param name="path">请求路径</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PullSmallFile(System.String,System.String,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PullSmallFile(System.String,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            拉取小文件。默认设置1024*1024字节大小。
            </summary>
      <param name="path">请求路径</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PullSmallFile(System.String,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PullSmallFileAsync(System.String,System.String,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            拉取小文件。默认设置1024*1024字节大小。
            </summary>
      <param name="targetId">目标客户端Id</param>
      <param name="path">请求路径</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PullSmallFileAsync(System.String,System.String,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PullSmallFileAsync(System.String,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            拉取小文件。默认设置1024*1024字节大小。
            </summary>
      <param name="path">请求路径</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PullSmallFileAsync(System.String,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PushFileResourceInfo(System.String,System.String,TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            推送文件信息。
            <para>注意：</para><list type="number"><item>完成该操作后，必须在设定时间（60秒）内至少完成一次文件块访问，不然该信息将变得无效，</item><item>每次该操作，都必须对应一次<see cref="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.FinishedFileResourceInfo(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)" /></item></list></summary>
      <param name="targetId">目标客户端Id</param>
      <param name="savePath">保存路径</param>
      <param name="fileResourceLocator">文件资源定位器</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PushFileResourceInfo(System.String,System.String,TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PushFileResourceInfo(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            推送文件信息。
            <para>注意：</para><list type="number"><item>完成该操作后，必须在设定时间（60秒）内至少完成一次文件块访问，不然该信息将变得无效，</item><item>每次该操作，都必须对应一次<see cref="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.FinishedFileResourceInfo(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)" /></item></list></summary>
      <param name="savePath">保存路径</param>
      <param name="fileResourceLocator">文件资源定位器</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PushFileResourceInfo(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PushFileResourceInfoAsync(System.String,System.String,TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            推送文件信息。
            <para>注意：</para><list type="number"><item>完成该操作后，必须在设定时间（60秒）内至少完成一次文件块访问，不然该信息将变得无效，</item><item>每次该操作，都必须对应一次<see cref="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.FinishedFileResourceInfo(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)" /></item></list></summary>
      <param name="targetId">目标客户端Id</param>
      <param name="savePath">保存路径</param>
      <param name="fileResourceLocator">文件资源定位器</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PushFileResourceInfoAsync(System.String,System.String,TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PushFileResourceInfoAsync(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            推送文件信息。
            <para>注意：</para><list type="number"><item>完成该操作后，必须在设定时间（60秒）内至少完成一次文件块访问，不然该信息将变得无效，</item><item>每次该操作，都必须对应一次<see cref="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.FinishedFileResourceInfo(TouchSocket.Dmtp.FileTransfer.FileResourceInfo,TouchSocket.Core.ResultCode,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)" /></item></list></summary>
      <param name="savePath">保存路径</param>
      <param name="fileResourceLocator">文件资源定位器</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PushFileResourceInfoAsync(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PushFileSection(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)">
      <summary>
            推送文件块。
            <para>注意：推送文件块时，两个成功块之间的时间应该在设定时间（60秒）内完成。</para></summary>
      <param name="targetId">目标客户端Id</param>
      <param name="fileResourceLocator">文件资源定位器</param>
      <param name="fileSection">文件块</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PushFileSection(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PushFileSection(TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)">
      <summary>
            推送文件块。
            <para>注意：推送文件块时，两个成功块之间的时间应该在设定时间（60秒）内完成。</para></summary>
      <param name="fileResourceLocator">文件资源定位器</param>
      <param name="fileSection">文件块</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PushFileSection(TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PushFileSectionAsync(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)">
      <summary>
            推送文件块。
            <para>注意：推送文件块时，两个成功块之间的时间应该在设定时间（60秒）内完成。</para></summary>
      <param name="targetId">目标客户端Id</param>
      <param name="fileResourceLocator">文件资源定位器</param>
      <param name="fileSection">文件块</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PushFileSectionAsync(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PushFileSectionAsync(TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)">
      <summary>
            推送文件块。
            <para>注意：推送文件块时，两个成功块之间的时间应该在设定时间（60秒）内完成。</para></summary>
      <param name="fileResourceLocator">文件资源定位器</param>
      <param name="fileSection">文件块</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PushFileSectionAsync(TouchSocket.Dmtp.FileTransfer.FileResourceLocator,TouchSocket.Dmtp.FileTransfer.FileSection,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PushSmallFile(System.String,System.IO.FileInfo,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            推送小文件到特定的Id。默认设置1024*1024字节大小。
            </summary>
      <param name="savePath">保存路径</param>
      <param name="fileInfo">推送的文件信息</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PushSmallFile(System.String,System.IO.FileInfo,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PushSmallFile(System.String,System.String,System.IO.FileInfo,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            推送小文件到特定的Id。默认设置1024*1024字节大小。
            </summary>
      <param name="targetId">目标客户端Id</param>
      <param name="savePath">保存路径</param>
      <param name="fileInfo">推送的文件信息</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PushSmallFile(System.String,System.String,System.IO.FileInfo,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PushSmallFileAsync(System.String,System.IO.FileInfo,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            推送小文件。默认设置1024*1024字节大小。
            </summary>
      <param name="savePath">保存路径</param>
      <param name="fileInfo">推送的文件信息</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PushSmallFileAsync(System.String,System.IO.FileInfo,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PushSmallFileAsync(System.String,System.String,System.IO.FileInfo,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)">
      <summary>
            推送小文件。默认设置1024*1024字节大小。
            </summary>
      <param name="targetId">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>targetId</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PushSmallFileAsync(System.String,System.String,System.IO.FileInfo,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </param>
      <param name="savePath">保存路径</param>
      <param name="fileInfo">推送的文件信息</param>
      <param name="metadata">元数据</param>
      <param name="timeout">超时设置</param>
      <param name="token">可取消令箭</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.PushSmallFileAsync(System.String,System.String,System.IO.FileInfo,TouchSocket.Core.Metadata,System.Int32,System.Threading.CancellationToken)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferActor.RootPath">
      <summary>
            文件传输的根路径
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferedPlugin">
      <summary>
            IDmtpFileTransferedPlugin
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferedPlugin`1">
      <summary>
            IDmtpFileTransferedPlugin
            </summary>
      <typeparam name="TClient">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TClient</parameter>
            <parameter>T:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferedPlugin`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferedPlugin`1.OnDmtpFileTransfered(`0,TouchSocket.Dmtp.FileTransfer.FileTransferedEventArgs)">
      <summary>
            当文件传输结束之后。并不意味着完成传输，请通过<see cref="P:TouchSocket.Dmtp.FileTransfer.FileTransferedEventArgs.Result" />属性值进行判断。
            </summary>
      <param name="client"></param>
      <param name="e"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferedPlugin`1.OnDmtpFileTransfered(`0,TouchSocket.Dmtp.FileTransfer.FileTransferedEventArgs)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferingPlugin">
      <summary>
            IDmtpFileTransferingPlugin
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferingPlugin`1">
      <summary>
            IDmtpFileTransferPlugin
            </summary>
      <typeparam name="TClient">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TClient</parameter>
            <parameter>T:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferingPlugin`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferingPlugin`1.OnDmtpFileTransfering(`0,TouchSocket.Dmtp.FileTransfer.FileTransferingEventArgs)">
      <summary>
            在文件传输即将进行时触发。
            </summary>
      <param name="client">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>client</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferingPlugin`1.OnDmtpFileTransfering(`0,TouchSocket.Dmtp.FileTransfer.FileTransferingEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferingPlugin`1.OnDmtpFileTransfering(`0,TouchSocket.Dmtp.FileTransfer.FileTransferingEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IDmtpFileTransferingPlugin`1.OnDmtpFileTransfering(`0,TouchSocket.Dmtp.FileTransfer.FileTransferingEventArgs)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Dmtp.FileTransfer.IFileResourceController">
      <summary>
            文件资源控制器。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.GetFullPath(System.String,System.String)">
      <summary>
            获取全路径
            </summary>
      <param name="root">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>root</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.GetFullPath(System.String,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="path">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>path</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.GetFullPath(System.String,System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.GetFullPath(System.String,System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.LoadFileResourceLocatorForRead(System.String,System.Int32)">
      <summary>
            加载读取的文件资源定位器。
            </summary>
      <param name="path">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>path</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.LoadFileResourceLocatorForRead(System.String,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileSectionSize">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileSectionSize</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.LoadFileResourceLocatorForRead(System.String,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.LoadFileResourceLocatorForRead(System.String,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.LoadFileResourceLocatorForWrite(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceInfo)">
      <summary>
            加载写入的文件资源定位器。
            </summary>
      <param name="savePath">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>savePath</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.LoadFileResourceLocatorForWrite(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceInfo)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileResourceInfo">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileResourceInfo</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.LoadFileResourceLocatorForWrite(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceInfo)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.LoadFileResourceLocatorForWrite(System.String,TouchSocket.Dmtp.FileTransfer.FileResourceInfo)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.ReadAllBytes(System.IO.FileInfo,System.Byte[])">
      <summary>
            读取文件的所有数据
            </summary>
      <param name="fileInfo">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileInfo</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.ReadAllBytes(System.IO.FileInfo,System.Byte[])</parameter>
          </include>
        </markup>
      </param>
      <param name="buffer">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>buffer</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.ReadAllBytes(System.IO.FileInfo,System.Byte[])</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.ReadAllBytes(System.IO.FileInfo,System.Byte[])</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.TryGetFileResourceLocator(System.Int32,TouchSocket.Dmtp.FileTransfer.FileResourceLocator@)">
      <summary>
            通过文件句柄，获取资源定位器。
            </summary>
      <param name="resourceHandle">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>resourceHandle</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.TryGetFileResourceLocator(System.Int32,TouchSocket.Dmtp.FileTransfer.FileResourceLocator@)</parameter>
          </include>
        </markup>
      </param>
      <param name="fileResourceLocator">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileResourceLocator</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.TryGetFileResourceLocator(System.Int32,TouchSocket.Dmtp.FileTransfer.FileResourceLocator@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.TryGetFileResourceLocator(System.Int32,TouchSocket.Dmtp.FileTransfer.FileResourceLocator@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.TryRelaseFileResourceLocator(System.Int32,TouchSocket.Dmtp.FileTransfer.FileResourceLocator@)">
      <summary>
            释放文件资源定位器
            </summary>
      <param name="resourceHandle">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>resourceHandle</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.TryRelaseFileResourceLocator(System.Int32,TouchSocket.Dmtp.FileTransfer.FileResourceLocator@)</parameter>
          </include>
        </markup>
      </param>
      <param name="locator">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>locator</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.TryRelaseFileResourceLocator(System.Int32,TouchSocket.Dmtp.FileTransfer.FileResourceLocator@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.TryRelaseFileResourceLocator(System.Int32,TouchSocket.Dmtp.FileTransfer.FileResourceLocator@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.WriteAllBytes(System.String,System.Byte[],System.Int32,System.Int32)">
      <summary>
            写入数据到文件
            </summary>
      <param name="path">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>path</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.WriteAllBytes(System.String,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="buffer">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>buffer</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.WriteAllBytes(System.String,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="offset">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offset</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.WriteAllBytes(System.String,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="length">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>length</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.IFileResourceController.WriteAllBytes(System.String,System.Byte[],System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:TouchSocket.Dmtp.FileTransfer.PullSmallFileResult">
      <summary>
            PullSmallFileResult
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.PullSmallFileResult.#ctor(System.Byte[])">
      <summary>
            初始化PullSmallFileResult
            </summary>
      <param name="bytes">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bytes</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.PullSmallFileResult.#ctor(System.Byte[])</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.PullSmallFileResult.#ctor(TouchSocket.Core.ResultCode)">
      <summary>
            初始化PullSmallFileResult
            </summary>
      <param name="resultCode">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>resultCode</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.PullSmallFileResult.#ctor(TouchSocket.Core.ResultCode)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.PullSmallFileResult.#ctor(TouchSocket.Core.ResultCode,System.String)">
      <summary>
            初始化PullSmallFileResult
            </summary>
      <param name="resultCode">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>resultCode</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.PullSmallFileResult.#ctor(TouchSocket.Core.ResultCode,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.PullSmallFileResult.#ctor(TouchSocket.Core.ResultCode,System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.PullSmallFileResult.Save(System.String,System.Boolean)">
      <summary>
            将拉取的数据保存为文件。
            </summary>
      <param name="path">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>path</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.PullSmallFileResult.Save(System.String,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="overwrite">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>overwrite</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.PullSmallFileResult.Save(System.String,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.PullSmallFileResult.Save(System.String,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.PullSmallFileResult.Value">
      <summary>
            实际的文件数据
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.FileTransfer.RemoteFileInfo">
      <summary>
            RemoteFileInfo
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.RemoteFileInfo.#ctor">
      <summary>
            初始化一个RemoteFileInfo
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.RemoteFileInfo.#ctor(System.IO.FileInfo)">
      <summary>
            从FileInfo初始化一个RemoteFileInfo
            </summary>
      <param name="fileInfo">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileInfo</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.RemoteFileInfo.#ctor(System.IO.FileInfo)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.RemoteFileInfo.Length">
      <summary>
            文件大小
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.RemoteFileInfo.MD5">
      <summary>
            文件MD5
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.RemoteFileInfo.Package(TouchSocket.Core.ByteBlock@)">
      <summary>
            打包。
            <para>重写的话，约定基类方法必须先执行</para></summary>
      <param name="byteBlock">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>byteBlock</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.RemoteFileInfo.Package(TouchSocket.Core.ByteBlock@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.RemoteFileInfo.Unpackage(TouchSocket.Core.ByteBlock@)">
      <summary>
            解包。
            <para>重写的话，约定基类方法必须先执行</para></summary>
      <param name="byteBlock">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>byteBlock</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.RemoteFileInfo.Unpackage(TouchSocket.Core.ByteBlock@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:TouchSocket.Dmtp.FileTransfer.RemoteFileInfoResult">
      <summary>
            远程访问结果
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.RemoteFileInfoResult.#ctor(TouchSocket.Dmtp.FileTransfer.RemoteFileInfo,TouchSocket.Core.ResultCode,System.String)">
      <summary>
            远程访问结果
            </summary>
      <param name="fileInfo">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileInfo</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.RemoteFileInfoResult.#ctor(TouchSocket.Dmtp.FileTransfer.RemoteFileInfo,TouchSocket.Core.ResultCode,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="resultCode">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>resultCode</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.RemoteFileInfoResult.#ctor(TouchSocket.Dmtp.FileTransfer.RemoteFileInfo,TouchSocket.Core.ResultCode,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.RemoteFileInfoResult.#ctor(TouchSocket.Dmtp.FileTransfer.RemoteFileInfo,TouchSocket.Core.ResultCode,System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.RemoteFileInfoResult.FileInfo">
      <summary>
            文件信息
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.RemoteFileInfoResult.Message">
      <summary>
            消息
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.RemoteFileInfoResult.ResultCode">
      <summary>
            结果
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.FileTransfer.RemoteFileSystemInfo">
      <summary>
            远程文件系统信息
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.RemoteFileSystemInfo.Attributes">
      <summary>
            当前文件或目录的特性
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.RemoteFileSystemInfo.CreationTime">
      <summary>
            当前文件或目录的创建时间
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.RemoteFileSystemInfo.FullName">
      <summary>
            目录或文件的完整目录。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.RemoteFileSystemInfo.LastAccessTime">
      <summary>
            上次访问当前文件或目录的时间
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.RemoteFileSystemInfo.LastWriteTime">
      <summary>
            上次写入当前文件或目录的时间
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.FileTransfer.RemoteFileSystemInfo.Name">
      <summary>
            目录或文件的名称。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.RemoteFileSystemInfo.Package(TouchSocket.Core.ByteBlock@)">
      <summary>
            打包。
            <para>重写的话，约定基类方法必须先执行</para></summary>
      <param name="byteBlock">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>byteBlock</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.RemoteFileSystemInfo.Package(TouchSocket.Core.ByteBlock@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.RemoteFileSystemInfo.Unpackage(TouchSocket.Core.ByteBlock@)">
      <summary>
            解包。
            <para>重写的话，约定基类方法必须先执行</para></summary>
      <param name="byteBlock">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>byteBlock</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.RemoteFileSystemInfo.Unpackage(TouchSocket.Core.ByteBlock@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:TouchSocket.Dmtp.FileTransfer.TransferType">
      <summary>
            传输类型
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.FileTransfer.TransferType.Push">
      <summary>
            推送
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.FileTransfer.TransferType.Pull">
      <summary>
            拉取
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.FileTransfer.TransferType.SmallPush">
      <summary>
            小文件推送
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.FileTransfer.TransferType.SmallPull">
      <summary>
            小文件拉取
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.FileTransfer.TransferTypeExtension">
      <summary>
            TransferTypeExtension
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.FileTransfer.TransferTypeExtension.IsPull(TouchSocket.Dmtp.FileTransfer.TransferType)">
      <summary>
            表示当前传输类型是否属于<see cref="F:TouchSocket.Dmtp.FileTransfer.TransferType.Pull" />、<see cref="F:TouchSocket.Dmtp.FileTransfer.TransferType.SmallPull" />其中的一种。
            </summary>
      <param name="transferType"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.FileTransfer.TransferTypeExtension.IsPull(TouchSocket.Dmtp.FileTransfer.TransferType)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Dmtp.Redis.DmtpRedisActor">
      <summary>
            DmtpRedisActor
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.DmtpRedisActor.#ctor(TouchSocket.Dmtp.IDmtpActor)">
      <summary>
            DmtpRedisActor
            </summary>
      <param name="dmtpActor">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dmtpActor</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.#ctor(TouchSocket.Dmtp.IDmtpActor)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.DmtpRedisActor.Add``1(System.String,``0,System.Int32)">
      <summary>
    
            添加缓存。当缓存存在时，不会添加成功。
            
  </summary>
      <param name="key">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>key</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.Add``1(System.String,``0,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.Add``1(System.String,``0,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="duration">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>duration</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.Add``1(System.String,``0,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TValue</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.Add``1(System.String,``0,System.Int32)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.Add``1(System.String,``0,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.ArgumentNullException">参数为空</exception>
      <exception cref="T:System.TimeoutException">操作超时</exception>
      <exception cref="T:System.Exception">其他异常</exception>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.DmtpRedisActor.AddCache(TouchSocket.Core.ICacheEntry{System.String,System.Byte[]})">
      <summary>
            添加缓存。当缓存存在时，不会添加成功。
            </summary>
      <param name="entity">缓存实体</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.AddCache(TouchSocket.Core.ICacheEntry{System.String,System.Byte[]})</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.DmtpRedisActor.AddCacheAsync(TouchSocket.Core.ICacheEntry{System.String,System.Byte[]})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.AddCacheAsync(TouchSocket.Core.ICacheEntry{System.String,System.Byte[]})</parameter>
          </include>
        </markup>
      </summary>
      <param name="entity">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>entity</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.AddCacheAsync(TouchSocket.Core.ICacheEntry{System.String,System.Byte[]})</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.AddCacheAsync(TouchSocket.Core.ICacheEntry{System.String,System.Byte[]})</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.ArgumentNullException">参数为空</exception>
      <exception cref="T:System.TimeoutException">操作超时</exception>
      <exception cref="T:System.Exception">其他异常</exception>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.DmtpRedisActor.ClearCache">
      <summary>
            清空所有缓存
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.DmtpRedisActor.ClearCacheAsync">
      <summary>
            清空所有缓存
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.ClearCacheAsync</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.DmtpRedisActor.ContainsCache(System.String)">
      <summary>
            判断缓存是否存在，且在生命周期内。
            </summary>
      <param name="key">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>key</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.ContainsCache(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.ContainsCache(System.String)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.DmtpRedisActor.ContainsCacheAsync(System.String)">
      <summary>
            判断缓存是否存在，且在生命周期内。
            </summary>
      <param name="key">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>key</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.ContainsCacheAsync(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.ContainsCacheAsync(System.String)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="P:TouchSocket.Dmtp.Redis.DmtpRedisActor.Converter">
      <summary>
            序列化转换器。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.Redis.DmtpRedisActor.DmtpActor">
      <summary>
            包含当前Actor的父容器。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.DmtpRedisActor.Get``1(System.String)">
      <summary>
            获取缓存的键值对。
            </summary>
      <param name="key">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>key</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.Get``1(System.String)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TValue</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.Get``1(System.String)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.Get``1(System.String)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.ArgumentNullException">参数为空</exception>
      <exception cref="T:System.TimeoutException">操作超时</exception>
      <exception cref="T:System.Exception">其他异常</exception>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.DmtpRedisActor.GetCache(System.String)">
      <summary>
            获取指定键的缓存。
            </summary>
      <param name="key">键</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.GetCache(System.String)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.DmtpRedisActor.GetCacheAsync(System.String)">
      <summary>
            获取指定键的缓存。
            </summary>
      <param name="key">键</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.GetCacheAsync(System.String)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="P:TouchSocket.Dmtp.Redis.DmtpRedisActor.ICache">
      <summary>
            实际储存缓存。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.DmtpRedisActor.InputReceivedData(TouchSocket.Dmtp.DmtpMessage)">
      <summary>
            处理收到的消息
            </summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.InputReceivedData(TouchSocket.Dmtp.DmtpMessage)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.InputReceivedData(TouchSocket.Dmtp.DmtpMessage)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.DmtpRedisActor.RemoveCache(System.String)">
      <summary>
            移除指定键的缓存。
            </summary>
      <param name="key">键</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.RemoveCache(System.String)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.DmtpRedisActor.RemoveCacheAsync(System.String)">
      <summary>
            移除指定键的缓存。
            </summary>
      <param name="key">键</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.RemoveCacheAsync(System.String)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.DmtpRedisActor.Set``1(System.String,``0,System.Int32)">
      <summary>
    
            设置缓存，不管缓存存不存在，都会添加。
            
  </summary>
      <param name="key">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>key</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.Set``1(System.String,``0,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.Set``1(System.String,``0,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="duration">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>duration</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.Set``1(System.String,``0,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TValue</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.Set``1(System.String,``0,System.Int32)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.Set``1(System.String,``0,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.ArgumentNullException">参数为空</exception>
      <exception cref="T:System.TimeoutException">操作超时</exception>
      <exception cref="T:System.Exception">其他异常</exception>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.DmtpRedisActor.SetCache(TouchSocket.Core.ICacheEntry{System.String,System.Byte[]})">
      <summary>
            设置缓存，不管缓存存不存在，都会添加。
            </summary>
      <param name="entity"></param>
      <param name="cache">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cache</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.SetCache(TouchSocket.Core.ICacheEntry{System.String,System.Byte[]})</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.SetCache(TouchSocket.Core.ICacheEntry{System.String,System.Byte[]})</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.DmtpRedisActor.SetCacheAsync(TouchSocket.Core.ICacheEntry{System.String,System.Byte[]})">
      <summary>
            设置缓存，不管缓存存不存在，都会添加。
            </summary>
      <param name="entity">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>entity</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.SetCacheAsync(TouchSocket.Core.ICacheEntry{System.String,System.Byte[]})</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.SetCacheAsync(TouchSocket.Core.ICacheEntry{System.String,System.Byte[]})</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.DmtpRedisActor.SetProtocolFlags(System.UInt16)">
      <summary>
            设置处理协议标识的起始标识。
            </summary>
      <param name="start">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>start</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.SetProtocolFlags(System.UInt16)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:TouchSocket.Dmtp.Redis.DmtpRedisActor.Timeout">
      <summary>
            超时设定。默认30000ms
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.DmtpRedisActor.TryGet``1(System.String,``0@)">
      <summary>
            获取指定键的值。
            </summary>
      <param name="key">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>key</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.TryGet``1(System.String,``0@)</parameter>
          </include>
        </markup>
      </param>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.TryGet``1(System.String,``0@)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TValue</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.TryGet``1(System.String,``0@)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActor.TryGet``1(System.String,``0@)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.ArgumentNullException">参数为空</exception>
      <exception cref="T:System.TimeoutException">操作超时</exception>
      <exception cref="T:System.Exception">其他异常</exception>
    </member>
    <member name="T:TouchSocket.Dmtp.Redis.DmtpRedisActorExtensions">
      <summary>
            DmtpRedisActorExtensions
            </summary>
    </member>
    <member name="F:TouchSocket.Dmtp.Redis.DmtpRedisActorExtensions.DmtpRedisActorProperty">
      <summary>
            获取或设置RedisActor的注入键。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.DmtpRedisActorExtensions.GetDmtpRedisActor(TouchSocket.Dmtp.IDmtpActor)">
      <summary>
            从<see cref="T:TouchSocket.Dmtp.DmtpActor" />中获得<see cref="T:TouchSocket.Dmtp.Redis.IDmtpRedisActor" /></summary>
      <param name="dmtpActor"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActorExtensions.GetDmtpRedisActor(TouchSocket.Dmtp.IDmtpActor)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.DmtpRedisActorExtensions.GetDmtpRedisActor(TouchSocket.Dmtp.IDmtpActorObject)">
      <summary>
            获取<see cref="T:TouchSocket.Dmtp.Redis.IDmtpRedisActor" /></summary>
      <param name="client"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActorExtensions.GetDmtpRedisActor(TouchSocket.Dmtp.IDmtpActorObject)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.Exception"></exception>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.DmtpRedisActorExtensions.UseDmtpRedis(TouchSocket.Core.IPluginManager)">
      <summary>
            使用Redis插件。仅：Dmtp端会生效。
            </summary>
      <param name="pluginManager">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pluginManager</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActorExtensions.UseDmtpRedis(TouchSocket.Core.IPluginManager)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.DmtpRedisActorExtensions.UseDmtpRedis(TouchSocket.Core.IPluginManager)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Dmtp.Redis.IDmtpRedisActor">
      <summary>
            具有远程键值存贮的操作端。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.IDmtpRedisActor.Add``1(System.String,``0,System.Int32)">
      <summary>
    
            添加缓存。当缓存存在时，不会添加成功。
            
  </summary>
      <param name="key">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>key</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.IDmtpRedisActor.Add``1(System.String,``0,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.IDmtpRedisActor.Add``1(System.String,``0,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="duration">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>duration</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.IDmtpRedisActor.Add``1(System.String,``0,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TValue</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.IDmtpRedisActor.Add``1(System.String,``0,System.Int32)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.IDmtpRedisActor.Add``1(System.String,``0,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.ArgumentNullException">参数为空</exception>
      <exception cref="T:System.TimeoutException">操作超时</exception>
      <exception cref="T:System.Exception">其他异常</exception>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.IDmtpRedisActor.AddCacheAsync(TouchSocket.Core.ICacheEntry{System.String,System.Byte[]})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.IDmtpRedisActor.AddCacheAsync(TouchSocket.Core.ICacheEntry{System.String,System.Byte[]})</parameter>
          </include>
        </markup>
      </summary>
      <param name="entity">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>entity</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.IDmtpRedisActor.AddCacheAsync(TouchSocket.Core.ICacheEntry{System.String,System.Byte[]})</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.IDmtpRedisActor.AddCacheAsync(TouchSocket.Core.ICacheEntry{System.String,System.Byte[]})</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.ArgumentNullException">参数为空</exception>
      <exception cref="T:System.TimeoutException">操作超时</exception>
      <exception cref="T:System.Exception">其他异常</exception>
    </member>
    <member name="P:TouchSocket.Dmtp.Redis.IDmtpRedisActor.Converter">
      <summary>
            序列化转换器。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.IDmtpRedisActor.Get``1(System.String)">
      <summary>
            获取缓存的键值对。
            </summary>
      <param name="key">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>key</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.IDmtpRedisActor.Get``1(System.String)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TValue</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.IDmtpRedisActor.Get``1(System.String)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.IDmtpRedisActor.Get``1(System.String)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.ArgumentNullException">参数为空</exception>
      <exception cref="T:System.TimeoutException">操作超时</exception>
      <exception cref="T:System.Exception">其他异常</exception>
    </member>
    <member name="P:TouchSocket.Dmtp.Redis.IDmtpRedisActor.ICache">
      <summary>
            实际储存缓存。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.IDmtpRedisActor.Set``1(System.String,``0,System.Int32)">
      <summary>
    
            设置缓存，不管缓存存不存在，都会添加。
            
  </summary>
      <param name="key">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>key</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.IDmtpRedisActor.Set``1(System.String,``0,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.IDmtpRedisActor.Set``1(System.String,``0,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="duration">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>duration</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.IDmtpRedisActor.Set``1(System.String,``0,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TValue</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.IDmtpRedisActor.Set``1(System.String,``0,System.Int32)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.IDmtpRedisActor.Set``1(System.String,``0,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.ArgumentNullException">参数为空</exception>
      <exception cref="T:System.TimeoutException">操作超时</exception>
      <exception cref="T:System.Exception">其他异常</exception>
    </member>
    <member name="P:TouchSocket.Dmtp.Redis.IDmtpRedisActor.Timeout">
      <summary>
            超时设定。默认30000ms
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.IDmtpRedisActor.TryGet``1(System.String,``0@)">
      <summary>
            获取指定键的值。
            </summary>
      <param name="key">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>key</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.IDmtpRedisActor.TryGet``1(System.String,``0@)</parameter>
          </include>
        </markup>
      </param>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.IDmtpRedisActor.TryGet``1(System.String,``0@)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TValue">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TValue</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.IDmtpRedisActor.TryGet``1(System.String,``0@)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.IDmtpRedisActor.TryGet``1(System.String,``0@)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.ArgumentNullException">参数为空</exception>
      <exception cref="T:System.TimeoutException">操作超时</exception>
      <exception cref="T:System.Exception">其他异常</exception>
    </member>
    <member name="T:TouchSocket.Dmtp.Redis.RedisFeature">
      <summary>
            RedisFeature
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.RedisFeature.#ctor">
      <summary>
            RedisFeature
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.Redis.RedisFeature.Converter">
      <summary>
            定义元素的序列化和反序列化。
            <para>注意：Byte[]类型不用考虑。内部单独会做处理。</para></summary>
    </member>
    <member name="P:TouchSocket.Dmtp.Redis.RedisFeature.ICache">
      <summary>
            实际储存缓存。
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.RedisFeature.OnDmtpHandshaking(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Dmtp.DmtpVerifyEventArgs)">
      <summary>
            在Dmtp建立握手连接之前。
            </summary>
      <param name="client">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>client</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.RedisFeature.OnDmtpHandshaking(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Dmtp.DmtpVerifyEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.RedisFeature.OnDmtpHandshaking(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Dmtp.DmtpVerifyEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.RedisFeature.OnDmtpHandshaking(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Dmtp.DmtpVerifyEventArgs)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.RedisFeature.OnDmtpReceived(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Dmtp.DmtpMessageEventArgs)">
      <summary>
            收到DmtpMessage数据
            </summary>
      <param name="client">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>client</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.RedisFeature.OnDmtpReceived(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Dmtp.DmtpMessageEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <param name="e">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.RedisFeature.OnDmtpReceived(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Dmtp.DmtpMessageEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.RedisFeature.OnDmtpReceived(TouchSocket.Dmtp.IDmtpActorObject,TouchSocket.Dmtp.DmtpMessageEventArgs)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.Redis.RedisFeature.ReserveProtocolSize">
      <summary>
            保留协议长度
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.RedisFeature.SetCache(TouchSocket.Core.ICache{System.String,System.Byte[]})">
      <summary>
            设置实际储存缓存。默认使用<see cref="T:TouchSocket.Core.MemoryCache`2" /></summary>
      <param name="cache"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.RedisFeature.SetCache(TouchSocket.Core.ICache{System.String,System.Byte[]})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.RedisFeature.SetConverter(TouchSocket.Core.BytesConverter)">
      <summary>
            定义元素的序列化和反序列化。
            <para>注意：Byte[]类型不用考虑。内部单独会做处理。</para></summary>
      <param name="converter">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>converter</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.RedisFeature.SetConverter(TouchSocket.Core.BytesConverter)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.RedisFeature.SetConverter(TouchSocket.Core.BytesConverter)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.Redis.RedisFeature.SetProtocolFlags(System.UInt16)">
      <summary>
            设置<see cref="T:TouchSocket.Dmtp.Redis.RedisFeature" />的起始协议。
            <para>
            默认起始为：25，保留5个协议长度。
            </para></summary>
      <param name="start"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Redis.RedisFeature.SetProtocolFlags(System.UInt16)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.Redis.RedisFeature.StartProtocol">
      <summary>
            起始协议
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.Rpc.DefaultSerializationSelector">
      <summary>
            默认序列化选择器
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DefaultSerializationSelector.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>TouchSocket.Dmtp.Rpc.DefaultSerializationSelector</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DefaultSerializationSelector.DeserializeParameter(TouchSocket.Core.SerializationType,System.Byte[],System.Type)">
      <summary>
            反序列化
            </summary>
      <param name="serializationType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>serializationType</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DefaultSerializationSelector.DeserializeParameter(TouchSocket.Core.SerializationType,System.Byte[],System.Type)</parameter>
          </include>
        </markup>
      </param>
      <param name="parameterBytes">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>parameterBytes</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DefaultSerializationSelector.DeserializeParameter(TouchSocket.Core.SerializationType,System.Byte[],System.Type)</parameter>
          </include>
        </markup>
      </param>
      <param name="parameterType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>parameterType</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DefaultSerializationSelector.DeserializeParameter(TouchSocket.Core.SerializationType,System.Byte[],System.Type)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DefaultSerializationSelector.DeserializeParameter(TouchSocket.Core.SerializationType,System.Byte[],System.Type)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DefaultSerializationSelector.SerializeParameter(TouchSocket.Core.SerializationType,System.Object)">
      <summary>
            序列化参数
            </summary>
      <param name="serializationType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>serializationType</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DefaultSerializationSelector.SerializeParameter(TouchSocket.Core.SerializationType,System.Object)</parameter>
          </include>
        </markup>
      </param>
      <param name="parameter">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>parameter</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DefaultSerializationSelector.SerializeParameter(TouchSocket.Core.SerializationType,System.Object)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DefaultSerializationSelector.SerializeParameter(TouchSocket.Core.SerializationType,System.Object)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Dmtp.Rpc.DmtpInvokeOption">
      <summary>
            Rpc调用设置
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpInvokeOption.#ctor">
      <summary>
            构造函数
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpInvokeOption.#ctor(System.Int32)">
      <summary>
            构造函数
            </summary>
      <param name="timeout">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeout</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpInvokeOption.#ctor(System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:TouchSocket.Dmtp.Rpc.DmtpInvokeOption.Metadata">
      <summary>
            元数据
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.Rpc.DmtpInvokeOption.SerializationType">
      <summary>
            DmtpRpc序列化类型
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.Rpc.DmtpRpcActor">
      <summary>
            DmtpRpcActor
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.#ctor(TouchSocket.Dmtp.IDmtpActor,TouchSocket.Rpc.IRpcServerProvider,TouchSocket.Core.IResolver)">
      <summary>
            创建一个DmtpRpcActor
            </summary>
      <param name="dmtpActor">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dmtpActor</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.#ctor(TouchSocket.Dmtp.IDmtpActor,TouchSocket.Rpc.IRpcServerProvider,TouchSocket.Core.IResolver)</parameter>
          </include>
        </markup>
      </param>
      <param name="rpcServerProvider">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rpcServerProvider</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.#ctor(TouchSocket.Dmtp.IDmtpActor,TouchSocket.Rpc.IRpcServerProvider,TouchSocket.Core.IResolver)</parameter>
          </include>
        </markup>
      </param>
      <param name="m_resolver">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>m_resolver</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.#ctor(TouchSocket.Dmtp.IDmtpActor,TouchSocket.Rpc.IRpcServerProvider,TouchSocket.Core.IResolver)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:TouchSocket.Dmtp.Rpc.DmtpRpcActor.DmtpActor">
      <summary>
            包含当前Actor的父容器。
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.Rpc.DmtpRpcActor.GetInvokeMethod">
      <summary>
            获取调用的函数
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.InputReceivedData(TouchSocket.Dmtp.DmtpMessage)">
      <summary>
            处理收到的消息
            </summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.InputReceivedData(TouchSocket.Dmtp.DmtpMessage)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.InputReceivedData(TouchSocket.Dmtp.DmtpMessage)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.Invoke(System.String,System.String,TouchSocket.Rpc.IInvokeOption,System.Object[])">
      <summary>
            调用对应Id的客户端Rpc
            </summary>
      <param name="targetId">客户端Id</param>
      <param name="invokeKey">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>invokeKey</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.Invoke(System.String,System.String,TouchSocket.Rpc.IInvokeOption,System.Object[])</parameter>
          </include>
        </markup>
      </param>
      <param name="invokeOption">调用配置</param>
      <param name="parameters">参数</param>
      <exception cref="T:System.TimeoutException">调用超时</exception>
      <exception cref="T:TouchSocket.Rpc.RpcInvokeException">调用内部异常</exception>
      <exception cref="T:System.Exception">其他异常</exception>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.Invoke(System.String,System.String,TouchSocket.Rpc.IInvokeOption,System.Object[]@,System.Type[])">
      <summary>
            调用对应Id的客户端Rpc
            </summary>
      <param name="targetId">客户端Id</param>
      <param name="invokeKey">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>invokeKey</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.Invoke(System.String,System.String,TouchSocket.Rpc.IInvokeOption,System.Object[]@,System.Type[])</parameter>
          </include>
        </markup>
      </param>
      <param name="invokeOption">调用配置</param>
      <param name="parameters">参数</param>
      <param name="types">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>types</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.Invoke(System.String,System.String,TouchSocket.Rpc.IInvokeOption,System.Object[]@,System.Type[])</parameter>
          </include>
        </markup>
      </param>
      <exception cref="T:System.TimeoutException">调用超时</exception>
      <exception cref="T:TouchSocket.Rpc.RpcInvokeException">调用内部异常</exception>
      <exception cref="T:System.Exception">其他异常</exception>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.Invoke(System.String,TouchSocket.Rpc.IInvokeOption,System.Object[])">
      <summary>
            Rpc调用
            <para>如果调用端为客户端，则会调用服务器Rpc服务。</para><para>如果调用端为服务器，则会反向调用客户端Rpc服务。</para></summary>
      <param name="invokeKey">调用键</param>
      <param name="parameters">参数</param>
      <param name="invokeOption">Rpc调用设置</param>
      <exception cref="T:System.TimeoutException">调用超时</exception>
      <exception cref="T:TouchSocket.Rpc.RpcInvokeException">Rpc异常</exception>
      <exception cref="T:System.Exception">其他异常</exception>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.Invoke(System.String,TouchSocket.Rpc.IInvokeOption,System.Object[]@,System.Type[])">
      <summary>
            Rpc调用
            </summary>
      <param name="invokeKey">调用键</param>
      <param name="parameters">参数</param>
      <param name="types">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>types</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.Invoke(System.String,TouchSocket.Rpc.IInvokeOption,System.Object[]@,System.Type[])</parameter>
          </include>
        </markup>
      </param>
      <param name="invokeOption">Rpc调用设置</param>
      <exception cref="T:System.TimeoutException">调用超时</exception>
      <exception cref="T:TouchSocket.Rpc.RpcInvokeException">Rpc异常</exception>
      <exception cref="T:System.Exception">其他异常</exception>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.Invoke(System.Type,System.String,System.String,TouchSocket.Rpc.IInvokeOption,System.Object[])">
      <summary>
            调用对应Id的客户端Rpc
            </summary>
      <param name="returnType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>returnType</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.Invoke(System.Type,System.String,System.String,TouchSocket.Rpc.IInvokeOption,System.Object[])</parameter>
          </include>
        </markup>
      </param>
      <param name="targetId">客户端Id</param>
      <param name="invokeKey">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>invokeKey</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.Invoke(System.Type,System.String,System.String,TouchSocket.Rpc.IInvokeOption,System.Object[])</parameter>
          </include>
        </markup>
      </param>
      <param name="invokeOption">调用配置</param>
      <param name="parameters">参数</param>
      <returns>返回值</returns>
      <exception cref="T:System.TimeoutException">调用超时</exception>
      <exception cref="T:TouchSocket.Rpc.RpcInvokeException">调用内部异常</exception>
      <exception cref="T:System.Exception">其他异常</exception>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.Invoke(System.Type,System.String,System.String,TouchSocket.Rpc.IInvokeOption,System.Object[]@,System.Type[])">
      <summary>
            调用对应Id的客户端Rpc
            </summary>
      <param name="returnType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>returnType</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.Invoke(System.Type,System.String,System.String,TouchSocket.Rpc.IInvokeOption,System.Object[]@,System.Type[])</parameter>
          </include>
        </markup>
      </param>
      <param name="targetId">客户端Id</param>
      <param name="invokeKey">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>invokeKey</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.Invoke(System.Type,System.String,System.String,TouchSocket.Rpc.IInvokeOption,System.Object[]@,System.Type[])</parameter>
          </include>
        </markup>
      </param>
      <param name="invokeOption">调用配置</param>
      <param name="parameters">参数</param>
      <param name="types">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>types</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.Invoke(System.Type,System.String,System.String,TouchSocket.Rpc.IInvokeOption,System.Object[]@,System.Type[])</parameter>
          </include>
        </markup>
      </param>
      <returns>返回值</returns>
      <exception cref="T:System.TimeoutException">调用超时</exception>
      <exception cref="T:TouchSocket.Rpc.RpcInvokeException">调用内部异常</exception>
      <exception cref="T:System.Exception">其他异常</exception>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.Invoke(System.Type,System.String,TouchSocket.Rpc.IInvokeOption,System.Object[])">
      <summary>
            Rpc调用
            <para>如果调用端为客户端，则会调用服务器Rpc服务。</para><para>如果调用端为服务器，则会反向调用客户端Rpc服务。</para></summary>
      <param name="returnType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>returnType</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.Invoke(System.Type,System.String,TouchSocket.Rpc.IInvokeOption,System.Object[])</parameter>
          </include>
        </markup>
      </param>
      <param name="invokeKey">调用键</param>
      <param name="parameters">参数</param>
      <param name="invokeOption">Rpc调用设置</param>
      <returns>服务器返回结果</returns>
      <exception cref="T:System.TimeoutException">调用超时</exception>
      <exception cref="T:TouchSocket.Rpc.RpcInvokeException">Rpc异常</exception>
      <exception cref="T:System.Exception">其他异常</exception>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.Invoke(System.Type,System.String,TouchSocket.Rpc.IInvokeOption,System.Object[]@,System.Type[])">
      <summary>
            Rpc调用
            <para>如果调用端为客户端，则会调用服务器Rpc服务。</para><para>如果调用端为服务器，则会反向调用客户端Rpc服务。</para></summary>
      <param name="returnType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>returnType</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.Invoke(System.Type,System.String,TouchSocket.Rpc.IInvokeOption,System.Object[]@,System.Type[])</parameter>
          </include>
        </markup>
      </param>
      <param name="invokeKey">调用键</param>
      <param name="parameters">参数</param>
      <param name="types">对应类型集合</param>
      <param name="invokeOption">Rpc调用设置</param>
      <returns>返回值</returns>
      <exception cref="T:System.TimeoutException">调用超时</exception>
      <exception cref="T:TouchSocket.Rpc.RpcInvokeException">Rpc异常</exception>
      <exception cref="T:System.Exception">其他异常</exception>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.InvokeAsync(System.String,System.String,TouchSocket.Rpc.IInvokeOption,System.Object[])">
      <summary>
            调用对应Id的客户端Rpc
            </summary>
      <param name="targetId">客户端Id</param>
      <param name="invokeKey">方法名</param>
      <param name="invokeOption">调用配置</param>
      <param name="parameters">参数</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.InvokeAsync(System.String,System.String,TouchSocket.Rpc.IInvokeOption,System.Object[])</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.TimeoutException">调用超时</exception>
      <exception cref="T:TouchSocket.Rpc.RpcInvokeException">调用内部异常</exception>
      <exception cref="T:System.Exception">其他异常</exception>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.InvokeAsync(System.String,TouchSocket.Rpc.IInvokeOption,System.Object[])">
      <summary>
            Rpc调用
            <para>如果调用端为客户端，则会调用服务器Rpc服务。</para><para>如果调用端为服务器，则会反向调用客户端Rpc服务。</para></summary>
      <param name="invokeKey">调用键</param>
      <param name="parameters">参数</param>
      <param name="invokeOption">Rpc调用设置</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.InvokeAsync(System.String,TouchSocket.Rpc.IInvokeOption,System.Object[])</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.TimeoutException">调用超时</exception>
      <exception cref="T:TouchSocket.Rpc.RpcInvokeException">Rpc异常</exception>
      <exception cref="T:System.Exception">其他异常</exception>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.InvokeAsync(System.Type,System.String,System.String,TouchSocket.Rpc.IInvokeOption,System.Object[])">
      <summary>
            调用对应Id的客户端Rpc
            </summary>
      <param name="returnType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>returnType</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.InvokeAsync(System.Type,System.String,System.String,TouchSocket.Rpc.IInvokeOption,System.Object[])</parameter>
          </include>
        </markup>
      </param>
      <param name="targetId">客户端Id</param>
      <param name="invokeKey">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>invokeKey</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.InvokeAsync(System.Type,System.String,System.String,TouchSocket.Rpc.IInvokeOption,System.Object[])</parameter>
          </include>
        </markup>
      </param>
      <param name="invokeOption">调用配置</param>
      <param name="parameters">参数</param>
      <returns>返回值</returns>
      <exception cref="T:System.TimeoutException">调用超时</exception>
      <exception cref="T:TouchSocket.Rpc.RpcInvokeException">调用内部异常</exception>
      <exception cref="T:System.Exception">其他异常</exception>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.InvokeAsync(System.Type,System.String,TouchSocket.Rpc.IInvokeOption,System.Object[])">
      <summary>
            Rpc调用
            <para>如果调用端为客户端，则会调用服务器Rpc服务。</para><para>如果调用端为服务器，则会反向调用客户端Rpc服务。</para></summary>
      <param name="returnType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>returnType</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.InvokeAsync(System.Type,System.String,TouchSocket.Rpc.IInvokeOption,System.Object[])</parameter>
          </include>
        </markup>
      </param>
      <param name="invokeKey">调用键</param>
      <param name="parameters">参数</param>
      <param name="invokeOption">Rpc调用设置</param>
      <returns>服务器返回结果</returns>
      <exception cref="T:System.TimeoutException">调用超时</exception>
      <exception cref="T:TouchSocket.Rpc.RpcInvokeException">Rpc异常</exception>
      <exception cref="T:System.Exception">其他异常</exception>
    </member>
    <member name="P:TouchSocket.Dmtp.Rpc.DmtpRpcActor.SerializationSelector">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:TouchSocket.Dmtp.Rpc.DmtpRpcActor.SerializationSelector</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.SetProtocolFlags(System.UInt16)">
      <summary>
            设置处理协议标识的起始标识。
            </summary>
      <param name="start">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>start</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActor.SetProtocolFlags(System.UInt16)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:TouchSocket.Dmtp.Rpc.DmtpRpcActorExtension">
      <summary>
            DmtpRpcActorExtension
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcActorExtension.CreateTargetDmtpRpcActor(TouchSocket.Dmtp.IDmtpActorObject,System.String)">
      <summary>
            新创建一个直接向目标地址请求的<see cref="T:TouchSocket.Rpc.IRpcClient" />客户端。
            </summary>
      <param name="client"></param>
      <param name="targetId"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActorExtension.CreateTargetDmtpRpcActor(TouchSocket.Dmtp.IDmtpActorObject,System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="F:TouchSocket.Dmtp.Rpc.DmtpRpcActorExtension.DmtpRpcActorProperty">
      <summary>
            DmtpRpcActor
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcActorExtension.GetDmtpRpcActor(TouchSocket.Dmtp.IDmtpActor)">
      <summary>
            从<see cref="T:TouchSocket.Dmtp.DmtpActor" />中获取<see cref="T:TouchSocket.Dmtp.Rpc.IDmtpRpcActor" /></summary>
      <param name="dmtpActor"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActorExtension.GetDmtpRpcActor(TouchSocket.Dmtp.IDmtpActor)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcActorExtension.GetDmtpRpcActor(TouchSocket.Dmtp.IDmtpActorObject)">
      <summary>
            从<see cref="T:TouchSocket.Dmtp.IDmtpActorObject" />中获取<see cref="T:TouchSocket.Dmtp.Rpc.IDmtpRpcActor" />，以实现Rpc调用功能。
            </summary>
      <param name="client"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActorExtension.GetDmtpRpcActor(TouchSocket.Dmtp.IDmtpActorObject)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcActorExtension.GetDmtpRpcActor``1(TouchSocket.Dmtp.IDmtpActorObject)">
      <summary>
            从<see cref="T:TouchSocket.Dmtp.IDmtpActorObject" />中获取继承实现<see cref="T:TouchSocket.Dmtp.Rpc.IDmtpRpcActor" />的功能件，以实现Rpc调用功能。
            </summary>
      <param name="client"></param>
      <typeparam name="TDmtpRpcActor">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TDmtpRpcActor</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActorExtension.GetDmtpRpcActor``1(TouchSocket.Dmtp.IDmtpActorObject)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActorExtension.GetDmtpRpcActor``1(TouchSocket.Dmtp.IDmtpActorObject)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:System.ArgumentNullException"></exception>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcActorExtension.UseDmtpRpc(TouchSocket.Core.IPluginManager)">
      <summary>
            使用DmtpRpc插件
            </summary>
      <param name="pluginManager">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pluginManager</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActorExtension.UseDmtpRpc(TouchSocket.Core.IPluginManager)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActorExtension.UseDmtpRpc(TouchSocket.Core.IPluginManager)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcActorExtension.UseDmtpRpc``1(TouchSocket.Core.IPluginManager)">
      <summary>
            使用自定义的DmtpRpc插件。
            </summary>
      <param name="pluginManager">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pluginManager</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActorExtension.UseDmtpRpc``1(TouchSocket.Core.IPluginManager)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="TDmtpRpcFeature">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>TDmtpRpcFeature</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActorExtension.UseDmtpRpc``1(TouchSocket.Core.IPluginManager)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcActorExtension.UseDmtpRpc``1(TouchSocket.Core.IPluginManager)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Dmtp.Rpc.DmtpRpcAttribute">
      <summary>
            DmtpRpc方法标记属性类
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcAttribute.#ctor">
      <summary>
            适用于DmtpRpc的标记
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcAttribute.#ctor(System.Boolean)">
      <summary>
             适用于DmtpRpc的标记.
             <para>是否仅以函数名调用，当为True是，调用时仅需要传入方法名即可。</para></summary>
      <param name="methodInvoke">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>methodInvoke</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcAttribute.#ctor(System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcAttribute.#ctor(System.String)">
      <summary>
            适用于DmtpRpc的标记.
            </summary>
      <param name="invokenKey">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>invokenKey</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcAttribute.#ctor(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:TouchSocket.Dmtp.Rpc.DmtpRpcCallContext">
      <summary>
            DmtpRpcCallContext
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcCallContext.#ctor(System.Object,TouchSocket.Rpc.MethodInstance,TouchSocket.Dmtp.Rpc.DmtpRpcPackage,TouchSocket.Core.IResolver)">
      <summary>
            DmtpRpcCallContext
            </summary>
      <param name="caller">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>caller</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcCallContext.#ctor(System.Object,TouchSocket.Rpc.MethodInstance,TouchSocket.Dmtp.Rpc.DmtpRpcPackage,TouchSocket.Core.IResolver)</parameter>
          </include>
        </markup>
      </param>
      <param name="methodInstance">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>methodInstance</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcCallContext.#ctor(System.Object,TouchSocket.Rpc.MethodInstance,TouchSocket.Dmtp.Rpc.DmtpRpcPackage,TouchSocket.Core.IResolver)</parameter>
          </include>
        </markup>
      </param>
      <param name="dmtpRpcPackage">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dmtpRpcPackage</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcCallContext.#ctor(System.Object,TouchSocket.Rpc.MethodInstance,TouchSocket.Dmtp.Rpc.DmtpRpcPackage,TouchSocket.Core.IResolver)</parameter>
          </include>
        </markup>
      </param>
      <param name="resolver">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>resolver</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcCallContext.#ctor(System.Object,TouchSocket.Rpc.MethodInstance,TouchSocket.Dmtp.Rpc.DmtpRpcPackage,TouchSocket.Core.IResolver)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:TouchSocket.Dmtp.Rpc.DmtpRpcCallContext.DmtpRpcPackage">
      <summary>
            DmtpRpcPackage
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.Rpc.DmtpRpcCallContext.Metadata">
      <summary>
            调用元数据
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.Rpc.DmtpRpcCallContext.SerializationType">
      <summary>
            序列化类型
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.Rpc.DmtpRpcDispatchProxy">
      <summary>
            DmtpRpcDispatchProxy
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.Rpc.DmtpRpcDispatchProxy`1">
      <summary>
            DmtpRpcDispatchProxy
            </summary>
      <typeparam name="TClient"></typeparam>
    </member>
    <member name="T:TouchSocket.Dmtp.Rpc.DmtpRpcDispatchProxy`2">
      <summary>
            DmtpRpcDispatchProxy
            </summary>
      <typeparam name="TClient"></typeparam>
      <typeparam name="TAttribute"></typeparam>
    </member>
    <member name="T:TouchSocket.Dmtp.Rpc.DmtpRpcFeature">
      <summary>
            能够基于Dmtp协议，提供Rpc的功能
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcFeature.#ctor(TouchSocket.Core.IResolver)">
      <summary>
            能够基于Dmtp协议，提供Rpc的功能
            </summary>
      <param name="resolver">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>resolver</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcFeature.#ctor(TouchSocket.Core.IResolver)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:TouchSocket.Dmtp.Rpc.DmtpRpcFeature.ActionMap">
      <summary>
            方法映射表
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.Rpc.DmtpRpcFeature.CreateDmtpRpcActor">
      <summary>
            创建DmtpRpc实例
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.Rpc.DmtpRpcFeature.ReserveProtocolSize">
      <summary>
            保留协议长度
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.Rpc.DmtpRpcFeature.SerializationSelector">
      <summary>
            序列化选择器
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcFeature.SetCreateDmtpRpcActor(System.Func{TouchSocket.Dmtp.IDmtpActor,TouchSocket.Rpc.IRpcServerProvider,TouchSocket.Core.IResolver,TouchSocket.Dmtp.Rpc.DmtpRpcActor})">
      <summary>
            设置创建DmtpRpc实例
            </summary>
      <param name="createDmtpRpcActor">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>createDmtpRpcActor</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcFeature.SetCreateDmtpRpcActor(System.Func{TouchSocket.Dmtp.IDmtpActor,TouchSocket.Rpc.IRpcServerProvider,TouchSocket.Core.IResolver,TouchSocket.Dmtp.Rpc.DmtpRpcActor})</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcFeature.SetCreateDmtpRpcActor(System.Func{TouchSocket.Dmtp.IDmtpActor,TouchSocket.Rpc.IRpcServerProvider,TouchSocket.Core.IResolver,TouchSocket.Dmtp.Rpc.DmtpRpcActor})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcFeature.SetProtocolFlags(System.UInt16)">
      <summary>
            设置<see cref="T:TouchSocket.Dmtp.Rpc.DmtpRpcFeature" />的起始协议。
            <para>
            默认起始为：20，保留5个协议长度。
            </para></summary>
      <param name="start"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcFeature.SetProtocolFlags(System.UInt16)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcFeature.SetSerializationSelector(TouchSocket.Dmtp.Rpc.SerializationSelector)">
      <summary>
            设置序列化选择器。默认使用<see cref="T:TouchSocket.Dmtp.Rpc.DefaultSerializationSelector" /></summary>
      <param name="selector"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcFeature.SetSerializationSelector(TouchSocket.Dmtp.Rpc.SerializationSelector)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:TouchSocket.Dmtp.Rpc.DmtpRpcFeature.StartProtocol">
      <summary>
            起始协议
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.Rpc.DmtpRpcPackage">
      <summary>
            Rpc传输类
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcPackage.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>TouchSocket.Dmtp.Rpc.DmtpRpcPackage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.Rpc.DmtpRpcPackage.Feedback">
      <summary>
            反馈类型
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.Rpc.DmtpRpcPackage.IsByRef">
      <summary>
            参数是否包含引用类型
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.Rpc.DmtpRpcPackage.Metadata">
      <summary>
            元数据
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.Rpc.DmtpRpcPackage.MethodName">
      <summary>
            函数名
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcPackage.PackageBody(TouchSocket.Core.ByteBlock@)">
      <summary>
            打包数据体。一般不需要单独调用该方法。
            <para>重写的话，约定基类方法必须先执行</para></summary>
      <param name="byteBlock">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>byteBlock</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcPackage.PackageBody(TouchSocket.Core.ByteBlock@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:TouchSocket.Dmtp.Rpc.DmtpRpcPackage.ParametersBytes">
      <summary>
            参数数据
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.Rpc.DmtpRpcPackage.ReturnParameterBytes">
      <summary>
            返回参数数据
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.Rpc.DmtpRpcPackage.SerializationType">
      <summary>
            序列化类型
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.DmtpRpcPackage.UnpackageBody(TouchSocket.Core.ByteBlock@)">
      <summary>
            解包数据体。一般不需要单独调用该方法。
            <para>重写的话，约定基类方法必须先执行</para></summary>
      <param name="byteBlock">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>byteBlock</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.DmtpRpcPackage.UnpackageBody(TouchSocket.Core.ByteBlock@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:TouchSocket.Dmtp.Rpc.IDmtpRpcActor">
      <summary>
            能够基于Dmtp协议提供Rpc功能的接口
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.Rpc.IDmtpRpcCallContext">
      <summary>
            IDmtpRpcCallContext
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.Rpc.IDmtpRpcCallContext.DmtpRpcPackage">
      <summary>
            DmtpRpcPackage
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.Rpc.IDmtpRpcCallContext.Metadata">
      <summary>
            调用元数据
            </summary>
    </member>
    <member name="P:TouchSocket.Dmtp.Rpc.IDmtpRpcCallContext.SerializationType">
      <summary>
            序列化类型
            </summary>
    </member>
    <member name="T:TouchSocket.Dmtp.Rpc.RpcNoRegisterException">
      <summary>
            Rpc无注册异常
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.RpcNoRegisterException.#ctor">
      <summary>
            构造函数
             </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.RpcNoRegisterException.#ctor(System.String)">
      <summary>
            构造函数
             </summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.RpcNoRegisterException.#ctor(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.RpcNoRegisterException.#ctor(System.String,System.Exception)">
      <summary>
            构造函数
             </summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.RpcNoRegisterException.#ctor(System.String,System.Exception)</parameter>
          </include>
        </markup>
      </param>
      <param name="inner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>inner</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.RpcNoRegisterException.#ctor(System.String,System.Exception)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:TouchSocket.Dmtp.Rpc.RpcSerializationException">
      <summary>
            序列化异常类
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.RpcSerializationException.#ctor">
      <summary>
            构造函数
             </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.RpcSerializationException.#ctor(System.String)">
      <summary>
            构造函数
             </summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.RpcSerializationException.#ctor(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.RpcSerializationException.#ctor(System.String,System.Exception)">
      <summary>
            构造函数
             </summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.RpcSerializationException.#ctor(System.String,System.Exception)</parameter>
          </include>
        </markup>
      </param>
      <param name="inner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>inner</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.RpcSerializationException.#ctor(System.String,System.Exception)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:TouchSocket.Dmtp.Rpc.SerializationSelector">
      <summary>
            序列化选择器
            </summary>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.SerializationSelector.DeserializeParameter(TouchSocket.Core.SerializationType,System.Byte[],System.Type)">
      <summary>
            反序列化传输对象
            </summary>
      <param name="serializationType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>serializationType</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.SerializationSelector.DeserializeParameter(TouchSocket.Core.SerializationType,System.Byte[],System.Type)</parameter>
          </include>
        </markup>
      </param>
      <param name="parameterBytes">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>parameterBytes</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.SerializationSelector.DeserializeParameter(TouchSocket.Core.SerializationType,System.Byte[],System.Type)</parameter>
          </include>
        </markup>
      </param>
      <param name="parameterType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>parameterType</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.SerializationSelector.DeserializeParameter(TouchSocket.Core.SerializationType,System.Byte[],System.Type)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.SerializationSelector.DeserializeParameter(TouchSocket.Core.SerializationType,System.Byte[],System.Type)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:TouchSocket.Dmtp.Rpc.SerializationSelector.SerializeParameter(TouchSocket.Core.SerializationType,System.Object)">
      <summary>
            序列化Rpc方法返回值参数
            </summary>
      <param name="serializationType">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>serializationType</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.SerializationSelector.SerializeParameter(TouchSocket.Core.SerializationType,System.Object)</parameter>
          </include>
        </markup>
      </param>
      <param name="parameter">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>parameter</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.SerializationSelector.SerializeParameter(TouchSocket.Core.SerializationType,System.Object)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TouchSocket.Dmtp.Rpc.SerializationSelector.SerializeParameter(TouchSocket.Core.SerializationType,System.Object)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:TouchSocket.Resources.TouchSocketDmtpResource">
      <summary>
            TouchSocketDmtp资源枚举
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.UnknownError">
      <summary>
            未知错误
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.Success">
      <summary>
            操作成功
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.Overtime">
      <summary>
            操作超时
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.Canceled">
      <summary>
            用户主动取消操作。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.ArgumentNull">
      <summary>
            参数‘{0}’为空。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.Exception">
      <summary>
            发生异常，信息：{0}。
             </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.DmtpRpcActorArgumentNull">
      <summary>
            DmtpRpcActor为空，可能需要启用DmtpRpc插件。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.DmtpFileTransferActorNull">
      <summary>
            DmtpFileTransferActor为空，可能需要启用DmtpFileTransfer插件。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.RedisActorNull">
      <summary>
            RedisActor为空，可能需要启用RedisActor插件。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.RemoteAccessActorNull">
      <summary>
            RemoteAccessActor为空，可能需要启用RemoteAccess插件。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.RemoteStreamActorNull">
      <summary>
            RemoteStreamActor为空，可能需要启用RemoteStream插件。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.RoutingNotAllowed">
      <summary>
            不允许路由该包，信息：{0}。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.RpcMethodNotFind">
      <summary>
            未找到该公共方法，或该方法未标记为Rpc
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.RpcMethodDisable">
      <summary>
            方法已被禁用
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.RpcInvokeException">
      <summary>
            函数执行异常，详细信息：{0}
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.GetEventArgsFail">
      <summary>
            事件操作器异常
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.SetChannelFail">
      <summary>
            通道设置失败。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.ChannelExisted">
      <summary>
            Id为{0}的通道已存在。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.RemoteRefuse">
      <summary>
            远程终端拒绝该操作，反馈信息：{0}。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.CreateWriteStreamFail">
      <summary>
            从‘{0}’创建写入流失败，信息：{1}。"
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.StreamNotFind">
      <summary>
            没有找到路径‘{0}’对应的流文件。
             </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.ClientNotFind">
      <summary>
            没有找到Id为{0}的客户端。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.StreamReferencing">
      <summary>
            路径‘{0}’对应的流文件，仍然被‘{1}’对象应用。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.StreamBucketNull">
      <summary>
            接收流容器为空
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.LoadStreamFail">
      <summary>
            从‘{0}’路径加载流异常，信息：‘{1}’。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.DirectoryExisted">
      <summary>
            目录‘{0}’已存在。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.FileExisted">
      <summary>
            文件‘{0}’已存在。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.FileNotExists">
      <summary>
            文件‘{0}’不存在。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.DirectoryNotExists">
      <summary>
            目录‘{0}’不存在。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.EventExisted">
      <summary>
            名称为“{0}”的事件已存在
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.EventNotExist">
      <summary>
            名称为“{0}”的事件不存在
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.ResourceHandleNotFind">
      <summary>
            资源句柄{0}对应的资源没有找到，可能操作已超时。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.HasUnFinished">
      <summary>
            还有{0}个资源没有完成。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.FileLengthTooLong">
      <summary>
            文件长度太长。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.LengthErrorWhenRead">
      <summary>
            读取文件长度错误。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.NotFindAnyTargetId">
      <summary>
            没有找到任何可用的目标Id。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.TokenExisted">
      <summary>
            Token消息为‘{0}’的已注册。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.MessageNotFound">
      <summary>
            Token消息为‘{0}’的未注册。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.UnregisteredType">
      <summary>
            无法创建未被注册的类型{0}的实例。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.NotFindPublicConstructor">
      <summary>
            没有找到类型{0}的公共构造函数。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.NullDataAdapter">
      <summary>
            数据处理适配器为空，可能客户端已掉线。
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.NotConnected">
      <summary>
            客户端没有连接
            </summary>
    </member>
    <member name="F:TouchSocket.Resources.TouchSocketDmtpResource.LicenceKeyInvalid">
      <summary>
            授权密钥无效，程序将在5秒后退出。请检查密钥，或者不使用企业版功能。
            </summary>
    </member>
  </members>
</doc>